{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u4ecb\u7ecd httprunner v3.x \u4ea4\u6d41\u7fa4 \u5168\u6587\u6765\u81ea httprunner v3.x\u82f1\u6587\u6587\u6863 \u548c httprunner x2.x\u4e2d\u6587\u6587\u6863 HttpRunner \u662f\u4e00\u6b3e\u9762\u5411 HTTP(S) \u534f\u8bae\u7684\u901a\u7528\u6d4b\u8bd5\u6846\u67b6\uff0c\u53ea\u9700\u7f16\u5199\u7ef4\u62a4\u4e00\u4efd YAML/JSON \u811a\u672c\uff0c\u5373\u53ef\u5b9e\u73b0\u81ea\u52a8\u5316\u6d4b\u8bd5\u3001\u6027\u80fd\u6d4b\u8bd5\u3001\u7ebf\u4e0a\u76d1\u63a7\u3001\u6301\u7eed\u96c6\u6210\u7b49\u591a\u79cd\u6d4b\u8bd5\u9700\u6c42\u3002 \u8be5\u6587\u6863\u7ad9\u70b9\u4e0e\u6700\u65b0\u7248\u672c\u76f8\u5bf9\u5e943.x\u3002 \u8bbe\u8ba1\u54f2\u5b66 \u7ea6\u5b9a\u4f18\u4e8e\u914d\u7f6e \u6295\u5165\u4ea7\u51fa\u6bd4\u5f88\u91cd\u8981 \u62e5\u62b1\u5f00\u6e90\uff0c\u4f9d\u8d56 requests \uff0c pytest \uff0c pydantic \uff0c allure \u548c locust \u3002 \u4e3b\u8981\u7279\u5f81 \u7ee7\u627f\u7684\u6240\u6709\u5f3a\u5927\u529f\u80fd requests \uff0c\u53ea\u9700\u4ee5\u4eba\u5de5\u65b9\u5f0f\u83b7\u5f97\u4e50\u8da3\u5373\u53ef\u5904\u7406HTTP\uff08S\uff09\u3002 \u4ee5YAML\u6216JSON\u683c\u5f0f\u5b9a\u4e49\u6d4b\u8bd5\u7528\u4f8b\uff0c pytest \u4ee5\u7b80\u6d01\u4f18\u96c5\u7684\u65b9\u5f0f\u8fd0\u884c\u3002 \u5728 HAR \u652f\u6301\u4e0b\u8bb0\u5f55\u5e76\u751f\u6210\u6d4b\u8bd5\u7528\u4f8b\u3002 \u652f\u6301variables/ extract/ validate/hooks\u673a\u5236\uff0c\u4ee5\u521b\u5efa\u975e\u5e38\u590d\u6742\u7684\u6d4b\u8bd5\u65b9\u6848\u3002 \u4f7f\u7528debugtalk.py\u63d2\u4ef6\uff0c\u4efb\u4f55\u529f\u80fd\u90fd\u53ef\u4ee5\u5728\u6d4b\u8bd5\u7528\u4f8b\u7684\u4efb\u4f55\u90e8\u5206\u4f7f\u7528\u3002 \u4f7f\u7528 jmespath \uff0c\u63d0\u53d6\u548c\u9a8c\u8bc1json\u54cd\u5e94\u4ece\u672a\u5982\u6b64\u7b80\u5355\u3002 \u6709\u4e86 pytest \uff0c\u6570\u767e\u4e2a\u63d2\u4ef6\u968f\u65f6\u53ef\u7528\u3002 \u4f7f\u7528 allure \uff0c\u6d4b\u8bd5\u62a5\u544a\u53ef\u4ee5\u975e\u5e38\u5f3a\u5927\u3002 \u901a\u8fc7\u91cd\u590d\u4f7f\u7528 locust \uff0c\u60a8\u53ef\u4ee5\u8fdb\u884c\u6027\u80fd\u6d4b\u8bd5\uff0c\u800c\u65e0\u9700\u8fdb\u884c\u989d\u5916\u7684\u5de5\u4f5c\u3002 \u652f\u6301CLI\u547d\u4ee4\uff0c\u4e0eCI/CD\u5b8c\u7f8e\u7ed3\u5408\u3002 \u4e5f\u6b22\u8fce\u5927\u5bb6\u6765\u53c2\u89c2\u4e2a\u4eba\u535a\u5ba2(\u70b9\u51fb\u8df3\u8f6c)\uff0c\u4e3b\u8981\u8bb0\u5f55\u4e2a\u4eba\u6280\u672f\u3001\u751f\u6d3b\u3001\u7406\u8d22\u76f8\u5173\u7684\u5fc3\u5f97\u4f53\u4f1a\u3002","title":"\u4ecb\u7ecd"},{"location":"#_1","text":"","title":"\u4ecb\u7ecd"},{"location":"#httprunner-v3x","text":"\u5168\u6587\u6765\u81ea httprunner v3.x\u82f1\u6587\u6587\u6863 \u548c httprunner x2.x\u4e2d\u6587\u6587\u6863 HttpRunner \u662f\u4e00\u6b3e\u9762\u5411 HTTP(S) \u534f\u8bae\u7684\u901a\u7528\u6d4b\u8bd5\u6846\u67b6\uff0c\u53ea\u9700\u7f16\u5199\u7ef4\u62a4\u4e00\u4efd YAML/JSON \u811a\u672c\uff0c\u5373\u53ef\u5b9e\u73b0\u81ea\u52a8\u5316\u6d4b\u8bd5\u3001\u6027\u80fd\u6d4b\u8bd5\u3001\u7ebf\u4e0a\u76d1\u63a7\u3001\u6301\u7eed\u96c6\u6210\u7b49\u591a\u79cd\u6d4b\u8bd5\u9700\u6c42\u3002 \u8be5\u6587\u6863\u7ad9\u70b9\u4e0e\u6700\u65b0\u7248\u672c\u76f8\u5bf9\u5e943.x\u3002","title":"httprunner v3.x \u4ea4\u6d41\u7fa4"},{"location":"#_2","text":"\u7ea6\u5b9a\u4f18\u4e8e\u914d\u7f6e \u6295\u5165\u4ea7\u51fa\u6bd4\u5f88\u91cd\u8981 \u62e5\u62b1\u5f00\u6e90\uff0c\u4f9d\u8d56 requests \uff0c pytest \uff0c pydantic \uff0c allure \u548c locust \u3002","title":"\u8bbe\u8ba1\u54f2\u5b66"},{"location":"#_3","text":"\u7ee7\u627f\u7684\u6240\u6709\u5f3a\u5927\u529f\u80fd requests \uff0c\u53ea\u9700\u4ee5\u4eba\u5de5\u65b9\u5f0f\u83b7\u5f97\u4e50\u8da3\u5373\u53ef\u5904\u7406HTTP\uff08S\uff09\u3002 \u4ee5YAML\u6216JSON\u683c\u5f0f\u5b9a\u4e49\u6d4b\u8bd5\u7528\u4f8b\uff0c pytest \u4ee5\u7b80\u6d01\u4f18\u96c5\u7684\u65b9\u5f0f\u8fd0\u884c\u3002 \u5728 HAR \u652f\u6301\u4e0b\u8bb0\u5f55\u5e76\u751f\u6210\u6d4b\u8bd5\u7528\u4f8b\u3002 \u652f\u6301variables/ extract/ validate/hooks\u673a\u5236\uff0c\u4ee5\u521b\u5efa\u975e\u5e38\u590d\u6742\u7684\u6d4b\u8bd5\u65b9\u6848\u3002 \u4f7f\u7528debugtalk.py\u63d2\u4ef6\uff0c\u4efb\u4f55\u529f\u80fd\u90fd\u53ef\u4ee5\u5728\u6d4b\u8bd5\u7528\u4f8b\u7684\u4efb\u4f55\u90e8\u5206\u4f7f\u7528\u3002 \u4f7f\u7528 jmespath \uff0c\u63d0\u53d6\u548c\u9a8c\u8bc1json\u54cd\u5e94\u4ece\u672a\u5982\u6b64\u7b80\u5355\u3002 \u6709\u4e86 pytest \uff0c\u6570\u767e\u4e2a\u63d2\u4ef6\u968f\u65f6\u53ef\u7528\u3002 \u4f7f\u7528 allure \uff0c\u6d4b\u8bd5\u62a5\u544a\u53ef\u4ee5\u975e\u5e38\u5f3a\u5927\u3002 \u901a\u8fc7\u91cd\u590d\u4f7f\u7528 locust \uff0c\u60a8\u53ef\u4ee5\u8fdb\u884c\u6027\u80fd\u6d4b\u8bd5\uff0c\u800c\u65e0\u9700\u8fdb\u884c\u989d\u5916\u7684\u5de5\u4f5c\u3002 \u652f\u6301CLI\u547d\u4ee4\uff0c\u4e0eCI/CD\u5b8c\u7f8e\u7ed3\u5408\u3002 \u4e5f\u6b22\u8fce\u5927\u5bb6\u6765\u53c2\u89c2\u4e2a\u4eba\u535a\u5ba2(\u70b9\u51fb\u8df3\u8f6c)\uff0c\u4e3b\u8981\u8bb0\u5f55\u4e2a\u4eba\u6280\u672f\u3001\u751f\u6d3b\u3001\u7406\u8d22\u76f8\u5173\u7684\u5fc3\u5f97\u4f53\u4f1a\u3002","title":"\u4e3b\u8981\u7279\u5f81"},{"location":"install/","text":"\u5b89\u88c5 HttpRunner\u4f7f\u7528python\u5f00\u53d1\uff0c\u652f\u6301Python 3.6+\u548c\u5927\u591a\u6570\u64cd\u4f5c\u7cfb\u7edf\u3002 \u5728Python 3.6/3.7/3.8\u4e0a \u548c MacOS/Linux/Windows\u4e0a\uff0c\u57fa\u4e8e GitHub-Actions \u4e0a\u8fdb\u884c\u4e86\u6d4b\u8bd5\u3002 \u5b89\u88c5 HttpRunner\u5b58\u50a8\u4e8ePyPI, \u652f\u6301\u901a\u8fc7pip\u5b89\u88c5\u3002 pip3 install httprunner \u5982\u679c\u4f60\u60f3\u4fdd\u6301\u6700\u65b0\u7248\u672c\uff0c\u53ef\u7528github\u8d44\u6e90\u5730\u5740\u5b89\u88c5\u3002 pip3 install git+https://github.com/httprunner/httprunner.git@master \u5982\u679c\u4f60\u4e4b\u524d\u5df2\u5b89\u88c5\u8fc7HttpRunner\uff0c\u60f3\u66f4\u65b0\u5230\u6700\u65b0\u7248\u672c\uff0c\u53ef\u4ee5\u4f7f\u7528-U\u9009\u9879\u3002 pip3 install -U httprunner pip3 install -U git+https://github.com/httprunner/httprunner.git@master \u5b89\u88c5\u68c0\u67e5 \u5b89\u88c5HttpRunner\u540e\uff0c\u4ee5\u4e0b5\u4e2a\u547d\u4ee4\u4f1a\u5199\u5165\u7cfb\u7edf\u73af\u5883\u53d8\u91cf\u914d\u7f6e\u3002 * httprunner \uff1a\u4e3b\u547d\u4ee4\uff0c\u7528\u4e8e\u6240\u6709\u529f\u80fd\u3002 * hrun \uff1a\u6307\u4ee4 httprunner run \u7684\u522b\u540d\uff0c\u7528\u4e8e\u8fd0\u884cYAML/JSON/Pytest \u6d4b\u8bd5\u7528\u4f8b\u3002 * hmake : \u6307\u4ee4 httprunner make \u7684\u522b\u540d\uff0c\u5c06YAML/JSON\u7528\u4f8b\u8f6c\u6362\u6210pytest\u7528\u4f8b\u3002 * har2case \uff1a\u6307\u4ee4 httprunner har2case \u7684\u522b\u540d\uff0c\u5c06HAR\u6587\u4ef6\u8f6c\u6362\u6210 YAML/JSON \u7528\u4f8b\u3002 * locust : \u5229\u7528 locust \u8fd0\u884c\u6027\u80fd\u6d4b\u8bd5\u3002 \u67e5\u770b httprunner \u7248\u672c\uff1a $ httprunner -V # hrun -V 3.1.0 \u67e5\u770b\u53ef\u4ee5\u4f7f\u7528\u7684\u529f\u80fd\u9009\u9879\uff0c\u8fd0\u884c: $ httprunner -h usage: httprunner [-h] [-V] {run,startproject,har2case,make} ... \u4e00\u79cdHTTP(S)\u6d4b\u8bd5\u7684\u89e3\u51b3\u65b9\u6848\u3002 \u9009\u9879\u8bf4\u660e: {run,startproject,har2case,make} \u5b50\u547d\u4ee4\u8bf4\u660e run Make HttpRunner testcases and run with pytest. startproject Create a new project with template structure. har2case Convert HAR(HTTP Archive) to YAML/JSON testcases for HttpRunner. make Convert YAML/JSON testcases to pytest cases. optional arguments: -h, --help show this help message and exit -V, --version show version \u6ce8\u610f\uff1a locust \u662f\u4e00\u4e2a\u5355\u72ec\u7684\u547d\u4ee4\uff0c locust \u8fd0\u884c\u5f00\u59cb\u9636\u6bb5\u65f6\uff0cmonkey patch ssl\u907f\u514d\u9012\u5f52\u9519\u8bef","title":"\u5b89\u88c5"},{"location":"install/#_1","text":"HttpRunner\u4f7f\u7528python\u5f00\u53d1\uff0c\u652f\u6301Python 3.6+\u548c\u5927\u591a\u6570\u64cd\u4f5c\u7cfb\u7edf\u3002 \u5728Python 3.6/3.7/3.8\u4e0a \u548c MacOS/Linux/Windows\u4e0a\uff0c\u57fa\u4e8e GitHub-Actions \u4e0a\u8fdb\u884c\u4e86\u6d4b\u8bd5\u3002","title":"\u5b89\u88c5"},{"location":"install/#_2","text":"HttpRunner\u5b58\u50a8\u4e8ePyPI, \u652f\u6301\u901a\u8fc7pip\u5b89\u88c5\u3002 pip3 install httprunner \u5982\u679c\u4f60\u60f3\u4fdd\u6301\u6700\u65b0\u7248\u672c\uff0c\u53ef\u7528github\u8d44\u6e90\u5730\u5740\u5b89\u88c5\u3002 pip3 install git+https://github.com/httprunner/httprunner.git@master \u5982\u679c\u4f60\u4e4b\u524d\u5df2\u5b89\u88c5\u8fc7HttpRunner\uff0c\u60f3\u66f4\u65b0\u5230\u6700\u65b0\u7248\u672c\uff0c\u53ef\u4ee5\u4f7f\u7528-U\u9009\u9879\u3002 pip3 install -U httprunner pip3 install -U git+https://github.com/httprunner/httprunner.git@master","title":"\u5b89\u88c5"},{"location":"install/#_3","text":"\u5b89\u88c5HttpRunner\u540e\uff0c\u4ee5\u4e0b5\u4e2a\u547d\u4ee4\u4f1a\u5199\u5165\u7cfb\u7edf\u73af\u5883\u53d8\u91cf\u914d\u7f6e\u3002 * httprunner \uff1a\u4e3b\u547d\u4ee4\uff0c\u7528\u4e8e\u6240\u6709\u529f\u80fd\u3002 * hrun \uff1a\u6307\u4ee4 httprunner run \u7684\u522b\u540d\uff0c\u7528\u4e8e\u8fd0\u884cYAML/JSON/Pytest \u6d4b\u8bd5\u7528\u4f8b\u3002 * hmake : \u6307\u4ee4 httprunner make \u7684\u522b\u540d\uff0c\u5c06YAML/JSON\u7528\u4f8b\u8f6c\u6362\u6210pytest\u7528\u4f8b\u3002 * har2case \uff1a\u6307\u4ee4 httprunner har2case \u7684\u522b\u540d\uff0c\u5c06HAR\u6587\u4ef6\u8f6c\u6362\u6210 YAML/JSON \u7528\u4f8b\u3002 * locust : \u5229\u7528 locust \u8fd0\u884c\u6027\u80fd\u6d4b\u8bd5\u3002 \u67e5\u770b httprunner \u7248\u672c\uff1a $ httprunner -V # hrun -V 3.1.0 \u67e5\u770b\u53ef\u4ee5\u4f7f\u7528\u7684\u529f\u80fd\u9009\u9879\uff0c\u8fd0\u884c: $ httprunner -h usage: httprunner [-h] [-V] {run,startproject,har2case,make} ... \u4e00\u79cdHTTP(S)\u6d4b\u8bd5\u7684\u89e3\u51b3\u65b9\u6848\u3002 \u9009\u9879\u8bf4\u660e: {run,startproject,har2case,make} \u5b50\u547d\u4ee4\u8bf4\u660e run Make HttpRunner testcases and run with pytest. startproject Create a new project with template structure. har2case Convert HAR(HTTP Archive) to YAML/JSON testcases for HttpRunner. make Convert YAML/JSON testcases to pytest cases. optional arguments: -h, --help show this help message and exit -V, --version show version \u6ce8\u610f\uff1a locust \u662f\u4e00\u4e2a\u5355\u72ec\u7684\u547d\u4ee4\uff0c locust \u8fd0\u884c\u5f00\u59cb\u9636\u6bb5\u65f6\uff0cmonkey patch ssl\u907f\u514d\u9012\u5f52\u9519\u8bef","title":"\u5b89\u88c5\u68c0\u67e5"},{"location":"scaffold/","text":"\u811a\u624b\u67b6 \u5982\u679c\u4f60\u60f3\u521b\u5efa\u4e00\u4e2a\u6d4b\u8bd5\u9879\u76ee\uff0c\u53ef\u4ee5\u4f7f\u7528\u811a\u624b\u67b6\u5feb\u901f\u521b\u5efa\u3002 \u5e2e\u52a9 $ httprunner startproject -h \u7528\u6cd5: httprunner startproject [-h] [project_name] positional arguments: project_name \u6307\u5b9a\u65b0\u7684\u9879\u76ee\u540d\u79f0 optional arguments: -h, --help \u5c55\u793a\u5e2e\u52a9\u4fe1\u606f\u5e76\u9000\u51fa \u521b\u5efa\u65b0\u9879\u76ee \u552f\u4e00\u9700\u8981\u6307\u5b9a\u7684\u5c31\u662f\u9879\u76ee\u540d\u79f0\u3002 $ httprunner startproject demo 2020-06-15 11:53:25.498 | INFO | httprunner.scaffold:create_scaffold:37 - Create new project: demo Project Root Dir: /Users/debugtalk/MyProjects/HttpRunner-dev/HttpRunner/demo created folder: demo created folder: demo/har created folder: demo/testcases created folder: demo/reports created file: demo/testcases/demo_testcase_request.yml created file: demo/testcases/demo_testcase_ref.yml created file: demo/debugtalk.py created file: demo/.env created file: demo/.gitignore $ tree demo -a demo \u251c\u2500\u2500 .env \u251c\u2500\u2500 .gitignore \u251c\u2500\u2500 debugtalk.py \u251c\u2500\u2500 har \u251c\u2500\u2500 reports \u2514\u2500\u2500 testcases \u251c\u2500\u2500 demo_testcase_ref.yml \u2514\u2500\u2500 demo_testcase_request.yml 3 directories, 5 files \u5982\u679c\u4f60\u6307\u5b9a\u7684\u9879\u76ee\u540d\u5df2\u5b58\u5728\uff0c\u4f1a\u6709\u5982\u4e0b\u8b66\u544a\uff1a $ httprunner startproject demo 2020-06-15 11:55:03.192 | WARNING | httprunner.scaffold:create_scaffold:32 - Project demo exists, please specify a new project name. $ tree demo -a demo \u251c\u2500\u2500 .env \u251c\u2500\u2500 .gitignore \u251c\u2500\u2500 debugtalk.py \u251c\u2500\u2500 har \u251c\u2500\u2500 reports \u2514\u2500\u2500 testcases \u251c\u2500\u2500 demo_testcase_ref.yml \u2514\u2500\u2500 demo_testcase_request.yml 3 directories, 5 files \u8fd0\u884c\u811a\u624b\u67b6\u9879\u76ee \u811a\u624b\u67b6\u9879\u76ee\u6709\u51e0\u4e2a\u6709\u6548\u7684\u6d4b\u8bd5\u7528\u4f8b\uff0c\u6240\u4ee5\u53ef\u4ee5\u65e0\u9700\u7f16\u8f91\u76f4\u63a5\u8fd0\u884c\u3002 $ hrun demo 2020-06-15 11:57:15.883 | INFO | httprunner.loader:load_dot_env_file:130 - Loading environment variables from /Users/debugtalk/MyProjects/HttpRunner-dev/HttpRunner/demo/.env 2020-06-15 11:57:15.883 | DEBUG | httprunner.utils:set_os_environ:32 - Set OS environment variable: USERNAME 2020-06-15 11:57:15.884 | DEBUG | httprunner.utils:set_os_environ:32 - Set OS environment variable: PASSWORD 2020-06-15 11:57:15.885 | INFO | httprunner.make:make_testcase:310 - start to make testcase: /Users/debugtalk/MyProjects/HttpRunner-dev/HttpRunner/demo/testcases/demo_testcase_ref.yml 2020-06-15 11:57:15.898 | INFO | httprunner.make:make_testcase:310 - start to make testcase: /Users/debugtalk/MyProjects/HttpRunner-dev/HttpRunner/demo/testcases/demo_testcase_request.yml 2020-06-15 11:57:15.899 | INFO | httprunner.make:make_testcase:383 - generated testcase: /Users/debugtalk/MyProjects/HttpRunner-dev/HttpRunner/demo/testcases/demo_testcase_request_test.py 2020-06-15 11:57:15.900 | INFO | httprunner.make:make_testcase:383 - generated testcase: /Users/debugtalk/MyProjects/HttpRunner-dev/HttpRunner/demo/testcases/demo_testcase_ref_test.py 2020-06-15 11:57:15.911 | INFO | httprunner.make:make_testcase:310 - start to make testcase: /Users/debugtalk/MyProjects/HttpRunner-dev/HttpRunner/demo/testcases/demo_testcase_request.yml 2020-06-15 11:57:15.912 | INFO | httprunner.make:__ensure_project_meta_files:128 - copy .env to /Users/debugtalk/MyProjects/HttpRunner-dev/HttpRunner/demo/_env 2020-06-15 11:57:15.912 | INFO | httprunner.make:format_pytest_with_black:147 - format pytest cases with black ... reformatted /Users/debugtalk/MyProjects/HttpRunner-dev/HttpRunner/demo/testcases/demo_testcase_ref_test.py reformatted /Users/debugtalk/MyProjects/HttpRunner-dev/HttpRunner/demo/testcases/demo_testcase_request_test.py All done! \u2728 \ud83c\udf70 \u2728 2 files reformatted, 1 file left unchanged. 2020-06-15 11:57:16.299 | INFO | httprunner.cli:main_run:56 - start to run tests with pytest. HttpRunner version: 3.0.12 ====================================================================== test session starts ====================================================================== platform darwin -- Python 3.7.5, pytest-5.4.2, py-1.8.1, pluggy-0.13.1 rootdir: /Users/debugtalk/MyProjects/HttpRunner-dev/HttpRunner plugins: metadata-1.9.0, allure-pytest-2.8.16, html-2.1.1 collected 2 items demo/testcases/demo_testcase_request_test.py . [ 50%] demo/testcases/demo_testcase_ref_test.py . [100%] ======================================================================= 2 passed in 6.87s =======================================================================","title":"\u5feb\u901f\u5f00\u59cb(\u811a\u624b\u67b6)"},{"location":"scaffold/#_1","text":"\u5982\u679c\u4f60\u60f3\u521b\u5efa\u4e00\u4e2a\u6d4b\u8bd5\u9879\u76ee\uff0c\u53ef\u4ee5\u4f7f\u7528\u811a\u624b\u67b6\u5feb\u901f\u521b\u5efa\u3002","title":"\u811a\u624b\u67b6"},{"location":"scaffold/#_2","text":"$ httprunner startproject -h \u7528\u6cd5: httprunner startproject [-h] [project_name] positional arguments: project_name \u6307\u5b9a\u65b0\u7684\u9879\u76ee\u540d\u79f0 optional arguments: -h, --help \u5c55\u793a\u5e2e\u52a9\u4fe1\u606f\u5e76\u9000\u51fa","title":"\u5e2e\u52a9"},{"location":"scaffold/#_3","text":"\u552f\u4e00\u9700\u8981\u6307\u5b9a\u7684\u5c31\u662f\u9879\u76ee\u540d\u79f0\u3002 $ httprunner startproject demo 2020-06-15 11:53:25.498 | INFO | httprunner.scaffold:create_scaffold:37 - Create new project: demo Project Root Dir: /Users/debugtalk/MyProjects/HttpRunner-dev/HttpRunner/demo created folder: demo created folder: demo/har created folder: demo/testcases created folder: demo/reports created file: demo/testcases/demo_testcase_request.yml created file: demo/testcases/demo_testcase_ref.yml created file: demo/debugtalk.py created file: demo/.env created file: demo/.gitignore $ tree demo -a demo \u251c\u2500\u2500 .env \u251c\u2500\u2500 .gitignore \u251c\u2500\u2500 debugtalk.py \u251c\u2500\u2500 har \u251c\u2500\u2500 reports \u2514\u2500\u2500 testcases \u251c\u2500\u2500 demo_testcase_ref.yml \u2514\u2500\u2500 demo_testcase_request.yml 3 directories, 5 files \u5982\u679c\u4f60\u6307\u5b9a\u7684\u9879\u76ee\u540d\u5df2\u5b58\u5728\uff0c\u4f1a\u6709\u5982\u4e0b\u8b66\u544a\uff1a $ httprunner startproject demo 2020-06-15 11:55:03.192 | WARNING | httprunner.scaffold:create_scaffold:32 - Project demo exists, please specify a new project name. $ tree demo -a demo \u251c\u2500\u2500 .env \u251c\u2500\u2500 .gitignore \u251c\u2500\u2500 debugtalk.py \u251c\u2500\u2500 har \u251c\u2500\u2500 reports \u2514\u2500\u2500 testcases \u251c\u2500\u2500 demo_testcase_ref.yml \u2514\u2500\u2500 demo_testcase_request.yml 3 directories, 5 files","title":"\u521b\u5efa\u65b0\u9879\u76ee"},{"location":"scaffold/#_4","text":"\u811a\u624b\u67b6\u9879\u76ee\u6709\u51e0\u4e2a\u6709\u6548\u7684\u6d4b\u8bd5\u7528\u4f8b\uff0c\u6240\u4ee5\u53ef\u4ee5\u65e0\u9700\u7f16\u8f91\u76f4\u63a5\u8fd0\u884c\u3002 $ hrun demo 2020-06-15 11:57:15.883 | INFO | httprunner.loader:load_dot_env_file:130 - Loading environment variables from /Users/debugtalk/MyProjects/HttpRunner-dev/HttpRunner/demo/.env 2020-06-15 11:57:15.883 | DEBUG | httprunner.utils:set_os_environ:32 - Set OS environment variable: USERNAME 2020-06-15 11:57:15.884 | DEBUG | httprunner.utils:set_os_environ:32 - Set OS environment variable: PASSWORD 2020-06-15 11:57:15.885 | INFO | httprunner.make:make_testcase:310 - start to make testcase: /Users/debugtalk/MyProjects/HttpRunner-dev/HttpRunner/demo/testcases/demo_testcase_ref.yml 2020-06-15 11:57:15.898 | INFO | httprunner.make:make_testcase:310 - start to make testcase: /Users/debugtalk/MyProjects/HttpRunner-dev/HttpRunner/demo/testcases/demo_testcase_request.yml 2020-06-15 11:57:15.899 | INFO | httprunner.make:make_testcase:383 - generated testcase: /Users/debugtalk/MyProjects/HttpRunner-dev/HttpRunner/demo/testcases/demo_testcase_request_test.py 2020-06-15 11:57:15.900 | INFO | httprunner.make:make_testcase:383 - generated testcase: /Users/debugtalk/MyProjects/HttpRunner-dev/HttpRunner/demo/testcases/demo_testcase_ref_test.py 2020-06-15 11:57:15.911 | INFO | httprunner.make:make_testcase:310 - start to make testcase: /Users/debugtalk/MyProjects/HttpRunner-dev/HttpRunner/demo/testcases/demo_testcase_request.yml 2020-06-15 11:57:15.912 | INFO | httprunner.make:__ensure_project_meta_files:128 - copy .env to /Users/debugtalk/MyProjects/HttpRunner-dev/HttpRunner/demo/_env 2020-06-15 11:57:15.912 | INFO | httprunner.make:format_pytest_with_black:147 - format pytest cases with black ... reformatted /Users/debugtalk/MyProjects/HttpRunner-dev/HttpRunner/demo/testcases/demo_testcase_ref_test.py reformatted /Users/debugtalk/MyProjects/HttpRunner-dev/HttpRunner/demo/testcases/demo_testcase_request_test.py All done! \u2728 \ud83c\udf70 \u2728 2 files reformatted, 1 file left unchanged. 2020-06-15 11:57:16.299 | INFO | httprunner.cli:main_run:56 - start to run tests with pytest. HttpRunner version: 3.0.12 ====================================================================== test session starts ====================================================================== platform darwin -- Python 3.7.5, pytest-5.4.2, py-1.8.1, pluggy-0.13.1 rootdir: /Users/debugtalk/MyProjects/HttpRunner-dev/HttpRunner plugins: metadata-1.9.0, allure-pytest-2.8.16, html-2.1.1 collected 2 items demo/testcases/demo_testcase_request_test.py . [ 50%] demo/testcases/demo_testcase_ref_test.py . [100%] ======================================================================= 2 passed in 6.87s =======================================================================","title":"\u8fd0\u884c\u811a\u624b\u67b6\u9879\u76ee"},{"location":"concepts/debugtalk.py/","text":"debugtalk.py \u57fa\u4e8e\u7ea6\u5b9a\u5927\u4e8e\u914d\u7f6e\u7684\u539f\u5219\uff0c\u6bcf\u4e2a\u9879\u76ee\u6709\u4e14\u53ea\u6709\u4e00\u4e2adebugtalk.py\uff0c\u8be5\u6587\u4ef6\u62e5\u6709\u591a\u79cd\u529f\u80fd\u3002 \u4f5c\u4e3a\u9879\u76ee\u6839\u8def\u5f84\u7684\u951a\uff0c\u6d4b\u8bd5\u7528\u4f8b\u4e2d\u7684\u76f8\u5bf9\u8def\u5f84\uff08\u4f8b\u5982\u5f15\u7528\u6d4b\u8bd5\u7528\u4f8b\u6216CSV\u6587\u4ef6\uff09\u90fd\u57fa\u4e8e\u6b64\u6839\u8def\u5f84\u3002 \u5b58\u50a8\u81ea\u5b9a\u4e49\u7684python\u51fd\u6570\uff0c\u5728\u6d4b\u8bd5\u7528\u4f8b\u4e2d\u8c03\u7528\u7684\u51fd\u6570\u5747\u5728\u6b64\u6587\u4ef6\u4e2d\u5b9a\u4e49","title":"debugtalk.py"},{"location":"concepts/debugtalk.py/#debugtalkpy","text":"\u57fa\u4e8e\u7ea6\u5b9a\u5927\u4e8e\u914d\u7f6e\u7684\u539f\u5219\uff0c\u6bcf\u4e2a\u9879\u76ee\u6709\u4e14\u53ea\u6709\u4e00\u4e2adebugtalk.py\uff0c\u8be5\u6587\u4ef6\u62e5\u6709\u591a\u79cd\u529f\u80fd\u3002 \u4f5c\u4e3a\u9879\u76ee\u6839\u8def\u5f84\u7684\u951a\uff0c\u6d4b\u8bd5\u7528\u4f8b\u4e2d\u7684\u76f8\u5bf9\u8def\u5f84\uff08\u4f8b\u5982\u5f15\u7528\u6d4b\u8bd5\u7528\u4f8b\u6216CSV\u6587\u4ef6\uff09\u90fd\u57fa\u4e8e\u6b64\u6839\u8def\u5f84\u3002 \u5b58\u50a8\u81ea\u5b9a\u4e49\u7684python\u51fd\u6570\uff0c\u5728\u6d4b\u8bd5\u7528\u4f8b\u4e2d\u8c03\u7528\u7684\u51fd\u6570\u5747\u5728\u6b64\u6587\u4ef6\u4e2d\u5b9a\u4e49","title":"debugtalk.py"},{"location":"concepts/dot-env/","text":"\u73af\u5883\u53d8\u91cf \u73af\u5883\u53d8\u91cf\u7684\u4f5c\u7528 \u5728\u81ea\u52a8\u5316\u6d4b\u8bd5\u4e2d\uff0c\u6709\u65f6\u9700\u8981\u501f\u52a9\u73af\u5883\u53d8\u91cf\u5b9e\u73b0\u67d0\u4e9b\u7279\u5b9a\u7684\u76ee\u7684\uff0c\u5e38\u89c1\u7684\u573a\u666f\u5305\u62ec\uff1a \u5207\u6362\u6d4b\u8bd5\u73af\u5883 \u5207\u6362\u6d4b\u8bd5\u914d\u7f6e \u5b58\u50a8\u654f\u611f\u6570\u636e\uff08\u4ece \u4fe1\u606f\u5b89\u5168 \u7684\u89d2\u5ea6\u51fa\u53d1\uff09 \u8bbe\u7f6e\u73af\u5883\u53d8\u91cf \u5728\u7ec8\u7aef\u4e2d\u9884\u8bbe\u73af\u5883\u53d8\u91cf \u4f7f\u7528\u73af\u5883\u53d8\u91cf\u4e4b\u524d\uff0c\u9700\u8981\u5148\u5728\u7cfb\u7edf\u4e2d\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\u540d\u79f0\u548c\u503c\uff0c\u4f20\u7edf\u7684\u65b9\u5f0f\u4e3a\u4f7f\u7528 export \u547d\u4ee4\uff08Windows\u7cfb\u7edf\u4e2d\u4f7f\u7528 set \u547d\u4ee4\uff09\uff1a $ export UserName=admin $ echo $UserName admin $ export Password=123456 $ echo $Password 123456 \u7136\u540e\uff0c\u5728\u7a0b\u5e8f\u4e2d\u5c31\u53ef\u4ee5\u5bf9\u7cfb\u7edf\u4e2d\u7684\u73af\u5883\u53d8\u91cf\u8fdb\u884c\u8bfb\u53d6\u3002 $ python >>> import os >>> os.environ[\"UserName\"] 'admin' [\u63a8\u8350]\u901a\u8fc7 .env \u6587\u4ef6\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf \u9664\u4e86\u8fd9\u79cd\u65b9\u5f0f\uff0cHttpRunner \u8fd8\u501f\u9274\u4e86 pipenv \u52a0\u8f7d .env \u7684\u65b9\u5f0f \u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5728\u81ea\u52a8\u5316\u6d4b\u8bd5\u9879\u76ee\u7684\u6839\u76ee\u5f55\u4e2d\uff0c\u521b\u5efa .env \u6587\u4ef6\uff0c\u5e76\u5c06\u654f\u611f\u6570\u636e\u4fe1\u606f\u653e\u7f6e\u5230\u5176\u4e2d\uff0c\u5b58\u50a8\u91c7\u7528 name=value \u7684\u683c\u5f0f\uff1a \u811a\u624b\u67b6\u751f\u6210\u7684\u63a5\u53e3\u6d4b\u8bd5\u9879\u76ee\u4e2d\uff0c\u4f1a\u81ea\u52a8\u751f\u6210.env\u6587\u4ef6\uff0c\u53ef\u76f4\u63a5\u5728.env\u4e2d\u6dfb\u52a0\u73af\u5883\u53d8\u91cf: \u6ce8\u610f\uff1a.env\u4e0d\u5141\u8bb8\u6709\u7a7a\u884c\uff0c\u53ef\u4ee5\u6ce8\u91ca\u6389\u4e0d\u9700\u8981\u7684\u53d8\u91cf \u5f15\u7528\u73af\u5883\u53d8\u91cf \u5728 HttpRunner \u4e2d\u5185\u7f6e\u4e86\u51fd\u6570 environ\uff08\u7b80\u79f0 ENV\uff09\uff0c\u53ef\u7528\u4e8e\u5728 YAML/JSON \u811a\u672c\u4e2d\u76f4\u63a5\u5f15\u7528\u73af\u5883\u53d8\u91cf\u3002 teststeps: - name: login request: url: http://host/api/login method: POST headers: Content-Type: application/json json: username: ${ENV(UserName)} password: ${ENV(Password)} validate: - eq: [status_code, 200] \u82e5\u8fd8\u9700\u5bf9\u8bfb\u53d6\u7684\u73af\u5883\u53d8\u91cf\u505a\u8fdb\u4e00\u6b65\u5904\u7406\uff0c\u5219\u53ef\u4ee5\u5728 debugtalk.py \u901a\u8fc7 Python \u5185\u7f6e\u7684\u51fd\u6570 os.environ \u5bf9\u73af\u5883\u53d8\u91cf\u8fdb\u884c\u5f15\u7528\uff0c\u7136\u540e\u518d\u5b9e\u73b0\u5904\u7406\u903b\u8f91\u3002 \u4f8b\u5982\uff0c\u82e5\u53d1\u8d77\u8bf7\u6c42\u7684\u5bc6\u7801\u9700\u8981\u5148\u4e0e\u5bc6\u94a5\u8fdb\u884c\u62fc\u63a5\u5e76\u751f\u6210 MD5\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u5728 debugtalk.py \u6587\u4ef6\u4e2d\u5b9e\u73b0\u5982\u4e0b\u51fd\u6570\uff1a import os def get_encrypt_password(): raw_passwd = os.environ[\"Password\"] PROJECT_KEY = os.environ[\"PROJECT_KEY\"]) password = (raw_passwd + PROJECT_KEY).encode('ascii') return hmac.new(password, hashlib.sha1).hexdigest() \u7136\u540e\uff0c\u5728 YAML/JSON \u683c\u5f0f\u7684\u6d4b\u8bd5\u7528\u4f8b\u4e2d\uff0c\u5c31\u53ef\u4ee5\u901a\u8fc7${func()}\u7684\u65b9\u5f0f\u5f15\u7528\u73af\u5883\u53d8\u91cf\u7684\u503c\u4e86\u3002 teststeps: - name: login request: url: http://host/api/login method: POST headers: Content-Type: application/json json: username: ${ENV(UserName)} password: ${get_encrypt_password()} validate: - eq: [status_code, 200] \u6307\u5b9a.env\u6267\u884c\u6682\u672a\u627e\u5230\u8fd0\u884c\u65b9\u6cd5 \u6ce8\u610f\uff1ahttprunner v2.x\u652f\u6301\uff0c\u4f46\u662fv3.x\u6682\u4e0d\u652f\u6301\u4ee5\u4e0b\u65b9\u5f0f\u8fd0\u884c\u6307\u5b9a.env\u3002 \u82e5\u9700\u52a0\u8f7d\u4e0d\u4f4d\u4e8e\u81ea\u52a8\u5316\u9879\u76ee\u6839\u76ee\u5f55\u4e2d\u7684 .env\uff0c\u6216\u8005\u5176\u5b83\u540d\u79f0\u7684 .env \u6587\u4ef6\uff08\u4f8b\u5982 production.env\uff09\uff0c\u53ef\u4ee5\u91c7\u7528 --dot-env-path \u53c2\u6570\u6307\u5b9a\u6587\u4ef6\u8def\u5f84\uff1a $ hrun /path/to/testcase.yml --dot-env-path /path/to/.env --log-level debug INFO Loading environment variables from /path/to/.env DEBUG Loaded variable: UserName DEBUG Loaded variable: Password DEBUG Loaded variable: PROJECT_KEY ...","title":"\u73af\u5883\u53d8\u91cf"},{"location":"concepts/dot-env/#_1","text":"","title":"\u73af\u5883\u53d8\u91cf"},{"location":"concepts/dot-env/#_2","text":"\u5728\u81ea\u52a8\u5316\u6d4b\u8bd5\u4e2d\uff0c\u6709\u65f6\u9700\u8981\u501f\u52a9\u73af\u5883\u53d8\u91cf\u5b9e\u73b0\u67d0\u4e9b\u7279\u5b9a\u7684\u76ee\u7684\uff0c\u5e38\u89c1\u7684\u573a\u666f\u5305\u62ec\uff1a \u5207\u6362\u6d4b\u8bd5\u73af\u5883 \u5207\u6362\u6d4b\u8bd5\u914d\u7f6e \u5b58\u50a8\u654f\u611f\u6570\u636e\uff08\u4ece \u4fe1\u606f\u5b89\u5168 \u7684\u89d2\u5ea6\u51fa\u53d1\uff09","title":"\u73af\u5883\u53d8\u91cf\u7684\u4f5c\u7528"},{"location":"concepts/dot-env/#_3","text":"","title":"\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf"},{"location":"concepts/dot-env/#_4","text":"\u4f7f\u7528\u73af\u5883\u53d8\u91cf\u4e4b\u524d\uff0c\u9700\u8981\u5148\u5728\u7cfb\u7edf\u4e2d\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\u540d\u79f0\u548c\u503c\uff0c\u4f20\u7edf\u7684\u65b9\u5f0f\u4e3a\u4f7f\u7528 export \u547d\u4ee4\uff08Windows\u7cfb\u7edf\u4e2d\u4f7f\u7528 set \u547d\u4ee4\uff09\uff1a $ export UserName=admin $ echo $UserName admin $ export Password=123456 $ echo $Password 123456 \u7136\u540e\uff0c\u5728\u7a0b\u5e8f\u4e2d\u5c31\u53ef\u4ee5\u5bf9\u7cfb\u7edf\u4e2d\u7684\u73af\u5883\u53d8\u91cf\u8fdb\u884c\u8bfb\u53d6\u3002 $ python >>> import os >>> os.environ[\"UserName\"] 'admin'","title":"\u5728\u7ec8\u7aef\u4e2d\u9884\u8bbe\u73af\u5883\u53d8\u91cf"},{"location":"concepts/dot-env/#env","text":"\u9664\u4e86\u8fd9\u79cd\u65b9\u5f0f\uff0cHttpRunner \u8fd8\u501f\u9274\u4e86 pipenv \u52a0\u8f7d .env \u7684\u65b9\u5f0f \u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5728\u81ea\u52a8\u5316\u6d4b\u8bd5\u9879\u76ee\u7684\u6839\u76ee\u5f55\u4e2d\uff0c\u521b\u5efa .env \u6587\u4ef6\uff0c\u5e76\u5c06\u654f\u611f\u6570\u636e\u4fe1\u606f\u653e\u7f6e\u5230\u5176\u4e2d\uff0c\u5b58\u50a8\u91c7\u7528 name=value \u7684\u683c\u5f0f\uff1a \u811a\u624b\u67b6\u751f\u6210\u7684\u63a5\u53e3\u6d4b\u8bd5\u9879\u76ee\u4e2d\uff0c\u4f1a\u81ea\u52a8\u751f\u6210.env\u6587\u4ef6\uff0c\u53ef\u76f4\u63a5\u5728.env\u4e2d\u6dfb\u52a0\u73af\u5883\u53d8\u91cf: \u6ce8\u610f\uff1a.env\u4e0d\u5141\u8bb8\u6709\u7a7a\u884c\uff0c\u53ef\u4ee5\u6ce8\u91ca\u6389\u4e0d\u9700\u8981\u7684\u53d8\u91cf","title":"[\u63a8\u8350]\u901a\u8fc7 .env \u6587\u4ef6\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf"},{"location":"concepts/dot-env/#_5","text":"\u5728 HttpRunner \u4e2d\u5185\u7f6e\u4e86\u51fd\u6570 environ\uff08\u7b80\u79f0 ENV\uff09\uff0c\u53ef\u7528\u4e8e\u5728 YAML/JSON \u811a\u672c\u4e2d\u76f4\u63a5\u5f15\u7528\u73af\u5883\u53d8\u91cf\u3002 teststeps: - name: login request: url: http://host/api/login method: POST headers: Content-Type: application/json json: username: ${ENV(UserName)} password: ${ENV(Password)} validate: - eq: [status_code, 200] \u82e5\u8fd8\u9700\u5bf9\u8bfb\u53d6\u7684\u73af\u5883\u53d8\u91cf\u505a\u8fdb\u4e00\u6b65\u5904\u7406\uff0c\u5219\u53ef\u4ee5\u5728 debugtalk.py \u901a\u8fc7 Python \u5185\u7f6e\u7684\u51fd\u6570 os.environ \u5bf9\u73af\u5883\u53d8\u91cf\u8fdb\u884c\u5f15\u7528\uff0c\u7136\u540e\u518d\u5b9e\u73b0\u5904\u7406\u903b\u8f91\u3002 \u4f8b\u5982\uff0c\u82e5\u53d1\u8d77\u8bf7\u6c42\u7684\u5bc6\u7801\u9700\u8981\u5148\u4e0e\u5bc6\u94a5\u8fdb\u884c\u62fc\u63a5\u5e76\u751f\u6210 MD5\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u5728 debugtalk.py \u6587\u4ef6\u4e2d\u5b9e\u73b0\u5982\u4e0b\u51fd\u6570\uff1a import os def get_encrypt_password(): raw_passwd = os.environ[\"Password\"] PROJECT_KEY = os.environ[\"PROJECT_KEY\"]) password = (raw_passwd + PROJECT_KEY).encode('ascii') return hmac.new(password, hashlib.sha1).hexdigest() \u7136\u540e\uff0c\u5728 YAML/JSON \u683c\u5f0f\u7684\u6d4b\u8bd5\u7528\u4f8b\u4e2d\uff0c\u5c31\u53ef\u4ee5\u901a\u8fc7${func()}\u7684\u65b9\u5f0f\u5f15\u7528\u73af\u5883\u53d8\u91cf\u7684\u503c\u4e86\u3002 teststeps: - name: login request: url: http://host/api/login method: POST headers: Content-Type: application/json json: username: ${ENV(UserName)} password: ${get_encrypt_password()} validate: - eq: [status_code, 200]","title":"\u5f15\u7528\u73af\u5883\u53d8\u91cf"},{"location":"concepts/dot-env/#env_1","text":"\u6ce8\u610f\uff1ahttprunner v2.x\u652f\u6301\uff0c\u4f46\u662fv3.x\u6682\u4e0d\u652f\u6301\u4ee5\u4e0b\u65b9\u5f0f\u8fd0\u884c\u6307\u5b9a.env\u3002 \u82e5\u9700\u52a0\u8f7d\u4e0d\u4f4d\u4e8e\u81ea\u52a8\u5316\u9879\u76ee\u6839\u76ee\u5f55\u4e2d\u7684 .env\uff0c\u6216\u8005\u5176\u5b83\u540d\u79f0\u7684 .env \u6587\u4ef6\uff08\u4f8b\u5982 production.env\uff09\uff0c\u53ef\u4ee5\u91c7\u7528 --dot-env-path \u53c2\u6570\u6307\u5b9a\u6587\u4ef6\u8def\u5f84\uff1a $ hrun /path/to/testcase.yml --dot-env-path /path/to/.env --log-level debug INFO Loading environment variables from /path/to/.env DEBUG Loaded variable: UserName DEBUG Loaded variable: Password DEBUG Loaded variable: PROJECT_KEY ...","title":"\u6307\u5b9a.env\u6267\u884c\u6682\u672a\u627e\u5230\u8fd0\u884c\u65b9\u6cd5"},{"location":"concepts/hook/","text":"hook\u673a\u5236 \u6982\u8ff0 HttpRunner \u4ece 1.4.5 \u7248\u672c\u5f00\u59cb\u5b9e\u73b0\u4e86\u5168\u65b0\u7684 hook \u673a\u5236\uff0c\u53ef\u4ee5\u5728\u8bf7\u6c42\u524d\u548c\u8bf7\u6c42\u540e\u8c03\u7528\u94a9\u5b50\u51fd\u6570\u3002 \u8c03\u7528 hook \u51fd\u6570 hook \u673a\u5236\u5206\u4e3a\u4e24\u4e2a\u5c42\u7ea7\uff1a \u6d4b\u8bd5\u7528\u4f8b\u5c42\u9762\uff08testcase\uff09 \u6d4b\u8bd5\u6b65\u9aa4\u5c42\u9762\uff08teststep\uff09 \u6d4b\u8bd5\u7528\u4f8b\u5c42\u9762\uff08testcase\uff09 \u5728 YAML/JSON \u6d4b\u8bd5\u7528\u4f8b\u7684 config \u4e2d\u65b0\u589e\u5173\u952e\u5b57 setup_hooks \u548c teardown_hooks\u3002 setup_hooks: \u5728\u6574\u4e2a\u7528\u4f8b\u5f00\u59cb\u6267\u884c\u524d\u89e6\u53d1 hook \u51fd\u6570\uff0c\u4e3b\u8981\u7528\u4e8e\u51c6\u5907\u5de5\u4f5c\u3002 teardown_hooks: \u5728\u6574\u4e2a\u7528\u4f8b\u7ed3\u675f\u6267\u884c\u540e\u89e6\u53d1 hook \u51fd\u6570\uff0c\u4e3b\u8981\u7528\u4e8e\u6d4b\u8bd5\u540e\u7684\u6e05\u7406\u5de5\u4f5c\u3002 - config: name: basic test with httpbin base_url: http://127.0.0.1:3458/ setup_hooks: - ${hook_print(setup)} teardown_hooks: - ${hook_print(teardown)} \u6d4b\u8bd5\u6b65\u9aa4\u5c42\u9762\uff08teststep\uff09 \u5728 YAML/JSON \u6d4b\u8bd5\u6b65\u9aa4\u7684 test \u4e2d\u65b0\u589e\u5173\u952e\u5b57 setup_hooks \u548c teardown_hooks\u3002 setup_hooks: \u5728 HTTP \u8bf7\u6c42\u53d1\u9001\u524d\u6267\u884c hook \u51fd\u6570\uff0c\u4e3b\u8981\u7528\u4e8e\u51c6\u5907\u5de5\u4f5c\uff1b\u4e5f\u53ef\u4ee5\u5b9e\u73b0\u5bf9\u8bf7\u6c42\u7684 request \u5185\u5bb9\u8fdb\u884c\u9884\u5904\u7406\u3002 teardown_hooks: \u5728 HTTP \u8bf7\u6c42\u53d1\u9001\u540e\u6267\u884c hook \u51fd\u6570\uff0c\u4e3b\u8981\u7528\u4e8e\u6d4b\u8bd5\u540e\u7684\u6e05\u7406\u5de5\u4f5c\uff1b\u4e5f\u53ef\u4ee5\u5b9e\u73b0\u5bf9\u54cd\u5e94\u7684 response \u8fdb\u884c\u4fee\u6539\uff0c\u4f8b\u5982\u8fdb\u884c\u52a0\u89e3\u5bc6\u7b49\u5904\u7406\u3002 teststeps: - name: request with functions variables: foo1: testcase_ref_bar1 expect_foo1: testcase_ref_bar1 testcase: testcases/demo_testcase_request.yml export: - foo3 setup_hooks: [ \"${setup_hook_prepare_kwargs($request)}\", \"${setup_hook_httpntlmauth($request)}\" ] teardown_hooks: [ \"${teardown_hook_sleep_N_secs($response, 2)}\" ] \u7f16\u5199hook\u51fd\u6570 hook \u51fd\u6570\u7684\u5b9a\u4e49\u653e\u7f6e\u5728\u9879\u76ee\u7684 debugtalk.py \u4e2d\uff0c\u5728 YAML/JSON \u4e2d\u8c03\u7528 hook \u51fd\u6570\u4ecd\u7136\u662f\u91c7\u7528 ${func($a, $b)} \u7684\u5f62\u5f0f\u3002 \u5bf9\u4e8e\u6d4b\u8bd5\u7528\u4f8b\u5c42\u9762\u7684 hook \u51fd\u6570\uff0c\u4e0e YAML/JSON \u4e2d\u81ea\u5b9a\u4e49\u7684\u51fd\u6570\u5b8c\u5168\u76f8\u540c\uff0c\u53ef\u901a\u8fc7\u81ea\u5b9a\u4e49\u53c2\u6570\u4f20\u53c2\u7684\u5f62\u5f0f\u6765\u5b9e\u73b0\u7075\u6d3b\u5e94\u7528\u3002 def hook_print(msg): print(msg) \u5bf9\u4e8e\u5355\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u5c42\u9762\u7684 hook \u51fd\u6570\uff0c\u9664\u4e86\u53ef\u4f20\u5165\u81ea\u5b9a\u4e49\u53c2\u6570\u5916\uff0c\u8fd8\u53ef\u4ee5\u4f20\u5165\u4e0e\u5f53\u524d\u6d4b\u8bd5\u7528\u4f8b\u76f8\u5173\u7684\u4fe1\u606f\uff0c\u5305\u62ec\u8bf7\u6c42\u7684 $request \u548c\u54cd\u5e94\u7684 $response\uff0c\u7528\u4e8e\u5b9e\u73b0\u66f4\u590d\u6742\u573a\u666f\u7684\u7075\u6d3b\u5e94\u7528\u3002 setup_hooks \u5728\u6d4b\u8bd5\u6b65\u9aa4\u5c42\u9762\u7684 setup_hooks \u51fd\u6570\u4e2d\uff0c\u9664\u4e86\u53ef\u4f20\u5165\u81ea\u5b9a\u4e49\u53c2\u6570\u5916\uff0c\u8fd8\u53ef\u4ee5\u4f20\u5165 $request\uff0c\u8be5\u53c2\u6570\u5bf9\u5e94\u7740\u5f53\u524d\u6d4b\u8bd5\u6b65\u9aa4 request \u7684\u5168\u90e8\u5185\u5bb9\u3002\u56e0\u4e3a request \u662f\u53ef\u53d8\u53c2\u6570\u7c7b\u578b\uff08dict\uff09\uff0c\u56e0\u6b64\u8be5\u51fd\u6570\u53c2\u6570\u4e3a\u5f15\u7528\u4f20\u9012\uff0c\u5f53\u6211\u4eec\u9700\u8981\u5bf9\u8bf7\u6c42\u53c2\u6570\u8fdb\u884c\u9884\u5904\u7406\u65f6\u5c24\u5176\u6709\u7528\u3002 \u793a\u4f8b\uff1a def setup_hook_prepare_kwargs(request): if request[\"method\"] == \"POST\": content_type = request.get(\"headers\", {}).get(\"content-type\") if content_type and \"data\" in request: # if request content-type is application/json, request data should be dumped if content_type.startswith(\"application/json\") and isinstance(request[\"data\"], (dict, list)): request[\"data\"] = json.dumps(request[\"data\"]) if isinstance(request[\"data\"], str): request[\"data\"] = request[\"data\"].encode('utf-8') def setup_hook_httpntlmauth(request): if \"httpntlmauth\" in request: from requests_ntlm import HttpNtlmAuth auth_account = request.pop(\"httpntlmauth\") request[\"auth\"] = HttpNtlmAuth( auth_account[\"username\"], auth_account[\"password\"]) \u901a\u8fc7\u4e0a\u8ff0\u7684 setup_hook_prepare_kwargs \u51fd\u6570\uff0c\u53ef\u4ee5\u5b9e\u73b0\u6839\u636e\u8bf7\u6c42\u65b9\u6cd5\u548c\u8bf7\u6c42\u7684 Content-Type \u6765\u5bf9\u8bf7\u6c42\u7684 data \u8fdb\u884c\u52a0\u5de5\u5904\u7406\uff1b\u901a\u8fc7 setup_hook_httpntlmauth \u51fd\u6570\uff0c\u53ef\u4ee5\u5b9e\u73b0 HttpNtlmAuth \u6743\u9650\u6388\u6743\u3002 teardown_hooks \u5728\u6d4b\u8bd5\u6b65\u9aa4\u5c42\u9762\u7684 teardown_hooks \u51fd\u6570\u4e2d\uff0c\u9664\u4e86\u53ef\u4f20\u5165\u81ea\u5b9a\u4e49\u53c2\u6570\u5916\uff0c\u8fd8\u53ef\u4ee5\u4f20\u5165 $response\uff0c\u8be5\u53c2\u6570\u5bf9\u5e94\u7740\u5f53\u524d\u8bf7\u6c42\u7684\u54cd\u5e94\u5b9e\u4f8b\uff08requests.Response\uff09\u3002 \u793a\u4f8b\uff1a def teardown_hook_sleep_N_secs(response, n_secs): \"\"\" sleep n seconds after request \"\"\" if response.status_code == 200: time.sleep(0.1) else: time.sleep(n_secs) \u901a\u8fc7\u4e0a\u8ff0\u7684 teardown_hook_sleep_N_secs \u51fd\u6570\uff0c\u53ef\u4ee5\u6839\u636e\u63a5\u53e3\u54cd\u5e94\u7684\u72b6\u6001\u7801\u6765\u8fdb\u884c\u4e0d\u540c\u65f6\u95f4\u7684\u5ef6\u8fdf\u7b49\u5f85\u3002 \u53e6\u5916\uff0c\u5728 teardown_hooks \u51fd\u6570\u4e2d\u8fd8\u53ef\u4ee5\u5bf9 response \u8fdb\u884c\u4fee\u6539\u3002\u5f53\u6211\u4eec\u9700\u8981\u5148\u5bf9\u54cd\u5e94\u5185\u5bb9\u8fdb\u884c\u5904\u7406\uff08\u4f8b\u5982\u52a0\u89e3\u5bc6\u3001\u53c2\u6570\u8fd0\u7b97\uff09\uff0c\u518d\u8fdb\u884c\u53c2\u6570\u63d0\u53d6\uff08extract\uff09\u548c\u6821\u9a8c\uff08validate\uff09\u65f6\u5c24\u5176\u6709\u7528\u3002 \u4f8b\u5982\u5728\u4e0b\u9762\u7684\u6d4b\u8bd5\u6b65\u9aa4\u4e2d\uff0c\u5728\u6267\u884c\u6d4b\u8bd5\u540e\uff0c\u901a\u8fc7 teardown_hooks \u51fd\u6570\u5c06\u54cd\u5e94\u7ed3\u679c\u7684\u72b6\u6001\u7801\u548c headers \u8fdb\u884c\u4e86\u4fee\u6539\uff0c\u7136\u540e\u518d\u8fdb\u884c\u4e86\u6821\u9a8c\u3002 - test: name: alter response request: url: /headers method: GET teardown_hooks: - ${alter_response($response)} validate: - eq: [\"status_code\", 500] - eq: [\"headers.content-type\", \"html/text\"] def alter_response(response): response.status_code = 500 response.headers[\"Content-Type\"] = \"html/text\"","title":"hook\u673a\u5236"},{"location":"concepts/hook/#hook","text":"","title":"hook\u673a\u5236"},{"location":"concepts/hook/#_1","text":"HttpRunner \u4ece 1.4.5 \u7248\u672c\u5f00\u59cb\u5b9e\u73b0\u4e86\u5168\u65b0\u7684 hook \u673a\u5236\uff0c\u53ef\u4ee5\u5728\u8bf7\u6c42\u524d\u548c\u8bf7\u6c42\u540e\u8c03\u7528\u94a9\u5b50\u51fd\u6570\u3002","title":"\u6982\u8ff0"},{"location":"concepts/hook/#hook_1","text":"hook \u673a\u5236\u5206\u4e3a\u4e24\u4e2a\u5c42\u7ea7\uff1a \u6d4b\u8bd5\u7528\u4f8b\u5c42\u9762\uff08testcase\uff09 \u6d4b\u8bd5\u6b65\u9aa4\u5c42\u9762\uff08teststep\uff09","title":"\u8c03\u7528 hook \u51fd\u6570"},{"location":"concepts/hook/#testcase","text":"\u5728 YAML/JSON \u6d4b\u8bd5\u7528\u4f8b\u7684 config \u4e2d\u65b0\u589e\u5173\u952e\u5b57 setup_hooks \u548c teardown_hooks\u3002 setup_hooks: \u5728\u6574\u4e2a\u7528\u4f8b\u5f00\u59cb\u6267\u884c\u524d\u89e6\u53d1 hook \u51fd\u6570\uff0c\u4e3b\u8981\u7528\u4e8e\u51c6\u5907\u5de5\u4f5c\u3002 teardown_hooks: \u5728\u6574\u4e2a\u7528\u4f8b\u7ed3\u675f\u6267\u884c\u540e\u89e6\u53d1 hook \u51fd\u6570\uff0c\u4e3b\u8981\u7528\u4e8e\u6d4b\u8bd5\u540e\u7684\u6e05\u7406\u5de5\u4f5c\u3002 - config: name: basic test with httpbin base_url: http://127.0.0.1:3458/ setup_hooks: - ${hook_print(setup)} teardown_hooks: - ${hook_print(teardown)}","title":"\u6d4b\u8bd5\u7528\u4f8b\u5c42\u9762\uff08testcase\uff09"},{"location":"concepts/hook/#teststep","text":"\u5728 YAML/JSON \u6d4b\u8bd5\u6b65\u9aa4\u7684 test \u4e2d\u65b0\u589e\u5173\u952e\u5b57 setup_hooks \u548c teardown_hooks\u3002 setup_hooks: \u5728 HTTP \u8bf7\u6c42\u53d1\u9001\u524d\u6267\u884c hook \u51fd\u6570\uff0c\u4e3b\u8981\u7528\u4e8e\u51c6\u5907\u5de5\u4f5c\uff1b\u4e5f\u53ef\u4ee5\u5b9e\u73b0\u5bf9\u8bf7\u6c42\u7684 request \u5185\u5bb9\u8fdb\u884c\u9884\u5904\u7406\u3002 teardown_hooks: \u5728 HTTP \u8bf7\u6c42\u53d1\u9001\u540e\u6267\u884c hook \u51fd\u6570\uff0c\u4e3b\u8981\u7528\u4e8e\u6d4b\u8bd5\u540e\u7684\u6e05\u7406\u5de5\u4f5c\uff1b\u4e5f\u53ef\u4ee5\u5b9e\u73b0\u5bf9\u54cd\u5e94\u7684 response \u8fdb\u884c\u4fee\u6539\uff0c\u4f8b\u5982\u8fdb\u884c\u52a0\u89e3\u5bc6\u7b49\u5904\u7406\u3002 teststeps: - name: request with functions variables: foo1: testcase_ref_bar1 expect_foo1: testcase_ref_bar1 testcase: testcases/demo_testcase_request.yml export: - foo3 setup_hooks: [ \"${setup_hook_prepare_kwargs($request)}\", \"${setup_hook_httpntlmauth($request)}\" ] teardown_hooks: [ \"${teardown_hook_sleep_N_secs($response, 2)}\" ]","title":"\u6d4b\u8bd5\u6b65\u9aa4\u5c42\u9762\uff08teststep\uff09"},{"location":"concepts/hook/#hook_2","text":"hook \u51fd\u6570\u7684\u5b9a\u4e49\u653e\u7f6e\u5728\u9879\u76ee\u7684 debugtalk.py \u4e2d\uff0c\u5728 YAML/JSON \u4e2d\u8c03\u7528 hook \u51fd\u6570\u4ecd\u7136\u662f\u91c7\u7528 ${func($a, $b)} \u7684\u5f62\u5f0f\u3002 \u5bf9\u4e8e\u6d4b\u8bd5\u7528\u4f8b\u5c42\u9762\u7684 hook \u51fd\u6570\uff0c\u4e0e YAML/JSON \u4e2d\u81ea\u5b9a\u4e49\u7684\u51fd\u6570\u5b8c\u5168\u76f8\u540c\uff0c\u53ef\u901a\u8fc7\u81ea\u5b9a\u4e49\u53c2\u6570\u4f20\u53c2\u7684\u5f62\u5f0f\u6765\u5b9e\u73b0\u7075\u6d3b\u5e94\u7528\u3002 def hook_print(msg): print(msg) \u5bf9\u4e8e\u5355\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u5c42\u9762\u7684 hook \u51fd\u6570\uff0c\u9664\u4e86\u53ef\u4f20\u5165\u81ea\u5b9a\u4e49\u53c2\u6570\u5916\uff0c\u8fd8\u53ef\u4ee5\u4f20\u5165\u4e0e\u5f53\u524d\u6d4b\u8bd5\u7528\u4f8b\u76f8\u5173\u7684\u4fe1\u606f\uff0c\u5305\u62ec\u8bf7\u6c42\u7684 $request \u548c\u54cd\u5e94\u7684 $response\uff0c\u7528\u4e8e\u5b9e\u73b0\u66f4\u590d\u6742\u573a\u666f\u7684\u7075\u6d3b\u5e94\u7528\u3002","title":"\u7f16\u5199hook\u51fd\u6570"},{"location":"concepts/hook/#setup_hooks","text":"\u5728\u6d4b\u8bd5\u6b65\u9aa4\u5c42\u9762\u7684 setup_hooks \u51fd\u6570\u4e2d\uff0c\u9664\u4e86\u53ef\u4f20\u5165\u81ea\u5b9a\u4e49\u53c2\u6570\u5916\uff0c\u8fd8\u53ef\u4ee5\u4f20\u5165 $request\uff0c\u8be5\u53c2\u6570\u5bf9\u5e94\u7740\u5f53\u524d\u6d4b\u8bd5\u6b65\u9aa4 request \u7684\u5168\u90e8\u5185\u5bb9\u3002\u56e0\u4e3a request \u662f\u53ef\u53d8\u53c2\u6570\u7c7b\u578b\uff08dict\uff09\uff0c\u56e0\u6b64\u8be5\u51fd\u6570\u53c2\u6570\u4e3a\u5f15\u7528\u4f20\u9012\uff0c\u5f53\u6211\u4eec\u9700\u8981\u5bf9\u8bf7\u6c42\u53c2\u6570\u8fdb\u884c\u9884\u5904\u7406\u65f6\u5c24\u5176\u6709\u7528\u3002 \u793a\u4f8b\uff1a def setup_hook_prepare_kwargs(request): if request[\"method\"] == \"POST\": content_type = request.get(\"headers\", {}).get(\"content-type\") if content_type and \"data\" in request: # if request content-type is application/json, request data should be dumped if content_type.startswith(\"application/json\") and isinstance(request[\"data\"], (dict, list)): request[\"data\"] = json.dumps(request[\"data\"]) if isinstance(request[\"data\"], str): request[\"data\"] = request[\"data\"].encode('utf-8') def setup_hook_httpntlmauth(request): if \"httpntlmauth\" in request: from requests_ntlm import HttpNtlmAuth auth_account = request.pop(\"httpntlmauth\") request[\"auth\"] = HttpNtlmAuth( auth_account[\"username\"], auth_account[\"password\"]) \u901a\u8fc7\u4e0a\u8ff0\u7684 setup_hook_prepare_kwargs \u51fd\u6570\uff0c\u53ef\u4ee5\u5b9e\u73b0\u6839\u636e\u8bf7\u6c42\u65b9\u6cd5\u548c\u8bf7\u6c42\u7684 Content-Type \u6765\u5bf9\u8bf7\u6c42\u7684 data \u8fdb\u884c\u52a0\u5de5\u5904\u7406\uff1b\u901a\u8fc7 setup_hook_httpntlmauth \u51fd\u6570\uff0c\u53ef\u4ee5\u5b9e\u73b0 HttpNtlmAuth \u6743\u9650\u6388\u6743\u3002","title":"setup_hooks"},{"location":"concepts/hook/#teardown_hooks","text":"\u5728\u6d4b\u8bd5\u6b65\u9aa4\u5c42\u9762\u7684 teardown_hooks \u51fd\u6570\u4e2d\uff0c\u9664\u4e86\u53ef\u4f20\u5165\u81ea\u5b9a\u4e49\u53c2\u6570\u5916\uff0c\u8fd8\u53ef\u4ee5\u4f20\u5165 $response\uff0c\u8be5\u53c2\u6570\u5bf9\u5e94\u7740\u5f53\u524d\u8bf7\u6c42\u7684\u54cd\u5e94\u5b9e\u4f8b\uff08requests.Response\uff09\u3002 \u793a\u4f8b\uff1a def teardown_hook_sleep_N_secs(response, n_secs): \"\"\" sleep n seconds after request \"\"\" if response.status_code == 200: time.sleep(0.1) else: time.sleep(n_secs) \u901a\u8fc7\u4e0a\u8ff0\u7684 teardown_hook_sleep_N_secs \u51fd\u6570\uff0c\u53ef\u4ee5\u6839\u636e\u63a5\u53e3\u54cd\u5e94\u7684\u72b6\u6001\u7801\u6765\u8fdb\u884c\u4e0d\u540c\u65f6\u95f4\u7684\u5ef6\u8fdf\u7b49\u5f85\u3002 \u53e6\u5916\uff0c\u5728 teardown_hooks \u51fd\u6570\u4e2d\u8fd8\u53ef\u4ee5\u5bf9 response \u8fdb\u884c\u4fee\u6539\u3002\u5f53\u6211\u4eec\u9700\u8981\u5148\u5bf9\u54cd\u5e94\u5185\u5bb9\u8fdb\u884c\u5904\u7406\uff08\u4f8b\u5982\u52a0\u89e3\u5bc6\u3001\u53c2\u6570\u8fd0\u7b97\uff09\uff0c\u518d\u8fdb\u884c\u53c2\u6570\u63d0\u53d6\uff08extract\uff09\u548c\u6821\u9a8c\uff08validate\uff09\u65f6\u5c24\u5176\u6709\u7528\u3002 \u4f8b\u5982\u5728\u4e0b\u9762\u7684\u6d4b\u8bd5\u6b65\u9aa4\u4e2d\uff0c\u5728\u6267\u884c\u6d4b\u8bd5\u540e\uff0c\u901a\u8fc7 teardown_hooks \u51fd\u6570\u5c06\u54cd\u5e94\u7ed3\u679c\u7684\u72b6\u6001\u7801\u548c headers \u8fdb\u884c\u4e86\u4fee\u6539\uff0c\u7136\u540e\u518d\u8fdb\u884c\u4e86\u6821\u9a8c\u3002 - test: name: alter response request: url: /headers method: GET teardown_hooks: - ${alter_response($response)} validate: - eq: [\"status_code\", 500] - eq: [\"headers.content-type\", \"html/text\"] def alter_response(response): response.status_code = 500 response.headers[\"Content-Type\"] = \"html/text\"","title":"teardown_hooks"},{"location":"concepts/param_priority/","text":"\u53d8\u91cf\u4f18\u5148\u7ea7 \u6709\u51e0\u79cd\u4e0d\u540c\u7c7b\u578b\u7684\u53d8\u91cf\uff0c\u4f18\u5148\u7ea7\u53ef\u80fd\u4f1a\u4ee4\u4eba\u56f0\u60d1\u3002 \u907f\u514d\u6df7\u6dc6\u7684\u6700\u597d\u65b9\u6cd5\u662f\u4f7f\u7528\u4e0d\u540c\u7684\u53d8\u91cf\u540d\u3002 \u4f46\u662f\uff0c\u5982\u679c\u5fc5\u987b\u4f7f\u7528\u76f8\u540c\u7684\u53d8\u91cf\u540d\uff0c\u5219\u5e94\u8be5\u4e86\u89e3\u4f18\u5148\u7ea7\u7b56\u7565\u3002 \u6d4b\u8bd5\u7528\u4f8b config: name: xxx variables: # \u914d\u7f6e\u53d8\u91cf(config variables) varA: \"configA\" varB: \"configB\" varC: \"configC\" parameters: # \u53c2\u6570\u53d8\u91cf(parameter variables) varA: [\"paramA1\"] varB: [\"paramB1\"] teststeps: - name: step 1 variables: # \u6d4b\u8bd5\u6b65\u9aa4\u53d8\u91cf(step variables) varA: \"step1A\" request: url: /$varA/$varB/$varC # varA=\"step1A\", varB=\"paramB1\", varC=\"configC\" method: GET extract: # \u63d0\u53d6\u53d8\u91cf(extract variables) varA: body.data.A # \u5047\u8bbe varA=\"extractVarA\" varB: body.data.B # \u5047\u8bbe varB=\"extractVarB\" - name: step 2 varialbes: varA: \"step2A\" request: url: /$varA/$varB/$varC # varA=\"step2A\", varB=\"extractVarB\", varC=\"configC\" method: GET \u5728\u4e00\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u4e2d\uff0c\u53d8\u91cf\u4f18\u5148\u7ea7\u5982\u4e0b\uff1a step variables > extract variables, \u4f8b\u5982\uff1astep 2, varA=\"step2A\" parameter variables > config variables, \u4f8b\u5982\uff1astep 1, varB=\"paramB1\" extracted variables > parameter variables > config variables, \u4f8b\u5982\uff1astep 2, varB=\"extractVarB\" config variables\u7684\u4f18\u5148\u7ea7\u6700\u4f4e\uff0c\u4f8b\u5982\uff1astep 1/2, varC=\"configC\" \u6d4b\u8bd5\u5957\u4ef6 config: name: xxx variables: # testsuite config variables varA: \"configA\" varB: \"configB\" varC: \"configC\" testcases: - name: case 1 variables: # testcase variables varA: \"case1A\" testcase: /path/to/testcase1 export: [\"varA\", \"varB\"] # export variables - name: case 2 varialbes: # testcase variables varA: \"case2A\" testcase: /path/to/testcase2 \u5728\u6d4b\u8bd5\u5957\u4ef6\u4e2d\uff0c\u53d8\u91cf\u4f18\u5148\u7ea7\u5982\u4e0b\uff1a \u6d4b\u8bd5\u7528\u4f8b\u53d8\u91cf(testcase variables) > export variables > testsuite config variables > \u88ab\u5f15\u7528\u7528\u4f8b\u914d\u7f6e\u53d8\u91cf(referenced testcase config variables)","title":"\u53d8\u91cf\u4f18\u5148\u7ea7"},{"location":"concepts/param_priority/#_1","text":"\u6709\u51e0\u79cd\u4e0d\u540c\u7c7b\u578b\u7684\u53d8\u91cf\uff0c\u4f18\u5148\u7ea7\u53ef\u80fd\u4f1a\u4ee4\u4eba\u56f0\u60d1\u3002 \u907f\u514d\u6df7\u6dc6\u7684\u6700\u597d\u65b9\u6cd5\u662f\u4f7f\u7528\u4e0d\u540c\u7684\u53d8\u91cf\u540d\u3002 \u4f46\u662f\uff0c\u5982\u679c\u5fc5\u987b\u4f7f\u7528\u76f8\u540c\u7684\u53d8\u91cf\u540d\uff0c\u5219\u5e94\u8be5\u4e86\u89e3\u4f18\u5148\u7ea7\u7b56\u7565\u3002","title":"\u53d8\u91cf\u4f18\u5148\u7ea7"},{"location":"concepts/param_priority/#_2","text":"config: name: xxx variables: # \u914d\u7f6e\u53d8\u91cf(config variables) varA: \"configA\" varB: \"configB\" varC: \"configC\" parameters: # \u53c2\u6570\u53d8\u91cf(parameter variables) varA: [\"paramA1\"] varB: [\"paramB1\"] teststeps: - name: step 1 variables: # \u6d4b\u8bd5\u6b65\u9aa4\u53d8\u91cf(step variables) varA: \"step1A\" request: url: /$varA/$varB/$varC # varA=\"step1A\", varB=\"paramB1\", varC=\"configC\" method: GET extract: # \u63d0\u53d6\u53d8\u91cf(extract variables) varA: body.data.A # \u5047\u8bbe varA=\"extractVarA\" varB: body.data.B # \u5047\u8bbe varB=\"extractVarB\" - name: step 2 varialbes: varA: \"step2A\" request: url: /$varA/$varB/$varC # varA=\"step2A\", varB=\"extractVarB\", varC=\"configC\" method: GET \u5728\u4e00\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u4e2d\uff0c\u53d8\u91cf\u4f18\u5148\u7ea7\u5982\u4e0b\uff1a step variables > extract variables, \u4f8b\u5982\uff1astep 2, varA=\"step2A\" parameter variables > config variables, \u4f8b\u5982\uff1astep 1, varB=\"paramB1\" extracted variables > parameter variables > config variables, \u4f8b\u5982\uff1astep 2, varB=\"extractVarB\" config variables\u7684\u4f18\u5148\u7ea7\u6700\u4f4e\uff0c\u4f8b\u5982\uff1astep 1/2, varC=\"configC\"","title":"\u6d4b\u8bd5\u7528\u4f8b"},{"location":"concepts/param_priority/#_3","text":"config: name: xxx variables: # testsuite config variables varA: \"configA\" varB: \"configB\" varC: \"configC\" testcases: - name: case 1 variables: # testcase variables varA: \"case1A\" testcase: /path/to/testcase1 export: [\"varA\", \"varB\"] # export variables - name: case 2 varialbes: # testcase variables varA: \"case2A\" testcase: /path/to/testcase2 \u5728\u6d4b\u8bd5\u5957\u4ef6\u4e2d\uff0c\u53d8\u91cf\u4f18\u5148\u7ea7\u5982\u4e0b\uff1a \u6d4b\u8bd5\u7528\u4f8b\u53d8\u91cf(testcase variables) > export variables > testsuite config variables > \u88ab\u5f15\u7528\u7528\u4f8b\u914d\u7f6e\u53d8\u91cf(referenced testcase config variables)","title":"\u6d4b\u8bd5\u5957\u4ef6"},{"location":"concepts/parameters/","text":"\u53c2\u6570\u5316\u6570\u636e\u9a71\u52a8 \u4ecb\u7ecd \u5728\u81ea\u52a8\u5316\u6d4b\u8bd5\u4e2d\uff0c\u7ecf\u5e38\u4f1a\u9047\u5230\u5982\u4e0b\u573a\u666f\uff1a \u6d4b\u8bd5\u641c\u7d22\u529f\u80fd\uff0c\u53ea\u6709\u4e00\u4e2a\u641c\u7d22\u8f93\u5165\u6846\uff0c\u4f46\u670910\u79cd\u4e0d\u540c\u7c7b\u578b\u7684\u641c\u7d22\u5173\u952e\u5b57\uff1b \u6d4b\u8bd5\u8d26\u53f7\u767b\u5f55\u529f\u80fd\uff0c\u9700\u8981\u8f93\u5165\u7528\u6237\u540d\u548c\u5bc6\u7801\uff0c\u6309\u7167\u7b49\u4ef7\u7c7b\u5212\u5206\u540e\u670920\u79cd\u7ec4\u5408\u60c5\u51b5\u3002 \u8fd9\u91cc\u53ea\u662f\u968f\u610f\u627e\u4e86\u4e24\u4e2a\u5178\u578b\u7684\u4f8b\u5b50\uff0c\u76f8\u4fe1\u5927\u5bb6\u90fd\u6709\u9047\u5230\u8fc7\u5f88\u591a\u7c7b\u4f3c\u7684\u573a\u666f\u3002\u603b\u7ed3\u4e0b\u6765\uff0c\u5c31\u662f\u6211\u4eec\u7684\u81ea\u52a8\u5316\u811a\u672c\u4e2d\u5b58\u5728\u53c2\u6570\uff0c\u5e76\u4e14\u6211\u4eec\u9700\u8981\u91c7\u7528\u4e0d\u540c\u7684\u53c2\u6570\u53bb\u8fd0\u884c\u3002 \u7ecf\u8fc7\u6982\u62ec\uff0c\u53c2\u6570\u57fa\u672c\u4e0a\u5206\u4e3a\u4e24\u79cd\u7c7b\u578b\uff1a * \u5355\u4e2a\u72ec\u7acb\u53c2\u6570\uff1a\u4f8b\u5982\u524d\u9762\u7684\u7b2c\u4e00\u79cd\u573a\u666f\uff0c\u6211\u4eec\u53ea\u9700\u8981\u53d8\u6362\u641c\u7d22\u5173\u952e\u5b57\u8fd9\u4e00\u4e2a\u53c2\u6570\u3002 * \u591a\u4e2a\u5177\u6709\u5173\u8054\u6027\u7684\u53c2\u6570\uff1a\u4f8b\u5982\u767b\u5f55\u573a\u666f\uff0c\u6211\u4eec\u9700\u8981\u53d8\u6362\u540d\u7528\u6237\u548c\u5bc6\u7801\u4e24\u4e2a\u53c2\u6570\uff0c\u5e76\u4e14\u8fd9\u4e24\u4e2a\u53c2\u6570\u9700\u8981\u5173\u8054\u7ec4\u5408\u3002 \u7136\u540e\uff0c\u5bf9\u4e8e\u53c2\u6570\u800c\u8a00\uff0c\u6211\u4eec\u53ef\u80fd\u5177\u6709\u4e00\u4e2a\u53c2\u6570\u5217\u8868\uff0c\u5728\u811a\u672c\u8fd0\u884c\u65f6\u9700\u8981\u6309\u7167\u4e0d\u540c\u7684\u89c4\u5219\u53bb\u53d6\u503c\uff0c\u4f8b\u5982\u987a\u5e8f\u53d6\u503c\u3001\u968f\u673a\u53d6\u503c\u3001\u5faa\u73af\u53d6\u503c\u7b49\u3002 \u8fd9\u5c31\u662f\u5178\u578b\u7684\u53c2\u6570\u5316\u548c\u6570\u636e\u9a71\u52a8\u3002 \u5982\u9700\u4e86\u89e3 HttpRunner \u53c2\u6570\u5316\u6570\u636e\u9a71\u52a8\u673a\u5236\u7684\u5b9e\u73b0\u539f\u7406\u548c\u6280\u672f\u7ec6\u8282\uff0c\u53ef\u524d\u5f80\u9605\u8bfb \u300aHttpRunner \u5b9e\u73b0\u53c2\u6570\u5316\u6570\u636e\u9a71\u52a8\u673a\u5236\u300b \u3002 \u6d4b\u8bd5\u7528\u4f8b\u96c6(testsuite)\u51c6\u5907 HttpRunner v3.x\u5f00\u59cb\uff0c\u6d4b\u8bd5\u7528\u4f8b\u548c\u6d4b\u8bd5\u7528\u4f8b\u96c6\u90fd\u53ef\u4ee5\u5b9e\u73b0\u53c2\u6570\u5316\u6570\u636e\u9a71\u52a8\uff0c\u9700\u8981\u4f7f\u7528parameters\u5173\u952e\u5b57\uff0c\u5b9a\u4e49\u53c2\u6570\u540d\u79f0\u5e76\u6307\u5b9a\u6570\u636e\u6e90\u53d6\u503c\u65b9\u5f0f\u3002 \u5982\u679c\u8ba9\u6d4b\u8bd5\u7528\u4f8b(testcase)\u7684\u6982\u5ff5\u66f4\u7eaf\u7cb9\uff0c\u53ef\u4ee5\u8003\u8651\u5c06\u53c2\u6570\u5316\u7684\u529f\u80fd\u5728testsuite\u4e2d\u5b9e\u73b0\u3002 \u521b\u5efa\u4e00\u4e2a testsuite\uff0c\u5728 testsuite \u4e2d\u5f15\u7528\u6d4b\u8bd5\u7528\u4f8b\uff0c\u5e76\u5b9a\u4e49\u53c2\u6570\u5316\u914d\u7f6e\u3002 \u6d4b\u8bd5\u7528\u4f8b\u96c6\uff08testsuite\uff09\u7684\u683c\u5f0f\u5982\u4e0b\u6240\u793a\uff1a config: name: test suite demo variables: # testsuite config variables foo1: config_bar1 foo2: config_bar2 expect_foo1: config_bar1 expect_foo2: config_bar2 base_url: \"https://postman-echo.com\" testcases: - name: test case 1 variables: # testcase variables uid: 1000 var_c: ${gen_random_string(5)} parameters: uid: [101, 102, 103] var_c: [\"demo1\", \"demo2\", \"demo3\"] testcase: /path/to/testcase1 \u53c2\u6570\u914d\u7f6e\u6982\u8ff0 \u5982\u9700\u5bf9\u67d0\u6d4b\u8bd5\u7528\u4f8b(testcase)\u5b9e\u73b0\u53c2\u6570\u5316\u6570\u636e\u9a71\u52a8\uff0c\u9700\u8981\u4f7f\u7528parameters\u5173\u952e\u5b57\uff0c\u5b9a\u4e49\u53c2\u6570\u540d\u79f0\u5e76\u6307\u5b9a\u6570\u636e\u6e90\u53d6\u503c\u65b9\u5f0f\u3002 \u53c2\u6570\u540d\u79f0\u7684\u5b9a\u4e49\u5206\u4e3a\u4e24\u79cd\u60c5\u51b5\uff1a * \u72ec\u7acb\u53c2\u6570\u5355\u72ec\u8fdb\u884c\u5b9a\u4e49\uff1b * \u591a\u4e2a\u53c2\u6570\u5177\u6709\u5173\u8054\u6027\u7684\u53c2\u6570\u9700\u8981\u5c06\u5176\u5b9a\u4e49\u5728\u4e00\u8d77\uff0c\u91c7\u7528\u77ed\u6a2a\u7ebf(-)\u8fdb\u884c\u94fe\u63a5\u3002 \u6570\u636e\u6e90\u652f\u6301\u4e09\u79cd\u65b9\u5f0f\uff1a * \u811a\u672c\u4e2d\u76f4\u63a5\u6307\u5b9a\u53c2\u6570\u5217\u8868\uff1a\u8be5\u79cd\u65b9\u5f0f\u6700\u4e3a\u7b80\u5355\u6613\u7528\uff0c\u9002\u5408\u53c2\u6570\u5217\u8868\u6bd4\u8f83\u5c0f\u7684\u60c5\u51b5\u3002 \u793a\u4f8b\uff1a parameters: uid: [101, 102, 103] username-password: - [ \"user1\", \"111111\" ] - [ \"user2\", \"222222\" ] - [ \"user3\", \"333333\" ] \u901a\u8fc7\u5185\u7f6e\u7684parameterize(\u53ef\u7b80\u5199\u4e3aP)\u51fd\u6570\u5f15\u7528CSV\u6587\u4ef6\uff1a\u8be5\u79cd\u65b9\u5f0f\u9700\u8981\u51c6\u5907CSV\u6570\u636e\u6587\u4ef6\uff0c\u9002\u5408\u6570\u636e\u91cf\u6bd4\u8f83\u5927\u7684\u60c5\u51b5\u3002 \u793a\u4f8b\uff1a parameters: apkchannel: ${P(data/vip.csv)} \u5728debugtalk.py\u4e2d\u81ea\u5b9a\u4e49\u7684\u51fd\u6570\u751f\u6210\u53c2\u6570\u5217\u8868\uff1a\u8be5\u79cd\u65b9\u5f0f\u6700\u4e3a\u7075\u6d3b\uff0c\u53ef\u901a\u8fc7\u81ea\u5b9a\u4e49Python\u51fd\u6570\u5b9e\u73b0\u4efb\u610f\u573a\u666f\u7684\u6570\u636e\u9a71\u52a8\u673a\u5236\uff0c\u5f53\u9700\u8981\u52a8\u6001\u751f\u6210\u53c2\u6570\u5217\u8868\u65f6\u4e5f\u9700\u8981\u9009\u62e9\u8be5\u79cd\u65b9\u5f0f\u3002 \u793a\u4f8b\uff1a parameters: username-password: ${get_account(10)} \u4e09\u79cd\u65b9\u5f0f\u53ef\u6839\u636e\u5b9e\u9645\u9879\u76ee\u9700\u6c42\u8fdb\u884c\u7075\u6d3b\u9009\u62e9\uff0c\u540c\u65f6\u652f\u6301\u591a\u79cd\u65b9\u5f0f\u7684\u7ec4\u5408\u4f7f\u7528\u3002\u52a0\u5165\u6d4b\u8bd5\u7528\u4f8b\u4e2d\u5b9a\u4e49\u4e86\u591a\u4e2a\u53c2\u6570\uff0c\u90a3\u4e48\u6d4b\u8bd5\u7528\u4f8b\u5728\u8fd0\u884c\u65f6\u4f1a\u5bf9\u53c2\u6570\u8fdb\u884c\u7b1b\u5361\u5c14\u79ef\u7ec4\u5408\uff0c\u8986\u76d6\u6240\u6709\u53c2\u6570\u7ec4\u5408\u60c5\u51b5\u3002 \u53c2\u6570\u8be6\u7ec6\u914d\u7f6e \u5c06\u53c2\u6570\u540d\u79f0\u5b9a\u4e49\u548c\u6570\u636e\u6e90\u6307\u5b9a\u65b9\u5f0f\u8fdb\u884c\u7ec4\u5408\uff0c\u5171\u67096\u4e2d\u5f62\u5f0f\u3002\u5148\u5206\u522b\u9488\u5bf9\u6bcf\u4e00\u7c7b\u60c5\u51b5\u8fdb\u884c\u8be6\u7ec6\u8bf4\u660e\u3002 \u72ec\u7acb\u53c2\u6570&\u76f4\u63a5\u6307\u5b9a\u53c2\u6570\u5217\u8868 \u5bf9\u4e8e\u53c2\u6570\u5217\u8868\u6bd4\u8f83\u5c0f\u7684\u60c5\u51b5\uff0c\u7ec4u ii\u7b80\u5355\u7684\u65b9\u5f0f\u662f\u76f4\u63a5\u5728YAML/JSON\u4e2d\u6307\u5b9a\u53c2\u6570\u5217\u8868\u5185\u5bb9\u3002 \u4f8b\u5982\uff0c\u5bf9\u4e8e\u72ec\u7acb\u53c2\u6570uid,\u53c2\u6570\u5217\u8868\u4e3a[1001, 1002, 1003, 1004]\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u6309\u7167\u5982\u4e0b\u65b9\u5f0f\u8fdb\u884c\u914d\u7f6e: config: name: test suite demo base_url: \"https://postman-echo.com\" testcases: - name: test case 1 parameters: uid: [1001, 1002, 1003, 1004] testcase: /path/to/testcase1 \u8fdb\u884c\u8be5\u914d\u7f6e\u540e\uff0c\u6d4b\u8bd5\u7528\u4f8b\u5728\u8fd0\u884c\u65f6\u5c31\u4f1a\u5bf9uid\u5b9e\u73b0\u6570\u636e\u9a71\u52a8\uff0c\u5373\u5206\u522b\u4f7f\u7528[1001, 1002, 1003, 1004]\u56db\u4e2a\u503c\u8fd0\u884c\u6d4b\u8bd5\u7528\u4f8b\u3002 \u5173\u8054\u53c2\u6570&\u76f4\u63a5\u6307\u5b9a\u53c2\u6570\u5217\u8868 \u5bf9\u4e8e\u5177\u6709\u5173\u8054\u6027\u7684\u591a\u4e2a\u53c2\u6570\uff0c\u6bd4\u5982username\u548cpassword\uff0c\u90a3\u4e48\u53ef\u4ee5\u6309\u7167\u5982\u4e0b\u65b9\u5f0f\u8fdb\u884c\u914d\u7f6e\uff1a config: name: test suite demo base_url: \"https://postman-echo.com\" testcases: - name: test case 1 parameters: username-password: - [ \"user1\", \"111111\" ] - [ \"user2\", \"222222\" ] - [ \"user3\", \"333333\" ] testcase: /path/to/testcase1 \u8fdb\u884c\u8be5\u914d\u7f6e\u540e\uff0c\u6d4b\u8bd5\u7528\u4f8b\u5728\u8fd0\u884c\u65f6\u5c31\u4f1a\u5bf9username\u548cpassword\u5b9e\u73b0\u6570\u636e\u9a71\u52a8\uff0c\u5373\u5206\u522b\u4f7f\u7528 {\"username\": \"user1\", \"password\": \"111111\"}\u3001{\"username\": \"user2\", \"password\": \"222222\"}\u3001{\"username\": \"user3\", \"password\": \"333333\"} \u8fd0\u884c 3 \u6b21\u6d4b\u8bd5\uff0c\u5e76\u4e14\u4fdd\u8bc1\u53c2\u6570\u503c\u603b\u662f\u6210\u5bf9\u4f7f\u7528\u3002 \u72ec\u7acb\u53c2\u6570 & \u5f15\u7528CSV\u6587\u4ef6 \u5bf9\u4e8e\u5df2\u6709\u53c2\u6570\u5217\u8868\uff0c\u5e76\u4e14\u6570\u636e\u91cf\u6bd4\u8f83\u5927\u7684\u60c5\u51b5\uff0c\u6bd4\u8f83\u9002\u5408\u7684\u65b9\u5f0f\u662f\u5c06\u53c2\u6570\u5217\u8868\u503c\u5b58\u50a8\u5728 CSV \u6570\u636e\u6587\u4ef6\u4e2d\u3002 \u5bf9\u4e8e CSV \u6570\u636e\u6587\u4ef6\uff0c\u9700\u8981\u9075\u5faa\u5982\u4e0b\u51e0\u9879\u7ea6\u5b9a\u7684\u89c4\u5219\uff1a CSV \u6587\u4ef6\u4e2d\u7684\u7b2c\u4e00\u884c\u5fc5\u987b\u4e3a\u53c2\u6570\u540d\u79f0\uff0c\u4ece\u7b2c\u4e8c\u884c\u5f00\u59cb\u4e3a\u53c2\u6570\u503c\uff0c\u6bcf\u4e2a\uff08\u7ec4\uff09\u503c\u5360\u4e00\u884c\uff1b \u82e5\u540c\u4e00\u4e2a CSV \u6587\u4ef6\u4e2d\u5177\u6709\u591a\u4e2a\u53c2\u6570\uff0c\u5219\u53c2\u6570\u540d\u79f0\u548c\u6570\u503c\u7684\u95f4\u9694\u7b26\u9700\u5b9e\u7528\u82f1\u6587\u9017\u53f7\uff1b \u5728 YAML/JSON \u6587\u4ef6\u5f15\u7528 CSV \u6587\u4ef6\u65f6\uff0c\u6587\u4ef6\u8def\u5f84\u4e3a\u57fa\u4e8e\u9879\u76ee\u6839\u76ee\u5f55\uff08debugtalk.py \u6240\u5728\u8def\u5f84\uff09\u7684\u76f8\u5bf9\u8def\u5f84\u3002 \u4f8b\u5982\uff0cuser_id \u7684\u53c2\u6570\u53d6\u503c\u8303\u56f4\u4e3a 1001\uff5e2000\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u521b\u5efa user_id.csv\uff0c\u5e76\u4e14\u5728\u6587\u4ef6\u4e2d\u6309\u7167\u5982\u4e0b\u5f62\u5f0f\u8fdb\u884c\u63cf\u8ff0\u3002 user_id 1001 1002 ... 1999 2000 \u7136\u540e\u5728 YAML/JSON \u6d4b\u8bd5\u7528\u4f8b\u6587\u4ef6\u4e2d\uff0c\u5c31\u53ef\u4ee5\u901a\u8fc7\u5185\u7f6e\u7684 parameterize\uff08\u53ef\u7b80\u5199\u4e3a P\uff09\u51fd\u6570\u5f15\u7528 CSV \u6587\u4ef6\u3002 \u5047\u8bbe\u9879\u76ee\u7684\u6839\u76ee\u5f55\u4e0b\u6709 data \u6587\u4ef6\u5939\uff0cuser_id.csv \u4f4d\u4e8e\u5176\u4e2d\uff0c\u90a3\u4e48 user_id.csv \u7684\u5f15\u7528\u63cf\u8ff0\u5982\u4e0b\uff1a config: name: test suite demo base_url: \"https://postman-echo.com\" testcases: - name: test case 1 parameters: user_id: ${P(data/user_id.csv)} testcase: /path/to/testcase1 \u5373 P \u51fd\u6570\u7684\u53c2\u6570\uff08CSV \u6587\u4ef6\u8def\u5f84\uff09\u662f\u76f8\u5bf9\u4e8e\u9879\u76ee\u6839\u76ee\u5f55\u7684\u76f8\u5bf9\u8def\u5f84\u3002\u5f53\u7136\uff0c\u8fd9\u91cc\u4e5f\u53ef\u4ee5\u4f7f\u7528 CSV \u6587\u4ef6\u5728\u7cfb\u7edf\u4e2d\u7684\u7edd\u5bf9\u8def\u5f84\uff0c\u4e0d\u8fc7\u8fd9\u6837\u7684\u8bdd\u5728\u9879\u76ee\u8def\u5f84\u53d8\u52a8\u65f6\u5c31\u4f1a\u51fa\u73b0\u95ee\u9898\uff0c\u56e0\u6b64\u63a8\u8350\u4f7f\u7528\u76f8\u5bf9\u8def\u5f84\u7684\u5f62\u5f0f\u3002 \u5173\u8054\u53c2\u6570&\u5f15\u7528CSV\u6587\u4ef6 \u5bf9\u4e8e\u5177\u6709\u5173\u8054\u6027\u7684\u591a\u4e2a\u53c2\u6570\uff0c\u4f8b\u5982 username \u548c password\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u521b\u5efa account.csv\uff0c\u5e76\u5728\u6587\u4ef6\u4e2d\u6309\u7167\u5982\u4e0b\u5f62\u5f0f\u8fdb\u884c\u63cf\u8ff0\u3002 username,password test1,111111 test2,222222 test3,333333 \u7136\u540e\u5728 YAML/JSON \u6d4b\u8bd5\u7528\u4f8b\u6587\u4ef6\u4e2d\uff0c\u5c31\u53ef\u4ee5\u901a\u8fc7\u5185\u7f6e\u7684 parameterize\uff08\u53ef\u7b80\u5199\u4e3a P\uff09\u51fd\u6570\u5f15\u7528 CSV \u6587\u4ef6\u3002 \u5047\u8bbe\u9879\u76ee\u7684\u6839\u76ee\u5f55\u4e0b\u6709 data \u6587\u4ef6\u5939\uff0caccount.csv \u4f4d\u4e8e\u5176\u4e2d\uff0c\u90a3\u4e48 account.csv \u7684\u5f15\u7528\u63cf\u8ff0\u5982\u4e0b\uff1a config: name: test suite demo base_url: \"https://postman-echo.com\" testcases: - name: test case 1 parameters: username-password: ${P(data/account.csv)} testcase: /path/to/testcase1 \u9700\u8981\u8bf4\u660e\u7684\u662f\uff0c\u5728 parameters \u4e2d\u6307\u5b9a\u7684\u53c2\u6570\u540d\u79f0\u5fc5\u987b\u4e0e CSV \u6587\u4ef6\u4e2d\u7b2c\u4e00\u884c\u7684\u53c2\u6570\u540d\u79f0\u4e00\u81f4\uff0c\u987a\u5e8f\u53ef\u4ee5\u4e0d\u4e00\u81f4\uff0c\u53c2\u6570\u4e2a\u6570\u4e5f\u53ef\u4ee5\u4e0d\u4e00\u81f4\u3002 \u4f8b\u5982\uff0c\u5728 account.csv \u6587\u4ef6\u4e2d\u53ef\u4ee5\u5305\u542b\u591a\u4e2a\u53c2\u6570\uff0cusername\u3001password\u3001phone\u3001age\uff1a username,password,phone,age test1,111111,18600000001,21 test2,222222,18600000002,22 test3,333333,18600000003,23 \u800c\u5728 YAML/JSON \u6d4b\u8bd5\u7528\u4f8b\u6587\u4ef6\u4e2d\u6307\u5b9a\u53c2\u6570\u65f6\uff0c\u53ef\u4ee5\u53ea\u4f7f\u7528\u90e8\u5206\u53c2\u6570\uff0c\u5e76\u4e14\u53c2\u6570\u987a\u5e8f\u65e0\u9700\u4e0e CSV \u6587\u4ef6\u4e2d\u53c2\u6570\u540d\u79f0\u7684\u987a\u5e8f\u4e00\u81f4\u3002 config: name: test suite demo base_url: \"https://postman-echo.com\" testcases: - name: test case 1 parameters: phone-username: ${P(account.csv)} testcase: /path/to/testcase1 \u72ec\u7acb\u53c2\u6570 & \u5f15\u7528\u81ea\u5b9a\u4e49\u51fd\u6570 \u5bf9\u4e8e\u6ca1\u6709\u73b0\u6210\u53c2\u6570\u5217\u8868\uff0c\u6216\u8005\u9700\u8981\u66f4\u7075\u6d3b\u7684\u65b9\u5f0f\u52a8\u6001\u751f\u6210\u53c2\u6570\u7684\u60c5\u51b5\uff0c\u53ef\u4ee5\u901a\u8fc7\u5728 debugtalk.py \u4e2d\u81ea\u5b9a\u4e49\u51fd\u6570\u751f\u6210\u53c2\u6570\u5217\u8868\uff0c\u5e76\u5728 YAML/JSON \u5f15\u7528\u81ea\u5b9a\u4e49\u51fd\u6570\u7684\u65b9\u5f0f\u3002 \u4f8b\u5982\uff0c\u82e5\u9700\u5bf9 user_id \u8fdb\u884c\u53c2\u6570\u5316\u6570\u636e\u9a71\u52a8\uff0c\u53c2\u6570\u53d6\u503c\u8303\u56f4\u4e3a 1001\uff5e1004\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u5728 debugtalk.py \u4e2d\u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\uff0c\u8fd4\u56de\u53c2\u6570\u5217\u8868\u3002 def get_user_id(): return [ {\"user_id\": 1001}, {\"user_id\": 1002}, {\"user_id\": 1003}, {\"user_id\": 1004} ] \u7136\u540e\uff0c\u5728 YAML/JSON \u7684 parameters \u4e2d\u5c31\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528\u81ea\u5b9a\u4e49\u51fd\u6570\u7684\u5f62\u5f0f\u6765\u6307\u5b9a\u6570\u636e\u6e90\u3002 config: name: test suite demo base_url: \"https://postman-echo.com\" testcases: - name: test case 1 parameters: user_id: ${get_user_id()} testcase: /path/to/testcase1 \u53e6\u5916\uff0c\u901a\u8fc7\u51fd\u6570\u7684\u4f20\u53c2\u673a\u5236\uff0c\u8fd8\u53ef\u4ee5\u5b9e\u73b0\u66f4\u7075\u6d3b\u7684\u53c2\u6570\u751f\u6210\u529f\u80fd\uff0c\u5728\u8c03\u7528\u51fd\u6570\u65f6\u6307\u5b9a\u9700\u8981\u751f\u6210\u7684\u53c2\u6570\u4e2a\u6570\u3002 \u5173\u8054\u53c2\u6570 & \u5f15\u7528\u81ea\u5b9a\u4e49\u51fd\u6570 \u5bf9\u4e8e\u5177\u6709\u5173\u8054\u6027\u7684\u591a\u4e2a\u53c2\u6570\uff0c\u5b9e\u73b0\u65b9\u5f0f\u4e5f\u7c7b\u4f3c\u3002 \u4f8b\u5982\uff0c\u5728debugtalk.py\u4e2d\u5b9a\u4e49\u51fd\u6570get_account\uff0c\u751f\u6210\u6307\u5b9a\u6570\u91cf\u7684\u8d26\u53f7\u5bc6\u7801\u53c2\u6570\u5217\u8868\u3002 def get_account(num): accounts = [] for index in range(1, num+1): accounts.append( {\"username\": \"user%s\" % index, \"password\": str(index) * 6}, ) return accounts \u5728YAML/JSON\u7684parameters\u4e2d\u5c31\u53ef\u4ee5\u8c03\u7528\u81ea\u5b9a\u4e49\u51fd\u6570\u751f\u6210\u6307\u5b9a\u6570\u91cf\u7684\u53c2\u6570\u5217\u8868 config: name: test suite demo base_url: \"https://postman-echo.com\" testcases: - name: test case 1 parameters: username-password: ${get_account(10)} testcase: /path/to/testcase1 \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5728\u81ea\u5b9a\u4e49\u51fd\u6570\u4e2d\uff0c\u751f\u6210\u7684\u53c2\u6570\u5217\u8868\u5fc5\u987b\u4e3a list of dict \u7684\u6570\u636e\u7ed3\u6784\uff0c\u8be5\u8bbe\u8ba1\u4e3b\u8981\u662f\u4e3a\u4e86\u4e0e CSV \u6587\u4ef6\u7684\u5904\u7406\u673a\u5236\u4fdd\u6301\u4e00\u81f4\u3002 \u53c2\u6570\u5316\u8fd0\u884c \u5b8c\u6210\u4ee5\u4e0a\u53c2\u6570\u5b9a\u4e49\u548c\u6570\u636e\u6e90\u51c6\u5907\u5de5\u4f5c\u4e4b\u540e\uff0c\u53c2\u6570\u5316\u8fd0\u884c\u4e0e\u666e\u901a\u6d4b\u8bd5\u7528\u4f8b\u7684\u8fd0\u884c\u5b8c\u5168\u4e00\u81f4\u3002 \u91c7\u7528hrun\u547d\u4ee4\u8fd0\u884c\u81ea\u52a8\u5316\u6d4b\u8bd5\uff1a $ hrun tests/data/demo_parameters.yml \u91c7\u7528 locusts \u547d\u4ee4\u8fd0\u884c\u6027\u80fd\u6d4b\u8bd5\uff1a $ locusts -f tests/data/demo_parameters.yml \u533a\u522b\u5728\u4e8e\uff0c\u81ea\u52a8\u5316\u6d4b\u8bd5\u65f6\u904d\u5386\u4e00\u904d\u540e\u4f1a\u7ec8\u6b62\u6267\u884c\uff0c\u6027\u80fd\u6d4b\u8bd5\u65f6\u6bcf\u4e2a\u5e76\u53d1\u7528\u6237\u90fd\u4f1a\u5faa\u73af\u904d\u5386\u6240\u6709\u53c2\u6570\u3002","title":"\u53c2\u6570\u5316\u6570\u636e\u9a71\u52a8"},{"location":"concepts/parameters/#_1","text":"","title":"\u53c2\u6570\u5316\u6570\u636e\u9a71\u52a8"},{"location":"concepts/parameters/#_2","text":"\u5728\u81ea\u52a8\u5316\u6d4b\u8bd5\u4e2d\uff0c\u7ecf\u5e38\u4f1a\u9047\u5230\u5982\u4e0b\u573a\u666f\uff1a \u6d4b\u8bd5\u641c\u7d22\u529f\u80fd\uff0c\u53ea\u6709\u4e00\u4e2a\u641c\u7d22\u8f93\u5165\u6846\uff0c\u4f46\u670910\u79cd\u4e0d\u540c\u7c7b\u578b\u7684\u641c\u7d22\u5173\u952e\u5b57\uff1b \u6d4b\u8bd5\u8d26\u53f7\u767b\u5f55\u529f\u80fd\uff0c\u9700\u8981\u8f93\u5165\u7528\u6237\u540d\u548c\u5bc6\u7801\uff0c\u6309\u7167\u7b49\u4ef7\u7c7b\u5212\u5206\u540e\u670920\u79cd\u7ec4\u5408\u60c5\u51b5\u3002 \u8fd9\u91cc\u53ea\u662f\u968f\u610f\u627e\u4e86\u4e24\u4e2a\u5178\u578b\u7684\u4f8b\u5b50\uff0c\u76f8\u4fe1\u5927\u5bb6\u90fd\u6709\u9047\u5230\u8fc7\u5f88\u591a\u7c7b\u4f3c\u7684\u573a\u666f\u3002\u603b\u7ed3\u4e0b\u6765\uff0c\u5c31\u662f\u6211\u4eec\u7684\u81ea\u52a8\u5316\u811a\u672c\u4e2d\u5b58\u5728\u53c2\u6570\uff0c\u5e76\u4e14\u6211\u4eec\u9700\u8981\u91c7\u7528\u4e0d\u540c\u7684\u53c2\u6570\u53bb\u8fd0\u884c\u3002 \u7ecf\u8fc7\u6982\u62ec\uff0c\u53c2\u6570\u57fa\u672c\u4e0a\u5206\u4e3a\u4e24\u79cd\u7c7b\u578b\uff1a * \u5355\u4e2a\u72ec\u7acb\u53c2\u6570\uff1a\u4f8b\u5982\u524d\u9762\u7684\u7b2c\u4e00\u79cd\u573a\u666f\uff0c\u6211\u4eec\u53ea\u9700\u8981\u53d8\u6362\u641c\u7d22\u5173\u952e\u5b57\u8fd9\u4e00\u4e2a\u53c2\u6570\u3002 * \u591a\u4e2a\u5177\u6709\u5173\u8054\u6027\u7684\u53c2\u6570\uff1a\u4f8b\u5982\u767b\u5f55\u573a\u666f\uff0c\u6211\u4eec\u9700\u8981\u53d8\u6362\u540d\u7528\u6237\u548c\u5bc6\u7801\u4e24\u4e2a\u53c2\u6570\uff0c\u5e76\u4e14\u8fd9\u4e24\u4e2a\u53c2\u6570\u9700\u8981\u5173\u8054\u7ec4\u5408\u3002 \u7136\u540e\uff0c\u5bf9\u4e8e\u53c2\u6570\u800c\u8a00\uff0c\u6211\u4eec\u53ef\u80fd\u5177\u6709\u4e00\u4e2a\u53c2\u6570\u5217\u8868\uff0c\u5728\u811a\u672c\u8fd0\u884c\u65f6\u9700\u8981\u6309\u7167\u4e0d\u540c\u7684\u89c4\u5219\u53bb\u53d6\u503c\uff0c\u4f8b\u5982\u987a\u5e8f\u53d6\u503c\u3001\u968f\u673a\u53d6\u503c\u3001\u5faa\u73af\u53d6\u503c\u7b49\u3002 \u8fd9\u5c31\u662f\u5178\u578b\u7684\u53c2\u6570\u5316\u548c\u6570\u636e\u9a71\u52a8\u3002 \u5982\u9700\u4e86\u89e3 HttpRunner \u53c2\u6570\u5316\u6570\u636e\u9a71\u52a8\u673a\u5236\u7684\u5b9e\u73b0\u539f\u7406\u548c\u6280\u672f\u7ec6\u8282\uff0c\u53ef\u524d\u5f80\u9605\u8bfb \u300aHttpRunner \u5b9e\u73b0\u53c2\u6570\u5316\u6570\u636e\u9a71\u52a8\u673a\u5236\u300b \u3002","title":"\u4ecb\u7ecd"},{"location":"concepts/parameters/#testsuite","text":"HttpRunner v3.x\u5f00\u59cb\uff0c\u6d4b\u8bd5\u7528\u4f8b\u548c\u6d4b\u8bd5\u7528\u4f8b\u96c6\u90fd\u53ef\u4ee5\u5b9e\u73b0\u53c2\u6570\u5316\u6570\u636e\u9a71\u52a8\uff0c\u9700\u8981\u4f7f\u7528parameters\u5173\u952e\u5b57\uff0c\u5b9a\u4e49\u53c2\u6570\u540d\u79f0\u5e76\u6307\u5b9a\u6570\u636e\u6e90\u53d6\u503c\u65b9\u5f0f\u3002 \u5982\u679c\u8ba9\u6d4b\u8bd5\u7528\u4f8b(testcase)\u7684\u6982\u5ff5\u66f4\u7eaf\u7cb9\uff0c\u53ef\u4ee5\u8003\u8651\u5c06\u53c2\u6570\u5316\u7684\u529f\u80fd\u5728testsuite\u4e2d\u5b9e\u73b0\u3002 \u521b\u5efa\u4e00\u4e2a testsuite\uff0c\u5728 testsuite \u4e2d\u5f15\u7528\u6d4b\u8bd5\u7528\u4f8b\uff0c\u5e76\u5b9a\u4e49\u53c2\u6570\u5316\u914d\u7f6e\u3002 \u6d4b\u8bd5\u7528\u4f8b\u96c6\uff08testsuite\uff09\u7684\u683c\u5f0f\u5982\u4e0b\u6240\u793a\uff1a config: name: test suite demo variables: # testsuite config variables foo1: config_bar1 foo2: config_bar2 expect_foo1: config_bar1 expect_foo2: config_bar2 base_url: \"https://postman-echo.com\" testcases: - name: test case 1 variables: # testcase variables uid: 1000 var_c: ${gen_random_string(5)} parameters: uid: [101, 102, 103] var_c: [\"demo1\", \"demo2\", \"demo3\"] testcase: /path/to/testcase1","title":"\u6d4b\u8bd5\u7528\u4f8b\u96c6(testsuite)\u51c6\u5907"},{"location":"concepts/parameters/#_3","text":"\u5982\u9700\u5bf9\u67d0\u6d4b\u8bd5\u7528\u4f8b(testcase)\u5b9e\u73b0\u53c2\u6570\u5316\u6570\u636e\u9a71\u52a8\uff0c\u9700\u8981\u4f7f\u7528parameters\u5173\u952e\u5b57\uff0c\u5b9a\u4e49\u53c2\u6570\u540d\u79f0\u5e76\u6307\u5b9a\u6570\u636e\u6e90\u53d6\u503c\u65b9\u5f0f\u3002 \u53c2\u6570\u540d\u79f0\u7684\u5b9a\u4e49\u5206\u4e3a\u4e24\u79cd\u60c5\u51b5\uff1a * \u72ec\u7acb\u53c2\u6570\u5355\u72ec\u8fdb\u884c\u5b9a\u4e49\uff1b * \u591a\u4e2a\u53c2\u6570\u5177\u6709\u5173\u8054\u6027\u7684\u53c2\u6570\u9700\u8981\u5c06\u5176\u5b9a\u4e49\u5728\u4e00\u8d77\uff0c\u91c7\u7528\u77ed\u6a2a\u7ebf(-)\u8fdb\u884c\u94fe\u63a5\u3002 \u6570\u636e\u6e90\u652f\u6301\u4e09\u79cd\u65b9\u5f0f\uff1a * \u811a\u672c\u4e2d\u76f4\u63a5\u6307\u5b9a\u53c2\u6570\u5217\u8868\uff1a\u8be5\u79cd\u65b9\u5f0f\u6700\u4e3a\u7b80\u5355\u6613\u7528\uff0c\u9002\u5408\u53c2\u6570\u5217\u8868\u6bd4\u8f83\u5c0f\u7684\u60c5\u51b5\u3002 \u793a\u4f8b\uff1a parameters: uid: [101, 102, 103] username-password: - [ \"user1\", \"111111\" ] - [ \"user2\", \"222222\" ] - [ \"user3\", \"333333\" ] \u901a\u8fc7\u5185\u7f6e\u7684parameterize(\u53ef\u7b80\u5199\u4e3aP)\u51fd\u6570\u5f15\u7528CSV\u6587\u4ef6\uff1a\u8be5\u79cd\u65b9\u5f0f\u9700\u8981\u51c6\u5907CSV\u6570\u636e\u6587\u4ef6\uff0c\u9002\u5408\u6570\u636e\u91cf\u6bd4\u8f83\u5927\u7684\u60c5\u51b5\u3002 \u793a\u4f8b\uff1a parameters: apkchannel: ${P(data/vip.csv)} \u5728debugtalk.py\u4e2d\u81ea\u5b9a\u4e49\u7684\u51fd\u6570\u751f\u6210\u53c2\u6570\u5217\u8868\uff1a\u8be5\u79cd\u65b9\u5f0f\u6700\u4e3a\u7075\u6d3b\uff0c\u53ef\u901a\u8fc7\u81ea\u5b9a\u4e49Python\u51fd\u6570\u5b9e\u73b0\u4efb\u610f\u573a\u666f\u7684\u6570\u636e\u9a71\u52a8\u673a\u5236\uff0c\u5f53\u9700\u8981\u52a8\u6001\u751f\u6210\u53c2\u6570\u5217\u8868\u65f6\u4e5f\u9700\u8981\u9009\u62e9\u8be5\u79cd\u65b9\u5f0f\u3002 \u793a\u4f8b\uff1a parameters: username-password: ${get_account(10)} \u4e09\u79cd\u65b9\u5f0f\u53ef\u6839\u636e\u5b9e\u9645\u9879\u76ee\u9700\u6c42\u8fdb\u884c\u7075\u6d3b\u9009\u62e9\uff0c\u540c\u65f6\u652f\u6301\u591a\u79cd\u65b9\u5f0f\u7684\u7ec4\u5408\u4f7f\u7528\u3002\u52a0\u5165\u6d4b\u8bd5\u7528\u4f8b\u4e2d\u5b9a\u4e49\u4e86\u591a\u4e2a\u53c2\u6570\uff0c\u90a3\u4e48\u6d4b\u8bd5\u7528\u4f8b\u5728\u8fd0\u884c\u65f6\u4f1a\u5bf9\u53c2\u6570\u8fdb\u884c\u7b1b\u5361\u5c14\u79ef\u7ec4\u5408\uff0c\u8986\u76d6\u6240\u6709\u53c2\u6570\u7ec4\u5408\u60c5\u51b5\u3002","title":"\u53c2\u6570\u914d\u7f6e\u6982\u8ff0"},{"location":"concepts/parameters/#_4","text":"\u5c06\u53c2\u6570\u540d\u79f0\u5b9a\u4e49\u548c\u6570\u636e\u6e90\u6307\u5b9a\u65b9\u5f0f\u8fdb\u884c\u7ec4\u5408\uff0c\u5171\u67096\u4e2d\u5f62\u5f0f\u3002\u5148\u5206\u522b\u9488\u5bf9\u6bcf\u4e00\u7c7b\u60c5\u51b5\u8fdb\u884c\u8be6\u7ec6\u8bf4\u660e\u3002","title":"\u53c2\u6570\u8be6\u7ec6\u914d\u7f6e"},{"location":"concepts/parameters/#_5","text":"\u5bf9\u4e8e\u53c2\u6570\u5217\u8868\u6bd4\u8f83\u5c0f\u7684\u60c5\u51b5\uff0c\u7ec4u ii\u7b80\u5355\u7684\u65b9\u5f0f\u662f\u76f4\u63a5\u5728YAML/JSON\u4e2d\u6307\u5b9a\u53c2\u6570\u5217\u8868\u5185\u5bb9\u3002 \u4f8b\u5982\uff0c\u5bf9\u4e8e\u72ec\u7acb\u53c2\u6570uid,\u53c2\u6570\u5217\u8868\u4e3a[1001, 1002, 1003, 1004]\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u6309\u7167\u5982\u4e0b\u65b9\u5f0f\u8fdb\u884c\u914d\u7f6e: config: name: test suite demo base_url: \"https://postman-echo.com\" testcases: - name: test case 1 parameters: uid: [1001, 1002, 1003, 1004] testcase: /path/to/testcase1 \u8fdb\u884c\u8be5\u914d\u7f6e\u540e\uff0c\u6d4b\u8bd5\u7528\u4f8b\u5728\u8fd0\u884c\u65f6\u5c31\u4f1a\u5bf9uid\u5b9e\u73b0\u6570\u636e\u9a71\u52a8\uff0c\u5373\u5206\u522b\u4f7f\u7528[1001, 1002, 1003, 1004]\u56db\u4e2a\u503c\u8fd0\u884c\u6d4b\u8bd5\u7528\u4f8b\u3002","title":"\u72ec\u7acb\u53c2\u6570&amp;\u76f4\u63a5\u6307\u5b9a\u53c2\u6570\u5217\u8868"},{"location":"concepts/parameters/#_6","text":"\u5bf9\u4e8e\u5177\u6709\u5173\u8054\u6027\u7684\u591a\u4e2a\u53c2\u6570\uff0c\u6bd4\u5982username\u548cpassword\uff0c\u90a3\u4e48\u53ef\u4ee5\u6309\u7167\u5982\u4e0b\u65b9\u5f0f\u8fdb\u884c\u914d\u7f6e\uff1a config: name: test suite demo base_url: \"https://postman-echo.com\" testcases: - name: test case 1 parameters: username-password: - [ \"user1\", \"111111\" ] - [ \"user2\", \"222222\" ] - [ \"user3\", \"333333\" ] testcase: /path/to/testcase1 \u8fdb\u884c\u8be5\u914d\u7f6e\u540e\uff0c\u6d4b\u8bd5\u7528\u4f8b\u5728\u8fd0\u884c\u65f6\u5c31\u4f1a\u5bf9username\u548cpassword\u5b9e\u73b0\u6570\u636e\u9a71\u52a8\uff0c\u5373\u5206\u522b\u4f7f\u7528 {\"username\": \"user1\", \"password\": \"111111\"}\u3001{\"username\": \"user2\", \"password\": \"222222\"}\u3001{\"username\": \"user3\", \"password\": \"333333\"} \u8fd0\u884c 3 \u6b21\u6d4b\u8bd5\uff0c\u5e76\u4e14\u4fdd\u8bc1\u53c2\u6570\u503c\u603b\u662f\u6210\u5bf9\u4f7f\u7528\u3002","title":"\u5173\u8054\u53c2\u6570&amp;\u76f4\u63a5\u6307\u5b9a\u53c2\u6570\u5217\u8868"},{"location":"concepts/parameters/#csv","text":"\u5bf9\u4e8e\u5df2\u6709\u53c2\u6570\u5217\u8868\uff0c\u5e76\u4e14\u6570\u636e\u91cf\u6bd4\u8f83\u5927\u7684\u60c5\u51b5\uff0c\u6bd4\u8f83\u9002\u5408\u7684\u65b9\u5f0f\u662f\u5c06\u53c2\u6570\u5217\u8868\u503c\u5b58\u50a8\u5728 CSV \u6570\u636e\u6587\u4ef6\u4e2d\u3002 \u5bf9\u4e8e CSV \u6570\u636e\u6587\u4ef6\uff0c\u9700\u8981\u9075\u5faa\u5982\u4e0b\u51e0\u9879\u7ea6\u5b9a\u7684\u89c4\u5219\uff1a CSV \u6587\u4ef6\u4e2d\u7684\u7b2c\u4e00\u884c\u5fc5\u987b\u4e3a\u53c2\u6570\u540d\u79f0\uff0c\u4ece\u7b2c\u4e8c\u884c\u5f00\u59cb\u4e3a\u53c2\u6570\u503c\uff0c\u6bcf\u4e2a\uff08\u7ec4\uff09\u503c\u5360\u4e00\u884c\uff1b \u82e5\u540c\u4e00\u4e2a CSV \u6587\u4ef6\u4e2d\u5177\u6709\u591a\u4e2a\u53c2\u6570\uff0c\u5219\u53c2\u6570\u540d\u79f0\u548c\u6570\u503c\u7684\u95f4\u9694\u7b26\u9700\u5b9e\u7528\u82f1\u6587\u9017\u53f7\uff1b \u5728 YAML/JSON \u6587\u4ef6\u5f15\u7528 CSV \u6587\u4ef6\u65f6\uff0c\u6587\u4ef6\u8def\u5f84\u4e3a\u57fa\u4e8e\u9879\u76ee\u6839\u76ee\u5f55\uff08debugtalk.py \u6240\u5728\u8def\u5f84\uff09\u7684\u76f8\u5bf9\u8def\u5f84\u3002 \u4f8b\u5982\uff0cuser_id \u7684\u53c2\u6570\u53d6\u503c\u8303\u56f4\u4e3a 1001\uff5e2000\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u521b\u5efa user_id.csv\uff0c\u5e76\u4e14\u5728\u6587\u4ef6\u4e2d\u6309\u7167\u5982\u4e0b\u5f62\u5f0f\u8fdb\u884c\u63cf\u8ff0\u3002 user_id 1001 1002 ... 1999 2000 \u7136\u540e\u5728 YAML/JSON \u6d4b\u8bd5\u7528\u4f8b\u6587\u4ef6\u4e2d\uff0c\u5c31\u53ef\u4ee5\u901a\u8fc7\u5185\u7f6e\u7684 parameterize\uff08\u53ef\u7b80\u5199\u4e3a P\uff09\u51fd\u6570\u5f15\u7528 CSV \u6587\u4ef6\u3002 \u5047\u8bbe\u9879\u76ee\u7684\u6839\u76ee\u5f55\u4e0b\u6709 data \u6587\u4ef6\u5939\uff0cuser_id.csv \u4f4d\u4e8e\u5176\u4e2d\uff0c\u90a3\u4e48 user_id.csv \u7684\u5f15\u7528\u63cf\u8ff0\u5982\u4e0b\uff1a config: name: test suite demo base_url: \"https://postman-echo.com\" testcases: - name: test case 1 parameters: user_id: ${P(data/user_id.csv)} testcase: /path/to/testcase1 \u5373 P \u51fd\u6570\u7684\u53c2\u6570\uff08CSV \u6587\u4ef6\u8def\u5f84\uff09\u662f\u76f8\u5bf9\u4e8e\u9879\u76ee\u6839\u76ee\u5f55\u7684\u76f8\u5bf9\u8def\u5f84\u3002\u5f53\u7136\uff0c\u8fd9\u91cc\u4e5f\u53ef\u4ee5\u4f7f\u7528 CSV \u6587\u4ef6\u5728\u7cfb\u7edf\u4e2d\u7684\u7edd\u5bf9\u8def\u5f84\uff0c\u4e0d\u8fc7\u8fd9\u6837\u7684\u8bdd\u5728\u9879\u76ee\u8def\u5f84\u53d8\u52a8\u65f6\u5c31\u4f1a\u51fa\u73b0\u95ee\u9898\uff0c\u56e0\u6b64\u63a8\u8350\u4f7f\u7528\u76f8\u5bf9\u8def\u5f84\u7684\u5f62\u5f0f\u3002","title":"\u72ec\u7acb\u53c2\u6570 &amp; \u5f15\u7528CSV\u6587\u4ef6"},{"location":"concepts/parameters/#csv_1","text":"\u5bf9\u4e8e\u5177\u6709\u5173\u8054\u6027\u7684\u591a\u4e2a\u53c2\u6570\uff0c\u4f8b\u5982 username \u548c password\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u521b\u5efa account.csv\uff0c\u5e76\u5728\u6587\u4ef6\u4e2d\u6309\u7167\u5982\u4e0b\u5f62\u5f0f\u8fdb\u884c\u63cf\u8ff0\u3002 username,password test1,111111 test2,222222 test3,333333 \u7136\u540e\u5728 YAML/JSON \u6d4b\u8bd5\u7528\u4f8b\u6587\u4ef6\u4e2d\uff0c\u5c31\u53ef\u4ee5\u901a\u8fc7\u5185\u7f6e\u7684 parameterize\uff08\u53ef\u7b80\u5199\u4e3a P\uff09\u51fd\u6570\u5f15\u7528 CSV \u6587\u4ef6\u3002 \u5047\u8bbe\u9879\u76ee\u7684\u6839\u76ee\u5f55\u4e0b\u6709 data \u6587\u4ef6\u5939\uff0caccount.csv \u4f4d\u4e8e\u5176\u4e2d\uff0c\u90a3\u4e48 account.csv \u7684\u5f15\u7528\u63cf\u8ff0\u5982\u4e0b\uff1a config: name: test suite demo base_url: \"https://postman-echo.com\" testcases: - name: test case 1 parameters: username-password: ${P(data/account.csv)} testcase: /path/to/testcase1 \u9700\u8981\u8bf4\u660e\u7684\u662f\uff0c\u5728 parameters \u4e2d\u6307\u5b9a\u7684\u53c2\u6570\u540d\u79f0\u5fc5\u987b\u4e0e CSV \u6587\u4ef6\u4e2d\u7b2c\u4e00\u884c\u7684\u53c2\u6570\u540d\u79f0\u4e00\u81f4\uff0c\u987a\u5e8f\u53ef\u4ee5\u4e0d\u4e00\u81f4\uff0c\u53c2\u6570\u4e2a\u6570\u4e5f\u53ef\u4ee5\u4e0d\u4e00\u81f4\u3002 \u4f8b\u5982\uff0c\u5728 account.csv \u6587\u4ef6\u4e2d\u53ef\u4ee5\u5305\u542b\u591a\u4e2a\u53c2\u6570\uff0cusername\u3001password\u3001phone\u3001age\uff1a username,password,phone,age test1,111111,18600000001,21 test2,222222,18600000002,22 test3,333333,18600000003,23 \u800c\u5728 YAML/JSON \u6d4b\u8bd5\u7528\u4f8b\u6587\u4ef6\u4e2d\u6307\u5b9a\u53c2\u6570\u65f6\uff0c\u53ef\u4ee5\u53ea\u4f7f\u7528\u90e8\u5206\u53c2\u6570\uff0c\u5e76\u4e14\u53c2\u6570\u987a\u5e8f\u65e0\u9700\u4e0e CSV \u6587\u4ef6\u4e2d\u53c2\u6570\u540d\u79f0\u7684\u987a\u5e8f\u4e00\u81f4\u3002 config: name: test suite demo base_url: \"https://postman-echo.com\" testcases: - name: test case 1 parameters: phone-username: ${P(account.csv)} testcase: /path/to/testcase1","title":"\u5173\u8054\u53c2\u6570&amp;\u5f15\u7528CSV\u6587\u4ef6"},{"location":"concepts/parameters/#_7","text":"\u5bf9\u4e8e\u6ca1\u6709\u73b0\u6210\u53c2\u6570\u5217\u8868\uff0c\u6216\u8005\u9700\u8981\u66f4\u7075\u6d3b\u7684\u65b9\u5f0f\u52a8\u6001\u751f\u6210\u53c2\u6570\u7684\u60c5\u51b5\uff0c\u53ef\u4ee5\u901a\u8fc7\u5728 debugtalk.py \u4e2d\u81ea\u5b9a\u4e49\u51fd\u6570\u751f\u6210\u53c2\u6570\u5217\u8868\uff0c\u5e76\u5728 YAML/JSON \u5f15\u7528\u81ea\u5b9a\u4e49\u51fd\u6570\u7684\u65b9\u5f0f\u3002 \u4f8b\u5982\uff0c\u82e5\u9700\u5bf9 user_id \u8fdb\u884c\u53c2\u6570\u5316\u6570\u636e\u9a71\u52a8\uff0c\u53c2\u6570\u53d6\u503c\u8303\u56f4\u4e3a 1001\uff5e1004\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u5728 debugtalk.py \u4e2d\u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\uff0c\u8fd4\u56de\u53c2\u6570\u5217\u8868\u3002 def get_user_id(): return [ {\"user_id\": 1001}, {\"user_id\": 1002}, {\"user_id\": 1003}, {\"user_id\": 1004} ] \u7136\u540e\uff0c\u5728 YAML/JSON \u7684 parameters \u4e2d\u5c31\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528\u81ea\u5b9a\u4e49\u51fd\u6570\u7684\u5f62\u5f0f\u6765\u6307\u5b9a\u6570\u636e\u6e90\u3002 config: name: test suite demo base_url: \"https://postman-echo.com\" testcases: - name: test case 1 parameters: user_id: ${get_user_id()} testcase: /path/to/testcase1 \u53e6\u5916\uff0c\u901a\u8fc7\u51fd\u6570\u7684\u4f20\u53c2\u673a\u5236\uff0c\u8fd8\u53ef\u4ee5\u5b9e\u73b0\u66f4\u7075\u6d3b\u7684\u53c2\u6570\u751f\u6210\u529f\u80fd\uff0c\u5728\u8c03\u7528\u51fd\u6570\u65f6\u6307\u5b9a\u9700\u8981\u751f\u6210\u7684\u53c2\u6570\u4e2a\u6570\u3002","title":"\u72ec\u7acb\u53c2\u6570 &amp; \u5f15\u7528\u81ea\u5b9a\u4e49\u51fd\u6570"},{"location":"concepts/parameters/#_8","text":"\u5bf9\u4e8e\u5177\u6709\u5173\u8054\u6027\u7684\u591a\u4e2a\u53c2\u6570\uff0c\u5b9e\u73b0\u65b9\u5f0f\u4e5f\u7c7b\u4f3c\u3002 \u4f8b\u5982\uff0c\u5728debugtalk.py\u4e2d\u5b9a\u4e49\u51fd\u6570get_account\uff0c\u751f\u6210\u6307\u5b9a\u6570\u91cf\u7684\u8d26\u53f7\u5bc6\u7801\u53c2\u6570\u5217\u8868\u3002 def get_account(num): accounts = [] for index in range(1, num+1): accounts.append( {\"username\": \"user%s\" % index, \"password\": str(index) * 6}, ) return accounts \u5728YAML/JSON\u7684parameters\u4e2d\u5c31\u53ef\u4ee5\u8c03\u7528\u81ea\u5b9a\u4e49\u51fd\u6570\u751f\u6210\u6307\u5b9a\u6570\u91cf\u7684\u53c2\u6570\u5217\u8868 config: name: test suite demo base_url: \"https://postman-echo.com\" testcases: - name: test case 1 parameters: username-password: ${get_account(10)} testcase: /path/to/testcase1 \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5728\u81ea\u5b9a\u4e49\u51fd\u6570\u4e2d\uff0c\u751f\u6210\u7684\u53c2\u6570\u5217\u8868\u5fc5\u987b\u4e3a list of dict \u7684\u6570\u636e\u7ed3\u6784\uff0c\u8be5\u8bbe\u8ba1\u4e3b\u8981\u662f\u4e3a\u4e86\u4e0e CSV \u6587\u4ef6\u7684\u5904\u7406\u673a\u5236\u4fdd\u6301\u4e00\u81f4\u3002","title":"\u5173\u8054\u53c2\u6570 &amp; \u5f15\u7528\u81ea\u5b9a\u4e49\u51fd\u6570"},{"location":"concepts/parameters/#_9","text":"\u5b8c\u6210\u4ee5\u4e0a\u53c2\u6570\u5b9a\u4e49\u548c\u6570\u636e\u6e90\u51c6\u5907\u5de5\u4f5c\u4e4b\u540e\uff0c\u53c2\u6570\u5316\u8fd0\u884c\u4e0e\u666e\u901a\u6d4b\u8bd5\u7528\u4f8b\u7684\u8fd0\u884c\u5b8c\u5168\u4e00\u81f4\u3002 \u91c7\u7528hrun\u547d\u4ee4\u8fd0\u884c\u81ea\u52a8\u5316\u6d4b\u8bd5\uff1a $ hrun tests/data/demo_parameters.yml \u91c7\u7528 locusts \u547d\u4ee4\u8fd0\u884c\u6027\u80fd\u6d4b\u8bd5\uff1a $ locusts -f tests/data/demo_parameters.yml \u533a\u522b\u5728\u4e8e\uff0c\u81ea\u52a8\u5316\u6d4b\u8bd5\u65f6\u904d\u5386\u4e00\u904d\u540e\u4f1a\u7ec8\u6b62\u6267\u884c\uff0c\u6027\u80fd\u6d4b\u8bd5\u65f6\u6bcf\u4e2a\u5e76\u53d1\u7528\u6237\u90fd\u4f1a\u5faa\u73af\u904d\u5386\u6240\u6709\u53c2\u6570\u3002","title":"\u53c2\u6570\u5316\u8fd0\u884c"},{"location":"concepts/security/","text":"\u4fe1\u606f\u5b89\u5168 \u80cc\u666f \u5f88\u591a\u65f6\u5019\u9879\u76ee\u4ee3\u7801\u5728\u8fd0\u884c\u65f6\u9700\u8981\u4f7f\u7528\u5230\u8d26\u53f7\u3001\u5bc6\u7801\u3001key\u7b49\u654f\u611f\u6570\u636e\u4fe1\u606f\uff0c\u4f46\u662f\u4ece\u4fe1\u606f\u5b89\u5168\u7684\u89d2\u5ea6\u8003\u8651\uff0c\u6211\u4eec\u662f\u4e0d\u80fd\u5c06\u8fd9\u4e9b\u654f\u611f\u6570\u636e\u63d0\u4ea4\u5230\u4ee3\u7801\u4ed3\u5e93\u7684\uff0c\u4e3b\u8981\u539f\u56e0\u6709\u4e24\u4e2a\uff1a \u52a0\u5f3a\u6743\u9650\u7ba1\u63a7\uff1a\u53c2\u4e0e\u9879\u76ee\u7684\u5f00\u53d1\u4eba\u5458\u53ef\u80fd\u4f1a\u6709\u5f88\u591a\uff0c\u5927\u5bb6\u90fd\u6709\u8bfb\u53d6\u4ee3\u7801\u4ed3\u5e93\u7684\u6743\u9650\uff0c\u4f46\u662f\u50cf key \u8fd9\u7c7b\u6781\u5ea6\u654f\u611f\u7684\u4fe1\u606f\u4e0d\u5e94\u8be5\u6240\u6709\u4eba\u90fd\u6709\u6743\u9650\u83b7\u53d6\uff1b \u51cf\u5c11\u4ee3\u7801\u6cc4\u6f0f\u7684\u5371\u5bb3\u6027\uff1a\u5047\u5982\u4ee3\u7801\u51fa\u73b0\u6cc4\u6f0f\uff0c\u654f\u611f\u6570\u636e\u4fe1\u606f\u4e0d\u5e94\u8be5\u4e5f\u540c\u65f6\u6cc4\u6f0f\u3002 \u89e3\u51b3\u65b9\u6848 \u90a3\u4ee3\u7801\u90e8\u7f72\u5230\u670d\u52a1\u5668\u6216 Jenkins \u6267\u884c\u673a\u540e\uff0c\u8fd0\u884c\u65f6\u8981\u4f7f\u7528\u5230\u8fd9\u4e9b\u654f\u611f\u6570\u636e\u4fe1\u606f\uff0c\u8be5\u600e\u4e48\u64cd\u4f5c\u5462\uff1f \u63a8\u8350\u7684\u64cd\u4f5c\u65b9\u5f0f\u4e3a\uff1a \u5bf9\u670d\u52a1\u5668\u8fdb\u884c\u6743\u9650\u7ba1\u63a7\uff0c\u53ea\u6709\u8fd0\u7ef4\u4eba\u5458\uff08\u6216\u8005\u6838\u5fc3\u5f00\u53d1\u4eba\u5458\uff09\u624d\u6709\u767b\u5f55\u670d\u52a1\u5668\u7684\u6743\u9650\uff1b \u8fd0\u7ef4\u4eba\u5458\uff08\u6216\u8005\u6838\u5fc3\u5f00\u53d1\u4eba\u5458\uff09\uff1a\u5728\u8fd0\u884c\u7684\u673a\u5668\u4e0a\u5c06\u654f\u611f\u6570\u636e\u8bbe\u7f6e\u5230\u7cfb\u7edf\u7684\u73af\u5883\u53d8\u91cf\u4e2d\uff1b \u666e\u901a\u5f00\u53d1\u4eba\u5458\uff1a\u53ea\u9700\u8981\u77e5\u9053\u654f\u611f\u4fe1\u606f\u7684\u53d8\u91cf\u540d\u79f0\uff0c\u5728\u4ee3\u7801\u4e2d\u901a\u8fc7\u8bfb\u53d6\u73af\u5883\u53d8\u91cf\u7684\u65b9\u5f0f\u83b7\u53d6\u654f\u611f\u6570\u636e\u3002 \u5b58\u50a8\u654f\u611f\u6570\u636e\uff08\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\uff09\u548c\u4f7f\u7528\u654f\u611f\u6570\u636e\uff08\u5f15\u7528\u73af\u5883\u53d8\u91cf\uff09\u7684\u5177\u4f53\u65b9\u6cd5\uff0c\u53ef\u53c2\u8003 \u73af\u5883\u53d8\u91cf \u4f7f\u7528\u8bf4\u660e\u6587\u6863\u3002","title":"\u4fe1\u606f\u5b89\u5168"},{"location":"concepts/security/#_1","text":"","title":"\u4fe1\u606f\u5b89\u5168"},{"location":"concepts/security/#_2","text":"\u5f88\u591a\u65f6\u5019\u9879\u76ee\u4ee3\u7801\u5728\u8fd0\u884c\u65f6\u9700\u8981\u4f7f\u7528\u5230\u8d26\u53f7\u3001\u5bc6\u7801\u3001key\u7b49\u654f\u611f\u6570\u636e\u4fe1\u606f\uff0c\u4f46\u662f\u4ece\u4fe1\u606f\u5b89\u5168\u7684\u89d2\u5ea6\u8003\u8651\uff0c\u6211\u4eec\u662f\u4e0d\u80fd\u5c06\u8fd9\u4e9b\u654f\u611f\u6570\u636e\u63d0\u4ea4\u5230\u4ee3\u7801\u4ed3\u5e93\u7684\uff0c\u4e3b\u8981\u539f\u56e0\u6709\u4e24\u4e2a\uff1a \u52a0\u5f3a\u6743\u9650\u7ba1\u63a7\uff1a\u53c2\u4e0e\u9879\u76ee\u7684\u5f00\u53d1\u4eba\u5458\u53ef\u80fd\u4f1a\u6709\u5f88\u591a\uff0c\u5927\u5bb6\u90fd\u6709\u8bfb\u53d6\u4ee3\u7801\u4ed3\u5e93\u7684\u6743\u9650\uff0c\u4f46\u662f\u50cf key \u8fd9\u7c7b\u6781\u5ea6\u654f\u611f\u7684\u4fe1\u606f\u4e0d\u5e94\u8be5\u6240\u6709\u4eba\u90fd\u6709\u6743\u9650\u83b7\u53d6\uff1b \u51cf\u5c11\u4ee3\u7801\u6cc4\u6f0f\u7684\u5371\u5bb3\u6027\uff1a\u5047\u5982\u4ee3\u7801\u51fa\u73b0\u6cc4\u6f0f\uff0c\u654f\u611f\u6570\u636e\u4fe1\u606f\u4e0d\u5e94\u8be5\u4e5f\u540c\u65f6\u6cc4\u6f0f\u3002","title":"\u80cc\u666f"},{"location":"concepts/security/#_3","text":"\u90a3\u4ee3\u7801\u90e8\u7f72\u5230\u670d\u52a1\u5668\u6216 Jenkins \u6267\u884c\u673a\u540e\uff0c\u8fd0\u884c\u65f6\u8981\u4f7f\u7528\u5230\u8fd9\u4e9b\u654f\u611f\u6570\u636e\u4fe1\u606f\uff0c\u8be5\u600e\u4e48\u64cd\u4f5c\u5462\uff1f \u63a8\u8350\u7684\u64cd\u4f5c\u65b9\u5f0f\u4e3a\uff1a \u5bf9\u670d\u52a1\u5668\u8fdb\u884c\u6743\u9650\u7ba1\u63a7\uff0c\u53ea\u6709\u8fd0\u7ef4\u4eba\u5458\uff08\u6216\u8005\u6838\u5fc3\u5f00\u53d1\u4eba\u5458\uff09\u624d\u6709\u767b\u5f55\u670d\u52a1\u5668\u7684\u6743\u9650\uff1b \u8fd0\u7ef4\u4eba\u5458\uff08\u6216\u8005\u6838\u5fc3\u5f00\u53d1\u4eba\u5458\uff09\uff1a\u5728\u8fd0\u884c\u7684\u673a\u5668\u4e0a\u5c06\u654f\u611f\u6570\u636e\u8bbe\u7f6e\u5230\u7cfb\u7edf\u7684\u73af\u5883\u53d8\u91cf\u4e2d\uff1b \u666e\u901a\u5f00\u53d1\u4eba\u5458\uff1a\u53ea\u9700\u8981\u77e5\u9053\u654f\u611f\u4fe1\u606f\u7684\u53d8\u91cf\u540d\u79f0\uff0c\u5728\u4ee3\u7801\u4e2d\u901a\u8fc7\u8bfb\u53d6\u73af\u5883\u53d8\u91cf\u7684\u65b9\u5f0f\u83b7\u53d6\u654f\u611f\u6570\u636e\u3002 \u5b58\u50a8\u654f\u611f\u6570\u636e\uff08\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\uff09\u548c\u4f7f\u7528\u654f\u611f\u6570\u636e\uff08\u5f15\u7528\u73af\u5883\u53d8\u91cf\uff09\u7684\u5177\u4f53\u65b9\u6cd5\uff0c\u53ef\u53c2\u8003 \u73af\u5883\u53d8\u91cf \u4f7f\u7528\u8bf4\u660e\u6587\u6863\u3002","title":"\u89e3\u51b3\u65b9\u6848"},{"location":"concepts/step_case_suite/","text":"\u540d\u8bcd\u89e3\u91ca(step/case/suite) \u672c\u6587\u4e3b\u8981\u6765\u6e90\u4e0ehttprunner v2.x\u7684\u540d\u8bcd\u89e3\u91ca\u7bc7\uff0c\u66f4\u65b0\u4e86httprunner v3.x\u7684yaml\u811a\u672c\u683c\u5f0f \u6d4b\u8bd5\u6b65\u9aa4\uff08teststep\uff09 \u6d4b\u8bd5\u7528\u4f8b\u662f\u6d4b\u8bd5\u6b65\u9aa4\u7684 \u6709\u5e8f \u96c6\u5408\uff0c\u800c\u5bf9\u4e8e\u63a5\u53e3\u6d4b\u8bd5\u6765\u8bf4\uff0c\u6bcf\u4e00\u4e2a\u6d4b\u8bd5\u6b65\u9aa4\u5e94\u8be5\u5c31\u5bf9\u5e94\u4e00\u4e2a API \u7684\u8bf7\u6c42\u63cf\u8ff0\u3002 \u6d4b\u8bd5\u7528\u4f8b\uff08testcase\uff09 \u4ece 2.0 \u7248\u672c\u5f00\u59cb\uff0cHttpRunner \u5f00\u59cb\u5bf9\u6d4b\u8bd5\u7528\u4f8b\u7684\u5b9a\u4e49\u8fdb\u884c\u8fdb\u4e00\u6b65\u7684\u660e\u786e\uff0c\u53c2\u8003 wiki \u4e0a\u7684\u63cf\u8ff0\u3002 A test case is a specification of the inputs, execution conditions, testing procedure, and expected results that define a single test to be executed to achieve a particular software testing objective, such as to exercise a particular program path or to verify compliance with a specific requirement. \u6982\u62ec\u4e0b\u6765\uff0c\u4e00\u6761\u6d4b\u8bd5\u7528\u4f8b\uff08testcase\uff09\u5e94\u8be5\u662f\u4e3a\u4e86\u6d4b\u8bd5\u67d0\u4e2a\u7279\u5b9a\u7684\u529f\u80fd\u903b\u8f91\u800c\u7cbe\u5fc3\u8bbe\u8ba1\u7684\uff0c\u5e76\u4e14\u81f3\u5c11\u5305\u542b\u5982\u4e0b\u51e0\u70b9\uff1a \u660e\u786e\u7684\u6d4b\u8bd5\u76ee\u7684\uff08achieve a particular software testing objective\uff09 \u660e\u786e\u7684\u8f93\u5165\uff08inputs\uff09 \u660e\u786e\u7684\u8fd0\u884c\u73af\u5883\uff08execution conditions\uff09 \u660e\u786e\u7684\u6d4b\u8bd5\u6b65\u9aa4\u63cf\u8ff0\uff08testing procedure\uff09 \u660e\u786e\u7684\u9884\u671f\u7ed3\u679c\uff08expected results\uff09 \u5bf9\u5e94\u5730\uff0cHttpRunner \u7684\u6d4b\u8bd5\u7528\u4f8b\u63cf\u8ff0\u65b9\u5f0f\u8fdb\u884c\u5982\u4e0b\u8bbe\u8ba1\uff1a \u6d4b\u8bd5\u7528\u4f8b\u5e94\u8be5\u662f\u5b8c\u6574\u4e14\u72ec\u7acb\u7684\uff0c\u6bcf\u6761\u6d4b\u8bd5\u7528\u4f8b\u5e94\u8be5\u662f\u90fd\u53ef\u4ee5\u72ec\u7acb\u8fd0\u884c\u7684\uff1b\u5728 HttpRunner \u4e2d\uff0c\u6bcf\u4e2a YAML/JSON \u6587\u4ef6\u5bf9\u5e94\u4e00\u6761\u6d4b\u8bd5\u7528\u4f8b\u3002 \u6d4b\u8bd5\u7528\u4f8b\u5305\u542b \u6d4b\u8bd5\u811a\u672c \u548c \u6d4b\u8bd5\u6570\u636e \u4e24\u90e8\u5206\uff1a \u6d4b\u8bd5\u7528\u4f8b = \u6d4b\u8bd5\u811a\u672c + \u6d4b\u8bd5\u6570\u636e \u6d4b\u8bd5\u811a\u672c \u91cd\u70b9\u662f\u63cf\u8ff0\u6d4b\u8bd5\u7684 \u4e1a\u52a1\u529f\u80fd\u903b\u8f91\uff0c\u5305\u62ec\u9884\u7f6e\u6761\u4ef6\u3001\u6d4b\u8bd5\u6b65\u9aa4\u3001\u9884\u671f\u7ed3\u679c\u7b49\uff0c\u5e76\u4e14\u53ef\u4ee5\u7ed3\u5408\u8f85\u52a9\u51fd\u6570\uff08debugtalk.py\uff09\u5b9e\u73b0\u590d\u6742\u7684\u8fd0\u7b97\u903b\u8f91\uff1b\u53ef\u4ee5\u5c06 \u6d4b\u8bd5\u811a\u672c \u7406\u89e3\u4e3a\u7f16\u7a0b\u8bed\u8a00\u4e2d\u7684 \u7c7b\uff08class\uff09\uff1b \u6d4b\u8bd5\u6570\u636e \u91cd\u70b9\u662f\u5bf9\u5e94\u6d4b\u8bd5\u7684 \u4e1a\u52a1\u6570\u636e\u903b\u8f91\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u7c7b\u7684\u5b9e\u4f8b\u5316\u6570\u636e\uff1b \u6d4b\u8bd5\u6570\u636e \u548c \u6d4b\u8bd5\u811a\u672c \u5206\u79bb\u540e\uff0c\u5c31\u53ef\u4ee5\u6bd4\u8f83\u65b9\u4fbf\u5730\u5b9e\u73b0\u6570\u636e\u9a71\u52a8\u6d4b\u8bd5\uff0c\u901a\u8fc7\u5bf9\u6d4b\u8bd5\u811a\u672c\u4f20\u5165\u4e00\u7ec4\u6570\u636e\uff0c\u5b9e\u73b0\u540c\u4e00\u4e1a\u52a1\u529f\u80fd\u5728\u4e0d\u540c\u6570\u636e\u903b\u8f91\u4e0b\u7684\u6d4b\u8bd5\u9a8c\u8bc1\u3002 \u6d4b\u8bd5\u7528\u4f8b\u96c6\uff08testsuite\uff09 \u6d4b\u8bd5\u7528\u4f8b\u96c6 \u662f \u6d4b\u8bd5\u7528\u4f8b \u7684 \u65e0\u5e8f \u96c6\u5408\uff0c\u96c6\u5408\u4e2d\u7684\u6d4b\u8bd5\u7528\u4f8b\u5e94\u8be5\u90fd\u662f\u76f8\u4e92\u72ec\u7acb\uff0c\u4e0d\u5b58\u5728\u5148\u540e\u4f9d\u8d56\u5173\u7cfb\u7684\u3002 \u5982\u679c\u786e\u5b9e\u5b58\u5728\u5148\u540e\u4f9d\u8d56\u5173\u7cfb\u600e\u4e48\u529e\uff0c\u4f8b\u5982\u767b\u5f55\u529f\u80fd\u548c\u4e0b\u5355\u529f\u80fd\u3002\u6b63\u786e\u7684\u505a\u6cd5\u5e94\u8be5\u662f\uff0c\u5728\u4e0b\u5355\u6d4b\u8bd5\u7528\u4f8b\u7684\u524d\u7f6e\u6b65\u9aa4\u4e2d\u6267\u884c\u767b\u5f55\u64cd\u4f5c\u3002 config: name: \"request methods testcase: reference testcase\" teststeps: - name: step1 testcase: testcases/login.yml - name: step2 api: api/add_cart.yml - name: step3 api: api/make_order.yml \u6d4b\u8bd5\u573a\u666f \u6d4b\u8bd5\u573a\u666f \u548c \u6d4b\u8bd5\u7528\u4f8b\u96c6 \u662f\u540c\u4e00\u6982\u5ff5\uff0c\u90fd\u662f \u6d4b\u8bd5\u7528\u4f8b \u7684 \u65e0\u5e8f \u96c6\u5408\u3002 \u63a5\u53e3 \u6d4b\u8bd5\u7528\u4f8b\u96c6 \u53c2\u6570 \u53d8\u91cf \u6d4b\u8bd5\u811a\u672c\uff08YAML/JSON\uff09 debugtalk.py \u73af\u5883\u53d8\u91cf \u9879\u76ee\u6839\u76ee\u5f55 \u9879\u76ee\u6839\u76ee\u5f55\u4ee5 debugtalk.py \u4e3a\u951a, \u6d4b\u8bd5\u7528\u4f8b\u4e2d\u7684\u76f8\u5bf9\u8def\u5f84\uff08\u4f8b\u5982\u5f15\u7528\u6d4b\u8bd5\u7528\u4f8b\u6216CSV\u6587\u4ef6\uff09\u90fd\u57fa\u4e8e\u6b64\u6839\u8def\u5f84\u3002","title":"\u540d\u8bcd\u89e3\u91ca(step/case/suite)"},{"location":"concepts/step_case_suite/#stepcasesuite","text":"\u672c\u6587\u4e3b\u8981\u6765\u6e90\u4e0ehttprunner v2.x\u7684\u540d\u8bcd\u89e3\u91ca\u7bc7\uff0c\u66f4\u65b0\u4e86httprunner v3.x\u7684yaml\u811a\u672c\u683c\u5f0f","title":"\u540d\u8bcd\u89e3\u91ca(step/case/suite)"},{"location":"concepts/step_case_suite/#teststep","text":"\u6d4b\u8bd5\u7528\u4f8b\u662f\u6d4b\u8bd5\u6b65\u9aa4\u7684 \u6709\u5e8f \u96c6\u5408\uff0c\u800c\u5bf9\u4e8e\u63a5\u53e3\u6d4b\u8bd5\u6765\u8bf4\uff0c\u6bcf\u4e00\u4e2a\u6d4b\u8bd5\u6b65\u9aa4\u5e94\u8be5\u5c31\u5bf9\u5e94\u4e00\u4e2a API \u7684\u8bf7\u6c42\u63cf\u8ff0\u3002","title":"\u6d4b\u8bd5\u6b65\u9aa4\uff08teststep\uff09"},{"location":"concepts/step_case_suite/#testcase","text":"\u4ece 2.0 \u7248\u672c\u5f00\u59cb\uff0cHttpRunner \u5f00\u59cb\u5bf9\u6d4b\u8bd5\u7528\u4f8b\u7684\u5b9a\u4e49\u8fdb\u884c\u8fdb\u4e00\u6b65\u7684\u660e\u786e\uff0c\u53c2\u8003 wiki \u4e0a\u7684\u63cf\u8ff0\u3002 A test case is a specification of the inputs, execution conditions, testing procedure, and expected results that define a single test to be executed to achieve a particular software testing objective, such as to exercise a particular program path or to verify compliance with a specific requirement. \u6982\u62ec\u4e0b\u6765\uff0c\u4e00\u6761\u6d4b\u8bd5\u7528\u4f8b\uff08testcase\uff09\u5e94\u8be5\u662f\u4e3a\u4e86\u6d4b\u8bd5\u67d0\u4e2a\u7279\u5b9a\u7684\u529f\u80fd\u903b\u8f91\u800c\u7cbe\u5fc3\u8bbe\u8ba1\u7684\uff0c\u5e76\u4e14\u81f3\u5c11\u5305\u542b\u5982\u4e0b\u51e0\u70b9\uff1a \u660e\u786e\u7684\u6d4b\u8bd5\u76ee\u7684\uff08achieve a particular software testing objective\uff09 \u660e\u786e\u7684\u8f93\u5165\uff08inputs\uff09 \u660e\u786e\u7684\u8fd0\u884c\u73af\u5883\uff08execution conditions\uff09 \u660e\u786e\u7684\u6d4b\u8bd5\u6b65\u9aa4\u63cf\u8ff0\uff08testing procedure\uff09 \u660e\u786e\u7684\u9884\u671f\u7ed3\u679c\uff08expected results\uff09 \u5bf9\u5e94\u5730\uff0cHttpRunner \u7684\u6d4b\u8bd5\u7528\u4f8b\u63cf\u8ff0\u65b9\u5f0f\u8fdb\u884c\u5982\u4e0b\u8bbe\u8ba1\uff1a \u6d4b\u8bd5\u7528\u4f8b\u5e94\u8be5\u662f\u5b8c\u6574\u4e14\u72ec\u7acb\u7684\uff0c\u6bcf\u6761\u6d4b\u8bd5\u7528\u4f8b\u5e94\u8be5\u662f\u90fd\u53ef\u4ee5\u72ec\u7acb\u8fd0\u884c\u7684\uff1b\u5728 HttpRunner \u4e2d\uff0c\u6bcf\u4e2a YAML/JSON \u6587\u4ef6\u5bf9\u5e94\u4e00\u6761\u6d4b\u8bd5\u7528\u4f8b\u3002 \u6d4b\u8bd5\u7528\u4f8b\u5305\u542b \u6d4b\u8bd5\u811a\u672c \u548c \u6d4b\u8bd5\u6570\u636e \u4e24\u90e8\u5206\uff1a \u6d4b\u8bd5\u7528\u4f8b = \u6d4b\u8bd5\u811a\u672c + \u6d4b\u8bd5\u6570\u636e \u6d4b\u8bd5\u811a\u672c \u91cd\u70b9\u662f\u63cf\u8ff0\u6d4b\u8bd5\u7684 \u4e1a\u52a1\u529f\u80fd\u903b\u8f91\uff0c\u5305\u62ec\u9884\u7f6e\u6761\u4ef6\u3001\u6d4b\u8bd5\u6b65\u9aa4\u3001\u9884\u671f\u7ed3\u679c\u7b49\uff0c\u5e76\u4e14\u53ef\u4ee5\u7ed3\u5408\u8f85\u52a9\u51fd\u6570\uff08debugtalk.py\uff09\u5b9e\u73b0\u590d\u6742\u7684\u8fd0\u7b97\u903b\u8f91\uff1b\u53ef\u4ee5\u5c06 \u6d4b\u8bd5\u811a\u672c \u7406\u89e3\u4e3a\u7f16\u7a0b\u8bed\u8a00\u4e2d\u7684 \u7c7b\uff08class\uff09\uff1b \u6d4b\u8bd5\u6570\u636e \u91cd\u70b9\u662f\u5bf9\u5e94\u6d4b\u8bd5\u7684 \u4e1a\u52a1\u6570\u636e\u903b\u8f91\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u7c7b\u7684\u5b9e\u4f8b\u5316\u6570\u636e\uff1b \u6d4b\u8bd5\u6570\u636e \u548c \u6d4b\u8bd5\u811a\u672c \u5206\u79bb\u540e\uff0c\u5c31\u53ef\u4ee5\u6bd4\u8f83\u65b9\u4fbf\u5730\u5b9e\u73b0\u6570\u636e\u9a71\u52a8\u6d4b\u8bd5\uff0c\u901a\u8fc7\u5bf9\u6d4b\u8bd5\u811a\u672c\u4f20\u5165\u4e00\u7ec4\u6570\u636e\uff0c\u5b9e\u73b0\u540c\u4e00\u4e1a\u52a1\u529f\u80fd\u5728\u4e0d\u540c\u6570\u636e\u903b\u8f91\u4e0b\u7684\u6d4b\u8bd5\u9a8c\u8bc1\u3002","title":"\u6d4b\u8bd5\u7528\u4f8b\uff08testcase\uff09"},{"location":"concepts/step_case_suite/#testsuite","text":"\u6d4b\u8bd5\u7528\u4f8b\u96c6 \u662f \u6d4b\u8bd5\u7528\u4f8b \u7684 \u65e0\u5e8f \u96c6\u5408\uff0c\u96c6\u5408\u4e2d\u7684\u6d4b\u8bd5\u7528\u4f8b\u5e94\u8be5\u90fd\u662f\u76f8\u4e92\u72ec\u7acb\uff0c\u4e0d\u5b58\u5728\u5148\u540e\u4f9d\u8d56\u5173\u7cfb\u7684\u3002 \u5982\u679c\u786e\u5b9e\u5b58\u5728\u5148\u540e\u4f9d\u8d56\u5173\u7cfb\u600e\u4e48\u529e\uff0c\u4f8b\u5982\u767b\u5f55\u529f\u80fd\u548c\u4e0b\u5355\u529f\u80fd\u3002\u6b63\u786e\u7684\u505a\u6cd5\u5e94\u8be5\u662f\uff0c\u5728\u4e0b\u5355\u6d4b\u8bd5\u7528\u4f8b\u7684\u524d\u7f6e\u6b65\u9aa4\u4e2d\u6267\u884c\u767b\u5f55\u64cd\u4f5c\u3002 config: name: \"request methods testcase: reference testcase\" teststeps: - name: step1 testcase: testcases/login.yml - name: step2 api: api/add_cart.yml - name: step3 api: api/make_order.yml","title":"\u6d4b\u8bd5\u7528\u4f8b\u96c6\uff08testsuite\uff09"},{"location":"concepts/step_case_suite/#_1","text":"\u6d4b\u8bd5\u573a\u666f \u548c \u6d4b\u8bd5\u7528\u4f8b\u96c6 \u662f\u540c\u4e00\u6982\u5ff5\uff0c\u90fd\u662f \u6d4b\u8bd5\u7528\u4f8b \u7684 \u65e0\u5e8f \u96c6\u5408\u3002 \u63a5\u53e3 \u6d4b\u8bd5\u7528\u4f8b\u96c6 \u53c2\u6570 \u53d8\u91cf \u6d4b\u8bd5\u811a\u672c\uff08YAML/JSON\uff09 debugtalk.py \u73af\u5883\u53d8\u91cf","title":"\u6d4b\u8bd5\u573a\u666f"},{"location":"concepts/step_case_suite/#_2","text":"\u9879\u76ee\u6839\u76ee\u5f55\u4ee5 debugtalk.py \u4e3a\u951a, \u6d4b\u8bd5\u7528\u4f8b\u4e2d\u7684\u76f8\u5bf9\u8def\u5f84\uff08\u4f8b\u5982\u5f15\u7528\u6d4b\u8bd5\u7528\u4f8b\u6216CSV\u6587\u4ef6\uff09\u90fd\u57fa\u4e8e\u6b64\u6839\u8def\u5f84\u3002","title":"\u9879\u76ee\u6839\u76ee\u5f55"},{"location":"concepts/structure/","text":"\u9879\u76ee\u7ed3\u6784 \u4e3b\u8981\u53c2\u8003: httprunner v2.x \u4e2d\u6587\u6587\u6863 \u4e4b \u9879\u76ee\u6587\u4ef6\u7ec4\u7ec7 \u6587\u4ef6\u7c7b\u578b\u8bf4\u660e \u5728 HttpRunner \u81ea\u52a8\u5316\u6d4b\u8bd5\u9879\u76ee\u4e2d\uff0c\u4e3b\u8981\u5b58\u5728\u5982\u4e0b\u51e0\u7c7b\u6587\u4ef6\uff1a debugtalk.py\uff08\u53ef\u9009\uff09\uff1a\u5b58\u50a8\u9879\u76ee\u4e2d\u903b\u8f91\u8fd0\u7b97\u8f85\u52a9\u51fd\u6570 \u8be5\u6587\u4ef6\u5b58\u5728\u65f6\uff0c\u5c06\u4f5c\u4e3a\u9879\u76ee\u6839\u76ee\u5f55\u5b9a\u4f4d\u6807\u8bb0\uff0c\u5176\u6240\u5728\u76ee\u5f55\u5373\u88ab\u89c6\u4e3a\u9879\u76ee\u5de5\u7a0b\u6839\u76ee\u5f55 \u8be5\u6587\u4ef6\u4e0d\u5b58\u5728\u65f6\uff0c\u8fd0\u884c\u6d4b\u8bd5\u7684\u6240\u5728\u8def\u5f84\uff08CWD\uff09\u5c06\u88ab\u89c6\u4e3a\u9879\u76ee\u5de5\u7a0b\u6839\u76ee\u5f55 \u6d4b\u8bd5\u7528\u4f8b\u6587\u4ef6\u4e2d\u7684\u76f8\u5bf9\u8def\u5f84\uff08\u4f8b\u5982.csv\uff09\u5747\u9700\u57fa\u4e8e\u9879\u76ee\u5de5\u7a0b\u6839\u76ee\u5f55 \u8fd0\u884c\u6d4b\u8bd5\u540e\uff0c\u6d4b\u8bd5\u62a5\u544a\u6587\u4ef6\u5939\uff08reports\uff09\u4f1a\u751f\u6210\u5728\u9879\u76ee\u5de5\u7a0b\u6839\u76ee\u5f55 YAML/JSON/Python\uff08\u5fc5\u987b\uff09\uff1a\u6d4b\u8bd5\u7528\u4f8b\u6587\u4ef6\uff0c\u5b58\u50a8\u63a5\u53e3\u6d4b\u8bd5\u76f8\u5173\u4fe1\u606f .env\uff08\u53ef\u9009\uff09\uff1a\u5b58\u50a8\u9879\u76ee\u73af\u5883\u53d8\u91cf\uff0c\u901a\u5e38\u7528\u4e8e\u5b58\u50a8\u9879\u76ee\u654f\u611f\u4fe1\u606f .csv\uff08\u53ef\u9009\uff09\uff1a\u9879\u76ee\u6570\u636e\u6587\u4ef6\uff0c\u7528\u4e8e\u8fdb\u884c\u6570\u636e\u9a71\u52a8 reports\uff1a\u9ed8\u8ba4\u751f\u6210\u6d4b\u8bd5\u62a5\u544a\u7684\u5b58\u50a8\u6587\u4ef6\u5939 testcases: \u6d4b\u8bd5\u7528\u4f8b\u5b58\u653e\u76ee\u5f55 testsuites: \u6d4b\u8bd5\u7528\u4f8b\u96c6\u5b58\u653e\u76ee\u5f55 data: \u5b58\u50a8\u53c2\u6570\u5316\u6587\u4ef6\uff0c\u6216\u8005\u9879\u76ee\u4f9d\u8d56\u7684\u6587\u4ef6 \u9879\u76ee\u6587\u4ef6\u7ed3\u6784 \u5bf9\u4e8e\u63a5\u53e3\u6570\u6bd4\u8f83\u5c11\uff0c\u6216\u8005\u6d4b\u8bd5\u573a\u666f\u6bd4\u8f83\u7b80\u5355\u7684\u9879\u76ee\uff0c\u7ec4\u7ec7\u6d4b\u8bd5\u7528\u4f8b\u65f6\u65e0\u9700\u5206\u5c42\u3002\u5728\u6b64\u79cd\u60c5\u51b5\u4e0b\uff0c\u9879\u76ee\u6587\u4ef6\u7684\u76ee\u5f55\u7ed3\u6784\u6ca1\u6709\u4efb\u4f55\u8981\u6c42\uff0c\u5728\u9879\u76ee\u4e2d\u53ea\u9700\u8981\b\u4e00\u5806 YAML/JSON \u6587\u4ef6\u5373\u53ef\uff0c\u6bcf\u4e00\u4e2a\u6587\u4ef6\u5355\u72ec\u5bf9\u5e94\u4e00\u6761\u6d4b\u8bd5\u7528\u4f8b\uff1b\u6839\u636e\u9700\u8981\uff0c\u9879\u76ee\u4e2d\u53ef\u80fd\u8fd8\u4f1a\u6709 debugtalk.py\u3001.env\u7b49\u6587\u4ef6\u3002 \u63a8\u8350\u7684\u9879\u76ee\u6587\u4ef6\u76ee\u5f55\u7ed3\u6784\u793a\u4f8b\u5982\u4e0b\uff1a $ tree demo -a demo \u251c\u2500\u2500 .env \u251c\u2500\u2500 .gitignore \u251c\u2500\u2500 debugtalk.py \u251c\u2500\u2500 har \u251c\u2500\u2500 reports \u2514\u2500\u2500 testcases \u251c\u2500\u2500 demo_testcase_ref.yml \u2514\u2500\u2500 demo_testcase_request.yml \u5b8c\u6574\u7684\u9879\u76ee\u6587\u4ef6\u76ee\u5f55\u7ed3\u6784\u793a\u4f8b\u5982\u4e0b\uff1a tree httprunner_demo -a httprunner_demo \u251c\u2500\u2500 .env \u251c\u2500\u2500 .gitignore \u251c\u2500\u2500 data \u2502 \u251c\u2500\u2500 account.csv \u2502 \u2514\u2500\u2500 vip.csv \u251c\u2500\u2500 debugtalk.py \u251c\u2500\u2500 har \u251c\u2500\u2500 logs \u2502 \u2514\u2500\u2500 2aad97e8-2c00-46a6-8897-e129e0d741be.run.log \u251c\u2500\u2500 reports \u2502 \u251c\u2500\u2500 assets \u2502 \u2502 \u2514\u2500\u2500 style.css \u2502 \u2514\u2500\u2500 demo.html \u251c\u2500\u2500 testcases \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u251c\u2500\u2500 demo_testcase_request.yml \u2502 \u251c\u2500\u2500 demo_testcase_request_test.py \u2514\u2500\u2500 testsuites \u2514\u2500\u2500 suite.yml","title":"\u9879\u76ee\u7ed3\u6784"},{"location":"concepts/structure/#_1","text":"\u4e3b\u8981\u53c2\u8003: httprunner v2.x \u4e2d\u6587\u6587\u6863 \u4e4b \u9879\u76ee\u6587\u4ef6\u7ec4\u7ec7","title":"\u9879\u76ee\u7ed3\u6784"},{"location":"concepts/structure/#_2","text":"\u5728 HttpRunner \u81ea\u52a8\u5316\u6d4b\u8bd5\u9879\u76ee\u4e2d\uff0c\u4e3b\u8981\u5b58\u5728\u5982\u4e0b\u51e0\u7c7b\u6587\u4ef6\uff1a debugtalk.py\uff08\u53ef\u9009\uff09\uff1a\u5b58\u50a8\u9879\u76ee\u4e2d\u903b\u8f91\u8fd0\u7b97\u8f85\u52a9\u51fd\u6570 \u8be5\u6587\u4ef6\u5b58\u5728\u65f6\uff0c\u5c06\u4f5c\u4e3a\u9879\u76ee\u6839\u76ee\u5f55\u5b9a\u4f4d\u6807\u8bb0\uff0c\u5176\u6240\u5728\u76ee\u5f55\u5373\u88ab\u89c6\u4e3a\u9879\u76ee\u5de5\u7a0b\u6839\u76ee\u5f55 \u8be5\u6587\u4ef6\u4e0d\u5b58\u5728\u65f6\uff0c\u8fd0\u884c\u6d4b\u8bd5\u7684\u6240\u5728\u8def\u5f84\uff08CWD\uff09\u5c06\u88ab\u89c6\u4e3a\u9879\u76ee\u5de5\u7a0b\u6839\u76ee\u5f55 \u6d4b\u8bd5\u7528\u4f8b\u6587\u4ef6\u4e2d\u7684\u76f8\u5bf9\u8def\u5f84\uff08\u4f8b\u5982.csv\uff09\u5747\u9700\u57fa\u4e8e\u9879\u76ee\u5de5\u7a0b\u6839\u76ee\u5f55 \u8fd0\u884c\u6d4b\u8bd5\u540e\uff0c\u6d4b\u8bd5\u62a5\u544a\u6587\u4ef6\u5939\uff08reports\uff09\u4f1a\u751f\u6210\u5728\u9879\u76ee\u5de5\u7a0b\u6839\u76ee\u5f55 YAML/JSON/Python\uff08\u5fc5\u987b\uff09\uff1a\u6d4b\u8bd5\u7528\u4f8b\u6587\u4ef6\uff0c\u5b58\u50a8\u63a5\u53e3\u6d4b\u8bd5\u76f8\u5173\u4fe1\u606f .env\uff08\u53ef\u9009\uff09\uff1a\u5b58\u50a8\u9879\u76ee\u73af\u5883\u53d8\u91cf\uff0c\u901a\u5e38\u7528\u4e8e\u5b58\u50a8\u9879\u76ee\u654f\u611f\u4fe1\u606f .csv\uff08\u53ef\u9009\uff09\uff1a\u9879\u76ee\u6570\u636e\u6587\u4ef6\uff0c\u7528\u4e8e\u8fdb\u884c\u6570\u636e\u9a71\u52a8 reports\uff1a\u9ed8\u8ba4\u751f\u6210\u6d4b\u8bd5\u62a5\u544a\u7684\u5b58\u50a8\u6587\u4ef6\u5939 testcases: \u6d4b\u8bd5\u7528\u4f8b\u5b58\u653e\u76ee\u5f55 testsuites: \u6d4b\u8bd5\u7528\u4f8b\u96c6\u5b58\u653e\u76ee\u5f55 data: \u5b58\u50a8\u53c2\u6570\u5316\u6587\u4ef6\uff0c\u6216\u8005\u9879\u76ee\u4f9d\u8d56\u7684\u6587\u4ef6","title":"\u6587\u4ef6\u7c7b\u578b\u8bf4\u660e"},{"location":"concepts/structure/#_3","text":"\u5bf9\u4e8e\u63a5\u53e3\u6570\u6bd4\u8f83\u5c11\uff0c\u6216\u8005\u6d4b\u8bd5\u573a\u666f\u6bd4\u8f83\u7b80\u5355\u7684\u9879\u76ee\uff0c\u7ec4\u7ec7\u6d4b\u8bd5\u7528\u4f8b\u65f6\u65e0\u9700\u5206\u5c42\u3002\u5728\u6b64\u79cd\u60c5\u51b5\u4e0b\uff0c\u9879\u76ee\u6587\u4ef6\u7684\u76ee\u5f55\u7ed3\u6784\u6ca1\u6709\u4efb\u4f55\u8981\u6c42\uff0c\u5728\u9879\u76ee\u4e2d\u53ea\u9700\u8981\b\u4e00\u5806 YAML/JSON \u6587\u4ef6\u5373\u53ef\uff0c\u6bcf\u4e00\u4e2a\u6587\u4ef6\u5355\u72ec\u5bf9\u5e94\u4e00\u6761\u6d4b\u8bd5\u7528\u4f8b\uff1b\u6839\u636e\u9700\u8981\uff0c\u9879\u76ee\u4e2d\u53ef\u80fd\u8fd8\u4f1a\u6709 debugtalk.py\u3001.env\u7b49\u6587\u4ef6\u3002 \u63a8\u8350\u7684\u9879\u76ee\u6587\u4ef6\u76ee\u5f55\u7ed3\u6784\u793a\u4f8b\u5982\u4e0b\uff1a $ tree demo -a demo \u251c\u2500\u2500 .env \u251c\u2500\u2500 .gitignore \u251c\u2500\u2500 debugtalk.py \u251c\u2500\u2500 har \u251c\u2500\u2500 reports \u2514\u2500\u2500 testcases \u251c\u2500\u2500 demo_testcase_ref.yml \u2514\u2500\u2500 demo_testcase_request.yml \u5b8c\u6574\u7684\u9879\u76ee\u6587\u4ef6\u76ee\u5f55\u7ed3\u6784\u793a\u4f8b\u5982\u4e0b\uff1a tree httprunner_demo -a httprunner_demo \u251c\u2500\u2500 .env \u251c\u2500\u2500 .gitignore \u251c\u2500\u2500 data \u2502 \u251c\u2500\u2500 account.csv \u2502 \u2514\u2500\u2500 vip.csv \u251c\u2500\u2500 debugtalk.py \u251c\u2500\u2500 har \u251c\u2500\u2500 logs \u2502 \u2514\u2500\u2500 2aad97e8-2c00-46a6-8897-e129e0d741be.run.log \u251c\u2500\u2500 reports \u2502 \u251c\u2500\u2500 assets \u2502 \u2502 \u2514\u2500\u2500 style.css \u2502 \u2514\u2500\u2500 demo.html \u251c\u2500\u2500 testcases \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u251c\u2500\u2500 demo_testcase_request.yml \u2502 \u251c\u2500\u2500 demo_testcase_request_test.py \u2514\u2500\u2500 testsuites \u2514\u2500\u2500 suite.yml","title":"\u9879\u76ee\u6587\u4ef6\u7ed3\u6784"},{"location":"concepts/testcase-layer/","text":"\u6d4b\u8bd5\u7528\u4f8b\u5206\u5c42 \u6d4b\u8bd5\u7528\u4f8b\u5206\u5c42\u6a21\u578b \u5728\u81ea\u52a8\u5316\u6d4b\u8bd5\u9886\u57df\uff0c\u81ea\u52a8\u5316\u6d4b\u8bd5\u7528\u4f8b\u7684\u53ef\u7ef4\u62a4\u6027\u662f\u6781\u5176\u91cd\u8981\u7684\u56e0\u7d20\uff0c\u76f4\u63a5\u5173\u7cfb\u5230\u81ea\u52a8\u5316\u6d4b\u8bd5\u80fd\u5426\u6301\u7eed\u6709\u6548\u5730\u5728\u9879\u76ee\u4e2d\u5f00\u5c55\u3002 \u6982\u62ec\u6765\u8bf4\uff0c\u6d4b\u8bd5\u7528\u4f8b\u5206\u5c42\u673a\u5236\u7684\u6838\u5fc3\u662f\u5c06\u63a5\u53e3\u5b9a\u4e49\u3001\u6d4b\u8bd5\u6b65\u9aa4\u3001\u6d4b\u8bd5\u7528\u4f8b\u3001\u6d4b\u8bd5\u573a\u666f\u8fdb\u884c\u5206\u79bb\uff0c\u5355\u72ec\u8fdb\u884c\u63cf\u8ff0\u548c\u7ef4\u62a4\uff0c\u4ece\u800c\u5c3d\u53ef\u80fd\u5730\u51cf\u5c11\u81ea\u52a8\u5316\u6d4b\u8bd5\u7528\u4f8b\u7684\u7ef4\u62a4\u6210\u672c\u3002 \u903b\u8f91\u5173\u7cfb\u56fe\u5982\u4e0b\u6240\u793a\uff1a \u540c\u65f6\uff0c\u5f3a\u8c03\u5982\u4e0b\u51e0\u70b9\u6838\u5fc3\u6982\u5ff5\uff1a \u6d4b\u8bd5\u7528\u4f8b\uff08testcase\uff09\u5e94\u8be5\u662f\u5b8c\u6574\u4e14\u72ec\u7acb\u7684\uff0c\u6bcf\u6761\u6d4b\u8bd5\u7528\u4f8b\u5e94\u8be5\u662f\u90fd\u53ef\u4ee5\u72ec\u7acb\u8fd0\u884c\u7684 \u6d4b\u8bd5\u7528\u4f8b\u662f\u6d4b\u8bd5\u6b65\u9aa4\uff08teststep\uff09\u7684 \u6709\u5e8f \u96c6\u5408\uff0c\u6bcf\u4e00\u4e2a\u6d4b\u8bd5\u6b65\u9aa4\u5bf9\u5e94\u4e00\u4e2a API \u7684\u8bf7\u6c42\u63cf\u8ff0 \u6d4b\u8bd5\u7528\u4f8b\u96c6\uff08testsuite\uff09\u662f\u6d4b\u8bd5\u7528\u4f8b\u7684 \u65e0\u5e8f \u96c6\u5408\uff0c\u96c6\u5408\u4e2d\u7684\u6d4b\u8bd5\u7528\u4f8b\u5e94\u8be5\u90fd\u662f\u76f8\u4e92\u72ec\u7acb\uff0c\u4e0d\u5b58\u5728\u5148\u540e\u4f9d\u8d56\u5173\u7cfb\u7684\uff1b\u5982\u679c\u786e\u5b9e\u5b58\u5728\u5148\u540e\u4f9d\u8d56\u5173\u7cfb\uff0c\u90a3\u5c31\u9700\u8981\u5728\u6d4b\u8bd5\u7528\u4f8b\u4e2d\u5b8c\u6210\u4f9d\u8d56\u7684\u5904\u7406 \u5982\u679c\u5bf9\u4e8e\u4e0a\u8ff0\u7b2c\u4e09\u70b9\u611f\u89c9\u96be\u4ee5\u7406\u89e3\uff0c\u4e0d\u59a8\u770b\u4e0b\u4e0a\u56fe\u4e2d\u7684\u793a\u4f8b\uff1a testcase1 \u4f9d\u8d56\u4e8e testcase2\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u5728\u6d4b\u8bd5\u6b65\u9aa4\uff08teststep12\uff09\u4e2d\u5bf9 testcase2 \u8fdb\u884c\u5f15\u7528\uff0c\u7136\u540e testcase1 \u5c31\u662f\u5b8c\u6574\u4e14\u53ef\u72ec\u7acb\u8fd0\u884c\u7684\uff1b \u5728 testsuite \u4e2d\uff0ctestcase1 \u4e0e testcase2 \u76f8\u4e92\u72ec\u7acb\uff0c\u8fd0\u884c\u987a\u5e8f\u5c31\u4e0d\u518d\u6709\u5148\u540e\u4f9d\u8d56\u5173\u7cfb\u4e86\u3002 \u5206\u5c42\u63cf\u8ff0\u8be6\u89e3 \u7406\u89e3\u4e86\u6d4b\u8bd5\u7528\u4f8b\u5206\u5c42\u6a21\u578b\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u518d\u6765\u770b\u4e0b\u5728\u5206\u5c42\u6a21\u578b\u4e0b\uff0c\u63a5\u53e3\u3001\u6d4b\u8bd5\u7528\u4f8b\u3001\u6d4b\u8bd5\u7528\u4f8b\u96c6\u7684\u63cf\u8ff0\u5f62\u5f0f\u3002 \u63a5\u53e3\u5b9a\u4e49(API) \u6ce8\u610f\uff1a\u4e3a\u4e86\u7b80\u5355\uff0c\u5728HttpRunner v2.x\u4e2d\u7684API\u6982\u5ff5\u5df2\u7ecf\u88ab\u53d6\u6d88\u4e86\u3002\u4f60\u53ef\u4ee5\u5c06API\u5b9a\u4e49\u4e3a\u53ea\u6709\u4e00\u4e2a\u8bf7\u6c42\u6b65\u9aa4\u7684\u6d4b\u8bd5\u7528\u4f8b\u3002 \u6d4b\u8bd5\u7528\u4f8b(testcase) \u5f15\u7528\u6d4b\u8bd5\u7528\u4f8b \u5728\u6d4b\u8bd5\u7528\u4f8b\u7684\u6d4b\u8bd5\u6b65\u9aa4\u4e2d\uff0c\u53ef\u4ee5\u5f15\u7528\u5176\u5b83\u6d4b\u8bd5\u7528\u4f8b\u3002\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\uff0c\u53ef\u4ee5\u5728\u907f\u514d\u91cd\u590d\u63cf\u8ff0\u7684\u540c\u65f6\uff0c\u89e3\u51b3\u6d4b\u8bd5\u7528\u4f8b\u7684\u4f9d\u8d56\u5173\u7cfb\uff0c\u4ece\u800c\u4fdd\u8bc1\u6bcf\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u90fd\u662f\u72ec\u7acb\u53ef\u8fd0\u884c\u7684\u3002 \u5728\u6d4b\u8bd5\u6b65\u9aa4\uff08teststep\uff09\u4e2d\uff0c\u53ef\u901a\u8fc7 testcase \u5b57\u6bb5\u5f15\u7528\u5176\u5b83\u6d4b\u8bd5\u7528\u4f8b\uff0c\u5f15\u7528\u65b9\u5f0f\u4e3a\u5bf9\u5e94\u6d4b\u8bd5\u7528\u4f8b\u6587\u4ef6\u7684\u8def\u5f84\uff0c\u7edd\u5bf9\u8def\u5f84\u6216\u76f8\u5bf9\u8def\u5f84\u5747\u53ef\u3002\u63a8\u8350\u4f7f\u7528\u76f8\u5bf9\u8def\u5f84\uff0c\u8def\u5f84\u57fa\u51c6\u4e3a\u9879\u76ee\u6839\u76ee\u5f55\uff0c\u5373 debugtalk.py \u6240\u5728\u7684\u76ee\u5f55\u8def\u5f84\u3002 \u4f8b\u5982\uff0c\u5047\u8bbe\u6709\u4e00\u4e2a\u7528\u4f8b\uff0c\u5b9e\u73b0\u4e86\u5bf9\u83b7\u53d6 token \u529f\u80fd\u7684\u6d4b\u8bd5\uff1b\u5728\u5f88\u591a\u5176\u5b83\u529f\u80fd\u4e2d\u90fd\u4f1a\u4f9d\u8d56\u4e8e\u83b7\u53d6 token \u7684\u529f\u80fd\uff0c\u5982\u679c\u5c06\u8be5\u529f\u80fd\u7684\u6d4b\u8bd5\u6b65\u9aa4\u811a\u672c\u62f7\u8d1d\u5230\u5176\u5b83\u529f\u80fd\u7684\u6d4b\u8bd5\u7528\u4f8b\u4e2d\uff0c\u90a3\u4e48\u5c31\u4f1a\u5b58\u5728\u5927\u91cf\u91cd\u590d\uff0c\u5f53\u9700\u8981\u5bf9\u8be5\u90e8\u5206\u8fdb\u884c\u4fee\u6539\u65f6\u5c31\u9700\u8981\u4fee\u6539\u6240\u6709\u5730\u65b9\uff0c\u663e\u7136\u4e0d\u4fbf\u4e8e\u7ef4\u62a4\u3002 \u6bd4\u8f83\u597d\u7684\u505a\u6cd5\u662f\uff0c\u5728\u5176\u5b83\u529f\u80fd\u7684\u6d4b\u8bd5\u7528\u4f8b\uff08\u5982\u521b\u5efa\u7528\u6237\uff09\u4e2d\uff0c\u5f15\u7528\u83b7\u53d6 token \u529f\u80fd\u7684\u6d4b\u8bd5\u7528\u4f8b\uff08testcases/setup.yml\uff09\u4f5c\u4e3a\u4e00\u4e2a\u6d4b\u8bd5\u6b65\u9aa4\uff0c\u4ece\u800c\u521b\u5efa\u7528\u6237\uff08\"create user and check result.\"\uff09\u8fd9\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u4e5f\u53d8\u5f97\u72ec\u7acb\u53ef\u8fd0\u884c\u4e86\u3002 config: name: \"request methods testcase: reference testcase\" id: create_user base_url: \"http://127.0.0.1:5000\" variables: uid: 9001 device_sn: \"TESTCASE_CREATE_XXX\" export: session_token teststeps: - name: create user and check result variables: foo1: testcase_ref_bar1 expect_foo1: testcase_ref_bar1 testcase: testcases/demo_testcase_request.yml export: - session_token - name: check_and_create variables: token: $session_token testcase: testcases/deps/check_and_create.yml \u6d4b\u8bd5\u7528\u4f8b\u96c6(testsuite) \u5f53\u6d4b\u8bd5\u7528\u4f8b\u6570\u91cf\u6bd4\u8f83\u591a\u4ee5\u540e\uff0c\u4e3a\u4e86\u65b9\u4fbf\u7ba1\u7406\u548c\u5b9e\u73b0\u6279\u91cf\u8fd0\u884c\uff0c\u901a\u5e38\u9700\u8981\u4f7f\u7528\u6d4b\u8bd5\u7528\u4f8b\u96c6\u6765\u5bf9\u6d4b\u8bd5\u7528\u4f8b\u8fdb\u884c\u7ec4\u7ec7\u3002 \u5728\u524d\u6587\u7684\u6d4b\u8bd5\u7528\u4f8b\u5206\u5c42\u6a21\u578b\u4e2d\u4e5f\u5f3a\u8c03\u4e86\uff0c\u6d4b\u8bd5\u7528\u4f8b\u96c6\uff08testsuite\uff09\u662f\u6d4b\u8bd5\u7528\u4f8b\u7684 \u65e0\u5e8f \u96c6\u5408\uff0c\u96c6\u5408\u4e2d\u7684\u6d4b\u8bd5\u7528\u4f8b\u5e94\u8be5\u90fd\u662f\u76f8\u4e92\u72ec\u7acb\uff0c\u4e0d\u5b58\u5728\u5148\u540e\u4f9d\u8d56\u5173\u7cfb\u7684\uff1b\u5982\u679c\u786e\u5b9e\u5b58\u5728\u5148\u540e\u4f9d\u8d56\u5173\u7cfb\uff0c\u90a3\u5c31\u9700\u8981\u5728\u6d4b\u8bd5\u7528\u4f8b\u4e2d\u5b8c\u6210\u4f9d\u8d56\u7684\u5904\u7406\u3002 \u56e0\u4e3a\u662f\u65e0\u5e8f\u96c6\u5408\uff0c\u56e0\u6b64\u6d4b\u8bd5\u7528\u4f8b\u96c6\u7684\u63cf\u8ff0\u5f62\u5f0f\u4f1a\u4e0e\u6d4b\u8bd5\u7528\u4f8b\u6709\u4e9b\u4e0d\u540c\uff0c\u5728\u6bcf\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u96c6\u6587\u4ef6\u4e2d\uff0c\u7b2c\u4e00\u5c42\u7ea7\u5b58\u5728\u4e24\u7c7b\u5b57\u6bb5\uff1a config: \u6d4b\u8bd5\u7528\u4f8b\u96c6\u7684\u603b\u4f53\u914d\u7f6e\u53c2\u6570 testcases: \u503c\u4e3a\u65e0\u5e8f\u6570\u7ec4\uff0c\u5728\u5f15\u7528\u6d4b\u8bd5\u7528\u4f8b\u65f6\uff0c\u4e5f\u53ef\u4ee5\u6307\u5b9avariables\uff0c\u5b9e\u73b0\u5bf9\u5f15\u7528\u6d4b\u8bd5\u7528\u4f8b\u4e2dvariables\u7684\u8986\u76d6\u3002 \u975e\u53c2\u6570\u5316\u573a\u666f config: name: test suite demo variables: # testsuite config variables foo1: lalalla var_a: ${gen_random_string(5)} var_b: $var_a base_url: \"http://127.0.0.1:5000\" testcases: - name: test case 1 variables: # testcase variables uid: 1000 var_c: ${gen_random_string(5)} var_d: $var_c testcase: /path/to/testcase1 export: [\"varA\", \"varB\"] # export variables - name: test case 2 variables: # testcase variables uid: 1001 var_c: ${gen_random_string(5)} var_d: $var_c testcase: /path/to/testcase2 \u53c2\u6570\u5316\u573a\u666f(parameters) \u5bf9\u4e8e\u53c2\u6570\u5316\u573a\u666f\uff0c\u53ef\u901a\u8fc7parameters\u5b9e\u73b0\uff0c\u63cf\u8ff0\u5f62\u5f0f\u5982\u4e0b\u6240\u793a\u3002 config: name: test suite demo variables: # testsuite config variables foo1: lalalla base_url: \"http://127.0.0.1:5000\" testcases: - name: test case 1 variables: # testcase variables uid: 1000 var_c: ${gen_random_string(5)} parameters: uid: [101, 102, 103] var_c: [\"demo1\", \"demo2\", \"demo3\"] apkchannel: ${P(data/vip.csv)} testcase: /path/to/testcase1 \u53c2\u6570\u5316\u540e\uff0cparameters\u4e2d\u7684\u53d8\u91cf\u5c06\u91c7\u7528\u7b1b\u5361\u5c14\u79ef\u7ec4\u5408\u5f62\u6210\u53c2\u6570\u5217\u8868\uff0c\u4f9d\u6b21\u8986\u76d6variables\u4e2d\u7684\u53c2\u6570\uff0c\u9a71\u52a8\u6d4b\u8bd5\u7528\u4f8b\u7684\u8fd0\u884c\u3002","title":"\u6d4b\u8bd5\u7528\u4f8b\u5206\u5c42"},{"location":"concepts/testcase-layer/#_1","text":"","title":"\u6d4b\u8bd5\u7528\u4f8b\u5206\u5c42"},{"location":"concepts/testcase-layer/#_2","text":"\u5728\u81ea\u52a8\u5316\u6d4b\u8bd5\u9886\u57df\uff0c\u81ea\u52a8\u5316\u6d4b\u8bd5\u7528\u4f8b\u7684\u53ef\u7ef4\u62a4\u6027\u662f\u6781\u5176\u91cd\u8981\u7684\u56e0\u7d20\uff0c\u76f4\u63a5\u5173\u7cfb\u5230\u81ea\u52a8\u5316\u6d4b\u8bd5\u80fd\u5426\u6301\u7eed\u6709\u6548\u5730\u5728\u9879\u76ee\u4e2d\u5f00\u5c55\u3002 \u6982\u62ec\u6765\u8bf4\uff0c\u6d4b\u8bd5\u7528\u4f8b\u5206\u5c42\u673a\u5236\u7684\u6838\u5fc3\u662f\u5c06\u63a5\u53e3\u5b9a\u4e49\u3001\u6d4b\u8bd5\u6b65\u9aa4\u3001\u6d4b\u8bd5\u7528\u4f8b\u3001\u6d4b\u8bd5\u573a\u666f\u8fdb\u884c\u5206\u79bb\uff0c\u5355\u72ec\u8fdb\u884c\u63cf\u8ff0\u548c\u7ef4\u62a4\uff0c\u4ece\u800c\u5c3d\u53ef\u80fd\u5730\u51cf\u5c11\u81ea\u52a8\u5316\u6d4b\u8bd5\u7528\u4f8b\u7684\u7ef4\u62a4\u6210\u672c\u3002 \u903b\u8f91\u5173\u7cfb\u56fe\u5982\u4e0b\u6240\u793a\uff1a \u540c\u65f6\uff0c\u5f3a\u8c03\u5982\u4e0b\u51e0\u70b9\u6838\u5fc3\u6982\u5ff5\uff1a \u6d4b\u8bd5\u7528\u4f8b\uff08testcase\uff09\u5e94\u8be5\u662f\u5b8c\u6574\u4e14\u72ec\u7acb\u7684\uff0c\u6bcf\u6761\u6d4b\u8bd5\u7528\u4f8b\u5e94\u8be5\u662f\u90fd\u53ef\u4ee5\u72ec\u7acb\u8fd0\u884c\u7684 \u6d4b\u8bd5\u7528\u4f8b\u662f\u6d4b\u8bd5\u6b65\u9aa4\uff08teststep\uff09\u7684 \u6709\u5e8f \u96c6\u5408\uff0c\u6bcf\u4e00\u4e2a\u6d4b\u8bd5\u6b65\u9aa4\u5bf9\u5e94\u4e00\u4e2a API \u7684\u8bf7\u6c42\u63cf\u8ff0 \u6d4b\u8bd5\u7528\u4f8b\u96c6\uff08testsuite\uff09\u662f\u6d4b\u8bd5\u7528\u4f8b\u7684 \u65e0\u5e8f \u96c6\u5408\uff0c\u96c6\u5408\u4e2d\u7684\u6d4b\u8bd5\u7528\u4f8b\u5e94\u8be5\u90fd\u662f\u76f8\u4e92\u72ec\u7acb\uff0c\u4e0d\u5b58\u5728\u5148\u540e\u4f9d\u8d56\u5173\u7cfb\u7684\uff1b\u5982\u679c\u786e\u5b9e\u5b58\u5728\u5148\u540e\u4f9d\u8d56\u5173\u7cfb\uff0c\u90a3\u5c31\u9700\u8981\u5728\u6d4b\u8bd5\u7528\u4f8b\u4e2d\u5b8c\u6210\u4f9d\u8d56\u7684\u5904\u7406 \u5982\u679c\u5bf9\u4e8e\u4e0a\u8ff0\u7b2c\u4e09\u70b9\u611f\u89c9\u96be\u4ee5\u7406\u89e3\uff0c\u4e0d\u59a8\u770b\u4e0b\u4e0a\u56fe\u4e2d\u7684\u793a\u4f8b\uff1a testcase1 \u4f9d\u8d56\u4e8e testcase2\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u5728\u6d4b\u8bd5\u6b65\u9aa4\uff08teststep12\uff09\u4e2d\u5bf9 testcase2 \u8fdb\u884c\u5f15\u7528\uff0c\u7136\u540e testcase1 \u5c31\u662f\u5b8c\u6574\u4e14\u53ef\u72ec\u7acb\u8fd0\u884c\u7684\uff1b \u5728 testsuite \u4e2d\uff0ctestcase1 \u4e0e testcase2 \u76f8\u4e92\u72ec\u7acb\uff0c\u8fd0\u884c\u987a\u5e8f\u5c31\u4e0d\u518d\u6709\u5148\u540e\u4f9d\u8d56\u5173\u7cfb\u4e86\u3002","title":"\u6d4b\u8bd5\u7528\u4f8b\u5206\u5c42\u6a21\u578b"},{"location":"concepts/testcase-layer/#_3","text":"\u7406\u89e3\u4e86\u6d4b\u8bd5\u7528\u4f8b\u5206\u5c42\u6a21\u578b\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u518d\u6765\u770b\u4e0b\u5728\u5206\u5c42\u6a21\u578b\u4e0b\uff0c\u63a5\u53e3\u3001\u6d4b\u8bd5\u7528\u4f8b\u3001\u6d4b\u8bd5\u7528\u4f8b\u96c6\u7684\u63cf\u8ff0\u5f62\u5f0f\u3002","title":"\u5206\u5c42\u63cf\u8ff0\u8be6\u89e3"},{"location":"concepts/testcase-layer/#api","text":"\u6ce8\u610f\uff1a\u4e3a\u4e86\u7b80\u5355\uff0c\u5728HttpRunner v2.x\u4e2d\u7684API\u6982\u5ff5\u5df2\u7ecf\u88ab\u53d6\u6d88\u4e86\u3002\u4f60\u53ef\u4ee5\u5c06API\u5b9a\u4e49\u4e3a\u53ea\u6709\u4e00\u4e2a\u8bf7\u6c42\u6b65\u9aa4\u7684\u6d4b\u8bd5\u7528\u4f8b\u3002","title":"\u63a5\u53e3\u5b9a\u4e49(API)"},{"location":"concepts/testcase-layer/#testcase","text":"","title":"\u6d4b\u8bd5\u7528\u4f8b(testcase)"},{"location":"concepts/testcase-layer/#_4","text":"\u5728\u6d4b\u8bd5\u7528\u4f8b\u7684\u6d4b\u8bd5\u6b65\u9aa4\u4e2d\uff0c\u53ef\u4ee5\u5f15\u7528\u5176\u5b83\u6d4b\u8bd5\u7528\u4f8b\u3002\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\uff0c\u53ef\u4ee5\u5728\u907f\u514d\u91cd\u590d\u63cf\u8ff0\u7684\u540c\u65f6\uff0c\u89e3\u51b3\u6d4b\u8bd5\u7528\u4f8b\u7684\u4f9d\u8d56\u5173\u7cfb\uff0c\u4ece\u800c\u4fdd\u8bc1\u6bcf\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u90fd\u662f\u72ec\u7acb\u53ef\u8fd0\u884c\u7684\u3002 \u5728\u6d4b\u8bd5\u6b65\u9aa4\uff08teststep\uff09\u4e2d\uff0c\u53ef\u901a\u8fc7 testcase \u5b57\u6bb5\u5f15\u7528\u5176\u5b83\u6d4b\u8bd5\u7528\u4f8b\uff0c\u5f15\u7528\u65b9\u5f0f\u4e3a\u5bf9\u5e94\u6d4b\u8bd5\u7528\u4f8b\u6587\u4ef6\u7684\u8def\u5f84\uff0c\u7edd\u5bf9\u8def\u5f84\u6216\u76f8\u5bf9\u8def\u5f84\u5747\u53ef\u3002\u63a8\u8350\u4f7f\u7528\u76f8\u5bf9\u8def\u5f84\uff0c\u8def\u5f84\u57fa\u51c6\u4e3a\u9879\u76ee\u6839\u76ee\u5f55\uff0c\u5373 debugtalk.py \u6240\u5728\u7684\u76ee\u5f55\u8def\u5f84\u3002 \u4f8b\u5982\uff0c\u5047\u8bbe\u6709\u4e00\u4e2a\u7528\u4f8b\uff0c\u5b9e\u73b0\u4e86\u5bf9\u83b7\u53d6 token \u529f\u80fd\u7684\u6d4b\u8bd5\uff1b\u5728\u5f88\u591a\u5176\u5b83\u529f\u80fd\u4e2d\u90fd\u4f1a\u4f9d\u8d56\u4e8e\u83b7\u53d6 token \u7684\u529f\u80fd\uff0c\u5982\u679c\u5c06\u8be5\u529f\u80fd\u7684\u6d4b\u8bd5\u6b65\u9aa4\u811a\u672c\u62f7\u8d1d\u5230\u5176\u5b83\u529f\u80fd\u7684\u6d4b\u8bd5\u7528\u4f8b\u4e2d\uff0c\u90a3\u4e48\u5c31\u4f1a\u5b58\u5728\u5927\u91cf\u91cd\u590d\uff0c\u5f53\u9700\u8981\u5bf9\u8be5\u90e8\u5206\u8fdb\u884c\u4fee\u6539\u65f6\u5c31\u9700\u8981\u4fee\u6539\u6240\u6709\u5730\u65b9\uff0c\u663e\u7136\u4e0d\u4fbf\u4e8e\u7ef4\u62a4\u3002 \u6bd4\u8f83\u597d\u7684\u505a\u6cd5\u662f\uff0c\u5728\u5176\u5b83\u529f\u80fd\u7684\u6d4b\u8bd5\u7528\u4f8b\uff08\u5982\u521b\u5efa\u7528\u6237\uff09\u4e2d\uff0c\u5f15\u7528\u83b7\u53d6 token \u529f\u80fd\u7684\u6d4b\u8bd5\u7528\u4f8b\uff08testcases/setup.yml\uff09\u4f5c\u4e3a\u4e00\u4e2a\u6d4b\u8bd5\u6b65\u9aa4\uff0c\u4ece\u800c\u521b\u5efa\u7528\u6237\uff08\"create user and check result.\"\uff09\u8fd9\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u4e5f\u53d8\u5f97\u72ec\u7acb\u53ef\u8fd0\u884c\u4e86\u3002 config: name: \"request methods testcase: reference testcase\" id: create_user base_url: \"http://127.0.0.1:5000\" variables: uid: 9001 device_sn: \"TESTCASE_CREATE_XXX\" export: session_token teststeps: - name: create user and check result variables: foo1: testcase_ref_bar1 expect_foo1: testcase_ref_bar1 testcase: testcases/demo_testcase_request.yml export: - session_token - name: check_and_create variables: token: $session_token testcase: testcases/deps/check_and_create.yml","title":"\u5f15\u7528\u6d4b\u8bd5\u7528\u4f8b"},{"location":"concepts/testcase-layer/#testsuite","text":"\u5f53\u6d4b\u8bd5\u7528\u4f8b\u6570\u91cf\u6bd4\u8f83\u591a\u4ee5\u540e\uff0c\u4e3a\u4e86\u65b9\u4fbf\u7ba1\u7406\u548c\u5b9e\u73b0\u6279\u91cf\u8fd0\u884c\uff0c\u901a\u5e38\u9700\u8981\u4f7f\u7528\u6d4b\u8bd5\u7528\u4f8b\u96c6\u6765\u5bf9\u6d4b\u8bd5\u7528\u4f8b\u8fdb\u884c\u7ec4\u7ec7\u3002 \u5728\u524d\u6587\u7684\u6d4b\u8bd5\u7528\u4f8b\u5206\u5c42\u6a21\u578b\u4e2d\u4e5f\u5f3a\u8c03\u4e86\uff0c\u6d4b\u8bd5\u7528\u4f8b\u96c6\uff08testsuite\uff09\u662f\u6d4b\u8bd5\u7528\u4f8b\u7684 \u65e0\u5e8f \u96c6\u5408\uff0c\u96c6\u5408\u4e2d\u7684\u6d4b\u8bd5\u7528\u4f8b\u5e94\u8be5\u90fd\u662f\u76f8\u4e92\u72ec\u7acb\uff0c\u4e0d\u5b58\u5728\u5148\u540e\u4f9d\u8d56\u5173\u7cfb\u7684\uff1b\u5982\u679c\u786e\u5b9e\u5b58\u5728\u5148\u540e\u4f9d\u8d56\u5173\u7cfb\uff0c\u90a3\u5c31\u9700\u8981\u5728\u6d4b\u8bd5\u7528\u4f8b\u4e2d\u5b8c\u6210\u4f9d\u8d56\u7684\u5904\u7406\u3002 \u56e0\u4e3a\u662f\u65e0\u5e8f\u96c6\u5408\uff0c\u56e0\u6b64\u6d4b\u8bd5\u7528\u4f8b\u96c6\u7684\u63cf\u8ff0\u5f62\u5f0f\u4f1a\u4e0e\u6d4b\u8bd5\u7528\u4f8b\u6709\u4e9b\u4e0d\u540c\uff0c\u5728\u6bcf\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u96c6\u6587\u4ef6\u4e2d\uff0c\u7b2c\u4e00\u5c42\u7ea7\u5b58\u5728\u4e24\u7c7b\u5b57\u6bb5\uff1a config: \u6d4b\u8bd5\u7528\u4f8b\u96c6\u7684\u603b\u4f53\u914d\u7f6e\u53c2\u6570 testcases: \u503c\u4e3a\u65e0\u5e8f\u6570\u7ec4\uff0c\u5728\u5f15\u7528\u6d4b\u8bd5\u7528\u4f8b\u65f6\uff0c\u4e5f\u53ef\u4ee5\u6307\u5b9avariables\uff0c\u5b9e\u73b0\u5bf9\u5f15\u7528\u6d4b\u8bd5\u7528\u4f8b\u4e2dvariables\u7684\u8986\u76d6\u3002","title":"\u6d4b\u8bd5\u7528\u4f8b\u96c6(testsuite)"},{"location":"concepts/testcase-layer/#_5","text":"config: name: test suite demo variables: # testsuite config variables foo1: lalalla var_a: ${gen_random_string(5)} var_b: $var_a base_url: \"http://127.0.0.1:5000\" testcases: - name: test case 1 variables: # testcase variables uid: 1000 var_c: ${gen_random_string(5)} var_d: $var_c testcase: /path/to/testcase1 export: [\"varA\", \"varB\"] # export variables - name: test case 2 variables: # testcase variables uid: 1001 var_c: ${gen_random_string(5)} var_d: $var_c testcase: /path/to/testcase2","title":"\u975e\u53c2\u6570\u5316\u573a\u666f"},{"location":"concepts/testcase-layer/#parameters","text":"\u5bf9\u4e8e\u53c2\u6570\u5316\u573a\u666f\uff0c\u53ef\u901a\u8fc7parameters\u5b9e\u73b0\uff0c\u63cf\u8ff0\u5f62\u5f0f\u5982\u4e0b\u6240\u793a\u3002 config: name: test suite demo variables: # testsuite config variables foo1: lalalla base_url: \"http://127.0.0.1:5000\" testcases: - name: test case 1 variables: # testcase variables uid: 1000 var_c: ${gen_random_string(5)} parameters: uid: [101, 102, 103] var_c: [\"demo1\", \"demo2\", \"demo3\"] apkchannel: ${P(data/vip.csv)} testcase: /path/to/testcase1 \u53c2\u6570\u5316\u540e\uff0cparameters\u4e2d\u7684\u53d8\u91cf\u5c06\u91c7\u7528\u7b1b\u5361\u5c14\u79ef\u7ec4\u5408\u5f62\u6210\u53c2\u6570\u5217\u8868\uff0c\u4f9d\u6b21\u8986\u76d6variables\u4e2d\u7684\u53c2\u6570\uff0c\u9a71\u52a8\u6d4b\u8bd5\u7528\u4f8b\u7684\u8fd0\u884c\u3002","title":"\u53c2\u6570\u5316\u573a\u666f(parameters)"},{"location":"concepts/testcase_structure/","text":"\u6d4b\u8bd5\u7528\u4f8b\u7ec4\u7ec7 YAML & Python & JSON HttpRunner v3.x \u652f\u63013\u79cd\u7528\u4f8b\u683c\u5f0f\uff1a pytest \u3001 YAML \u548c JSON \u3002 pytest \u3001 YAML \u548c JSON \u683c\u5f0f\u7684\u6d4b\u8bd5\u7528\u4f8b\u5b8c\u5168\u7b49\u4ef7\uff0c\u5305\u542b\u7684\u4fe1\u606f\u5185\u5bb9\u4e5f\u5b8c\u5168\u76f8\u540c\u3002 \u5bf9\u4e8e\u6709python\u57fa\u7840\u7684\uff0c\u5efa\u8bae\u4ee5 pytest \u683c\u5f0f\u800c\u4e0d\u662f\u4ee5\u524d\u7684 YAML / JSON \u683c\u5f0f\u7f16\u5199\u548c\u7ef4\u62a4\u6d4b\u8bd5\u7528\u4f8b\u3002 \u5bf9\u4e8e\u65b0\u624b\u6765\u8bf4\uff0c\u63a8\u8350\u4f7f\u7528 JSON \u683c\u5f0f\uff0c\u867d\u7136\u63cf\u8ff0\u5f62\u5f0f\u4e0a\u7a0d\u663e\u7d2f\u8d58\uff0c\u4f46\u662f\u4e0d\u5bb9\u6613\u51fa\u9519\uff08\u5927\u591a\u7f16\u8f91\u5668\u90fd\u5177\u6709 JSON \u683c\u5f0f\u7684\u68c0\u6d4b\u529f\u80fd\uff09\uff1b\u540c\u65f6\uff0cHttpRunner \u4e5f\u5185\u7f6e\u4e86 JSON \u683c\u5f0f\u6b63\u786e\u6027\u68c0\u6d4b\u548c\u6837\u5f0f\u7f8e\u5316\u529f\u80fd\uff0c\u8be6\u60c5\u53ef\u67e5\u770b \u300aValidate & Prettify\u300b \u3002 \u5bf9\u4e8e\u719f\u6089 YAML \u683c\u5f0f\u7684\u4eba\u6765\u8bf4\uff0c\u7f16\u5199\u7ef4\u62a4 YAML \u683c\u5f0f\u7684\u6d4b\u8bd5\u7528\u4f8b\u4f1a\u66f4\u7b80\u6d01\uff0c\u4f46\u524d\u63d0\u662f\u8981\u4fdd\u8bc1 YAML \u683c\u5f0f\u6ca1\u6709\u8bed\u6cd5\u9519\u8bef\u3002 \u5173\u4e8e\u4e3a\u4ec0\u4e48\u4eceHttpRunner v3.x\u5f00\u59cb\uff0c\u4f5c\u8005\u6bd4\u8f83\u5efa\u8baepython\u811a\u672c\u7f16\u5199\u7528\u4f8b\u3002 \u4e3b\u8981\u662f\u7f16\u5199Python\u53ef\u4ee5\u590d\u7528IDE\u7684\u80fd\u529b\uff0c\u5305\u62ec\u8bed\u6cd5\u63d0\u793a\u3001\u81ea\u52a8\u8865\u5168\uff0c\u8fd9\u4e9b\u90fd\u4f1a\u662fYaml/Json\u6bd4\u8f83\u6b20\u7f3a\u7684\u3002 \u811a\u672c\u683c\u5f0f\u8f6c\u6362\u5173\u7cfb\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u5bf9\u4e8e\u4e09\u79cd\u683c\u5f0f\u7684\u5c55\u793a\u5dee\u5f02\uff0c\u53ef\u4ee5\u5bf9\u6bd4\u67e5\u770b demo_testcase.json / demo_testcase.yml / demo_testcase_test.py \u83b7\u53d6\u521d\u6b65\u7684\u5370\u8c61\u3002 \u540e\u9762\u4e3a\u4e86\u66f4\u6e05\u6670\u7684\u63cf\u8ff0\uff0c\u7edf\u4e00\u91c7\u7528 YAML \u683c\u5f0f\u4f5c\u4e3a\u793a\u4f8b\u3002 \u6d4b\u8bd5\u7528\u4f8b\u7ed3\u6784 \u5728httprunner\u4e2d\uff0c\u6d4b\u8bd5\u7528\u4f8b\u7ec4\u7ec7\u4e3b\u8981\u57fa\u4e8e\u4e09\u4e2a\u6982\u5ff5\uff1a * \u6d4b\u8bd5\u7528\u4f8b\u96c6(testsuite): \u5bf9\u5e94\u4e00\u4e2aYAML/JSON/Python\u6587\u4ef6\uff0c\u5305\u542b\u5355\u4e2a\u6216\u591a\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u6587\u4ef6\u3002 * \u6d4b\u8bd5\u7528\u4f8b(testcase): \u5bf9\u5e94\u4e00\u4e2aYAML/JSON/Python\u6587\u4ef6\uff0c\u5305\u542b\u5355\u4e2a\u6216\u591a\u4e2a\u6d4b\u8bd5\u6b65\u9aa4\u3002 * \u6d4b\u8bd5\u6b65\u9aa4(teststep): \u5bf9\u5e94YAML/JSON/Python\u4e2d teststeps\u4e0b\u7684\u4e00\u4e2a\u8282\u70b9\uff0c\u63cf\u8ff0\u5355\u6b21\u63a5\u53e3\u6d4b\u8bd5\u7684\u5168\u90e8\u5185\u5bb9\uff0c\u5305\u62ec\u53d1\u8d77\u63a5\u53e3\u8bf7\u6c42\u3001\u89e3\u6790\u54cd\u5e94\u7ed3\u679c\u3001\u68c0\u9a8c\u7ed3\u679c\u7b49\u3002 \u5bf9\u4e8e\u5355\u4e2aYAML\u6587\u4ef6\u6765\u8bf4\uff0c\u6570\u636e\u5b58\u50a8\u7ed3\u6784\u4e3a list of dict \u7684\u5f62\u5f0f\uff0c\u5176\u4e2d\u53ef\u80fd\u5305\u542b\u4e00\u4e2a\u5168\u5c40\u914d\u7f6e\u9879(config)\u548c\u82e5\u5e72\u4e2a\u6d4b\u8bd5\u6b65\u9aa4\u3002 \u5177\u4f53\u5730\uff1a * config: \u4f5c\u4e3a\u6574\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u7684\u5168\u5c40\u914d\u7f6e\u9879 * \u6d4b\u8bd5\u6b65\u9aa4\uff1a\u5bf9\u5e94\u5355\u4e2a\u6d4b\u8bd5\u6b65\u9aa4(teststep)\uff0c\u6d4b\u8bd5\u7528\u4f8b\u5b58\u5728\u987a\u5e8f\u5173\u7cfb\uff0c\u8fd0\u884c\u65f6\u5c06\u4ece\u524d\u5f80\u540e\u4f9d\u6b21\u8fd0\u884c\u5404\u4e2a\u6d4b\u8bd5\u6b65\u9aa4\u3002 testcase\u5bf9\u5e94\u7684YAML\u683c\u5f0f\u5982\u4e0b\u6240\u793a\uff1a config: ... teststeps: - # step 1 ... - # step 2 ... \u53d8\u91cf\u7a7a\u95f4(context)\u4f5c\u7528\u57df \u5728\u6d4b\u8bd5\u7528\u4f8b\u5185\u90e8\uff0cHttpRunner\u5212\u5206\u4e86\u4e24\u5c42\u7a7a\u95f4\u4f5c\u7528\u57df(context). * config: \u4f5c\u4e3a\u6574\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u7684\u5168\u5c40\u914d\u7f6e\u9879\uff0c\u4f5c\u7528\u57df\u4e3a\u6574\u4e2a\u6d4b\u8bd5\u7528\u4f8b\uff0c\u5305\u542bbase_url, verify, variables, export\u3002 * teststeps: \u6d4b\u8bd5\u6b65\u9aa4\u7684\u5217\u8868\uff0c\u6bcf\u4e2a\u6b65\u9aa4\u90fd\u5bf9\u5e94\u4e00\u4e2aAPI\u8bf7\u6c42\u6216\u53e6\u4e00\u4e2a\u7528\u4f8b\u7684\u5f15\u7528\uff0c\u53e6\u5916variables/extract/validate/hooks\u652f\u6301\u521b\u5efa\u53ca\u5176\u590d\u6742\u7684\u6d4b\u8bd5\u7528\u4f8b\u3002 * \u6d4b\u8bd5\u6b65\u9aa4\u7684\u53d8\u91cf\u7a7a\u95f4\u4f1a\u7ee7\u627f\u6216\u8986\u76d6config\u4e2d\u5b9a\u4e49\u7684\u5185\u5bb9 * \u82e5\u67d0\u53d8\u91cf\u5728 config \u4e2d\u5b9a\u4e49\u4e86\uff0c\u5728\u67d0 test \u4e2d\u6ca1\u6709\u5b9a\u4e49\uff0c\u5219\u8be5 test \u4f1a\u7ee7\u627f\u8be5\u53d8\u91cf * \u82e5\u67d0\u53d8\u91cf\u5728 config \u548c\u67d0 test \u4e2d\u90fd\u5b9a\u4e49\u4e86\uff0c\u5219\u8be5 test \u4e2d\u4f7f\u7528\u81ea\u5df1\u5b9a\u4e49\u7684\u53d8\u91cf\u503c * \u5404\u4e2a\u6d4b\u8bd5\u6b65\u9aa4\u7684\u53d8\u91cf\u7a7a\u95f4\u76f8\u4e92\u72ec\u7acb\uff0c\u4e92\u4e0d\u5f71\u54cd\uff1b * \u5982\u9700\u5728\u591a\u4e2a\u6d4b\u8bd5\u6b65\u9aa4\u4e2d\u4f20\u9012\u53c2\u6570\u503c\uff0c\u5219\u9700\u8981\u4f7f\u7528 extract \u5173\u952e\u5b57\uff0c\u5e76\u4e14\u53ea\u80fd\u4ece\u524d\u5f80\u540e\u4f20\u9012 config \u6bcf\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u90fd\u5fc5\u987b\u6709config\u90e8\u5206\uff0c\u53ef\u4ee5\u914d\u7f6e\u7528\u4f8b\u3002 config: name: xxx variables: # \u914d\u7f6e\u53d8\u91cf(config variables) varA: \"configA\" varB: \"configB\" varC: \"configC\" parameters: # \u53c2\u6570\u53d8\u91cf(parameter variables) varA: [\"paramA1\"] varB: [\"paramB1\"] base_url: \"https://postman-echo.com\" verify: False export: [\"foo3\"] teststeps: - name: step 1 ... - name: step 2 ... name(\u5fc5\u987b) \u6d4b\u8bd5\u7528\u4f8b\u7684\u540d\u79f0\uff0c\u5c06\u5728log\u548c\u62a5\u544a\u4e2d\u5c55\u793a\u3002 base_url(\u53ef\u9009) \u6d4b\u8bd5\u7528\u4f8b\u4e2d\u7684\u901a\u7528Host\uff0c\u4f8b\u5982https://postman-echo.com\u3002\u5982\u679cbase_url\u88ab\u6307\u5b9a\uff0c\u6d4b\u8bd5\u6b65\u9aa4\u4e2d\u7684url\u53ea\u80fd\u5199\u76f8\u5bf9\u8def\u5f84\u3002\u5f53\u4f60\u8981\u5728\u4e0d\u540c\u73af\u5883\u4e0b\u6d4b\u8bd5\u65f6\uff0c\u8fd9\u4e2a\u914d\u7f6e\u975e\u5e38\u6709\u7528\u3002 variables(\u53ef\u9009\u7684) \u5b9a\u4e49\u7684\u5168\u5c40\u53d8\u91cf\uff0c\u4f5c\u7528\u57df\u4e3a\u6574\u4e2a\u7528\u4f8b\u3002\u6bcf\u4e2a\u6d4b\u8bd5\u6b65\u9aa4\u90fd\u53ef\u4ee5\u5f15\u7528config variables\u3002\u4e5f\u5c31\u662f\u8bf4\uff0cstep variables \u4f18\u5148\u7ea7\u9ad8\u4e8e config variables. parameters(\u53ef\u9009\u7684) \u5168\u5c40\u53c2\u6570\uff0c\u7528\u4e8e\u5b9e\u73b0\u6570\u636e\u5316\u9a71\u52a8\uff0c\u4f5c\u7528\u57df\u4e3a\u6574\u4e2a\u7528\u4f8b\u3002 verify(\u53ef\u9009\u7684) \u6307\u5b9a\u662f\u5426\u9a8c\u8bc1\u670d\u52a1\u5668\u7684TLS\u8bc1\u4e66\u3002\u5982\u679c\u6211\u4eec\u60f3\u8bb0\u5f55\u6d4b\u8bd5\u7528\u4f8b\u6267\u884c\u7684HTTP\u6d41\u91cf\uff0c\u8fd9\u5c06\u7279\u522b\u6709\u7528\uff0c\u56e0\u4e3a\u5982\u679c\u6ca1\u6709\u8bbe\u7f6everify\u6216\u5c06\u5176\u8bbe\u7f6e\u4e3aTrue\uff0c\u5219\u4f1a\u53d1\u751fSSLError\u3002 export(\u53ef\u9009\u7684) \u6307\u5b9a\u8f93\u51fa\u7684\u6d4b\u8bd5\u7528\u4f8b\u53d8\u91cf\u3002\u5c06\u6bcf\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u770b\u4f5c\u4e00\u4e2a\u9ed1\u76d2\uff0cconfig variables\u662f\u8f93\u5165\u53d8\u91cf\uff0cconfig export\u662f\u8f93\u51fa\u53d8\u91cf\u3002\u5f53\u4e00\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u5728\u53e6\u4e00\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u7684\u6b65\u9aa4\u4e2d\u88ab\u5f15\u7528\u65f6\uff0cconfig export\u5c06\u88ab\u63d0\u53d6\u5e76\u5728\u968f\u540e\u7684\u6d4b\u8bd5\u6b65\u9aa4\u4e2d\u4f7f\u7528\u3002 teststeps \u6bcf\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u90fd\u67091\u4e2a\u6216\u591a\u4e2a\u6d4b\u8bd5\u6b65\u9aa4\uff08List[step]\uff09\uff0c\u6bcf\u4e2a\u6d4b\u8bd5\u6b65\u9aa4\u5bf9\u5e94\u4e00\u4e2aAPI\u8bf7\u6c42\u6216\u5176\u4ed6\u7528\u4f8b\u7684\u5f15\u7528\u3002 \u6ce8\u610f\uff1a\u4e3a\u4e86\u7b80\u5355\uff0c\u5728HttpRunner v2.x\u4e2d\u7684API\u6982\u5ff5\u5df2\u7ecf\u88ab\u53d6\u6d88\u4e86\u3002\u4f60\u53ef\u4ee5\u5c06API\u5b9a\u4e49\u4e3a\u53ea\u6709\u4e00\u4e2a\u8bf7\u6c42\u6b65\u9aa4\u7684\u6d4b\u8bd5\u7528\u4f8b\u3002 teststeps: - name: get with params variables: foo1: bar11 foo2: bar21 sum_v: \"${sum_two(1, 2)}\" request: method: GET url: /get params: foo1: $foo1 foo2: $foo2 sum_v: $sum_v headers: User-Agent: HttpRunner/${get_httprunner_version()} extract: foo3: \"body.args.foo2\" validate: - eq: [\"status_code\", 200] - eq: [\"body.args.foo1\", \"bar11\"] - eq: [\"body.args.sum_v\", \"3\"] - eq: [\"body.args.foo2\", \"bar21\"] - name: post form data variables: foo2: bar23 request: method: POST url: /post headers: User-Agent: HttpRunner/${get_httprunner_version()} Content-Type: \"application/x-www-form-urlencoded\" data: \"foo1=$foo1&foo2=$foo2&foo3=$foo3\" validate: - equal: [\"status_code\", 200, \"\u5931\u8d25\u539f\u56e0\"] - equal: [\"body.form.foo1\", \"$expect_foo1\"] - equal: [\"body.form.foo2\", \"bar23\"] - equal: [\"body.form.foo3\", \"bar21\"] name(\u5fc5\u987b) name\u7528\u6765\u5b9a\u4e49\u6d4b\u8bd5\u6b65\u9aa4 name\uff0c\u5c06\u51fa\u73b0\u5728log\u548c\u6d4b\u8bd5\u62a5\u544a\u4e2d\u3002 variables(\u53ef\u9009\u7684) \u6d4b\u8bd5\u6b65\u9aa4\u4e2d\u5b9a\u4e49\u7684\u53d8\u91cf\uff0c\u4f5c\u7528\u57df\u4e3a\u5f53\u524d\u6d4b\u8bd5\u6b65\u9aa4\u3002 \u5982\u679c\u60f3\u5728\u591a\u4e2a\u6d4b\u8bd5\u6b65\u9aa4\u4e2d\u5171\u4eab\u53d8\u91cf\uff0c\u9700\u8981\u5728config variables\u4e2d\u5b9a\u4e49\u3002 \u6d4b\u8bd5\u6b65\u9aa4\u4e2d\u7684\u53d8\u91cf\uff0c\u4f1a\u8986\u76d6config variables\u4e2d\u7684\u540c\u540d\u53d8\u91cf\u3002 request(\u5fc5\u987b) method(\u5fc5\u987b) \u8bbe\u7f6ehttp\u65b9\u6cd5\uff0c\u652f\u6301 RestFul\u4e2d\u7684\u6240\u6709http\u65b9\u6cd5\uff08GET/POST/PUT/PATCH/DELETE/\uff09 \uff0c\u76f8\u5f53\u4e8e requests.request \u4e2d\u7684method\u3002 url(\u5fc5\u987b) \u8bbe\u7f6eUrl,\u5982\u679cbase_url\u5728config\u4e2d\u8bbe\u7f6e\u4e86\uff0curl\u53ea\u80fd\u662f\u76f8\u5bf9\u8def\u5f84\u90e8\u5206\u3002\u76f8\u5f53\u4e8e requests.request \u4e2d\u7684url\u3002 params(\u53ef\u9009) \u8bbe\u7f6eUrl\u7684query\uff0c\u76f8\u5f53\u4e8e requests.request \u4e2d\u7684params\u3002 headers(\u53ef\u9009) \u8bbe\u7f6e\u8bf7\u6c42\u7684headers\uff0c\u76f8\u5f53\u4e8e requests.request \u4e2d\u7684headers\u3002 cookies(\u53ef\u9009) \u8bbe\u7f6eHttp\u8bf7\u6c42\u7684cookies\uff0c\u76f8\u5f53\u4e8e requests.request \u4e2d\u7684cookies\u3002 data(\u53ef\u9009) \u8bbe\u7f6ehttp\u8bf7\u6c42\u7684Body\uff0c\u76f8\u5f53\u4e8e requests.request \u4e2d\u7684data\u3002 json(\u53ef\u9009) \u8bbe\u7f6ehttp\u8bf7\u6c42json\u683c\u5f0f\u7684body\uff0c\u76f8\u5f53\u4e8e requests.request \u4e2d\u7684json\u3002 extract(\u53ef\u9009) \u4ece\u5f53\u524d HTTP \u8bf7\u6c42\u7684\u54cd\u5e94\u7ed3\u679c\u4e2d\u63d0\u53d6\u53c2\u6570\uff0c\u5e76\u4fdd\u5b58\u5230\u53c2\u6570\u53d8\u91cf\u4e2d\uff08\u4f8b\u5982token\uff09\uff0c\u540e\u7eed\u6d4b\u8bd5\u7528\u4f8b\u53ef\u901a\u8fc7$token\u7684\u5f62\u5f0f\u8fdb\u884c\u5f15\u7528\u3002 \u539f\u7406\uff1a\u5229\u7528 jmespath \u63d0\u53d6Json response body\u7684\u5185\u5bb9\u3002 validate(\u53ef\u9009) \u6d4b\u8bd5\u7528\u4f8b\u4e2d\u5b9a\u4e49\u7684\u7ed3\u679c\u6821\u9a8c\u9879\uff0c\u4f5c\u7528\u57df\u4e3a\u5f53\u524d\u6d4b\u8bd5\u7528\u4f8b\uff0c\u7528\u4e8e\u5b9e\u73b0\u5bf9\u5f53\u524d\u6d4b\u8bd5\u7528\u4f8b\u8fd0\u884c\u7ed3\u679c\u7684\u6821\u9a8c\u3002 \u539f\u7406\uff1a\u7528 jmespath \u63d0\u53d6Json response\u7684\u5185\u5bb9\uff0c\u5e76\u8fdb\u884c\u65ad\u8a00\u6821\u9a8c\u3002 \u683c\u5f0f\uff1a - \u8fd0\u7b97\u7b26: [jmespath\u8868\u8fbe\u5f0f, expected_value, message] \u8fd0\u7b97\u7b26\u5305\u62ec: equal: \u7b49\u4e8e contained_by: \u5b9e\u9645\u7ed3\u679c\u662f\u5426\u88ab\u5305\u542b\u5728\u9884\u671f\u7ed3\u679c\u4e2d contains: \u9884\u671f\u7ed3\u679c\u662f\u5426\u88ab\u5305\u542b\u5728\u5b9e\u9645\u7ed3\u679c\u4e2d endswith: \u4ee5...\u7ed3\u5c3e greater_or_equals: \u5927\u4e8e\u7b49\u4e8e greater_than: \u5927\u4e8e length_equal: \u957f\u5ea6\u7b49\u4e8e length_greater_or_equals: \u957f\u5ea6\u5927\u4e8e\u7b49\u4e8e length_greater_than: \u957f\u5ea6\u5927\u4e8e length_less_or_equals: \u957f\u5ea6\u5c0f\u4e8e\u7b49\u4e8e length_less_than: \u957f\u5ea6\u5c0f\u4e8e less_or_equals: \u5c0f\u4e8e\u7b49\u4e8e less_than: \u5c0f\u4e8e not_equal: \u4e0d\u7b49\u4e8e regex_match: \u5b57\u7b26\u4e32\u662f\u5426\u7b26\u5408\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d\u89c4\u5219 startswith: \u4ee5...\u5f00\u5934 string_equals: \u5b57\u7b26\u4e32\u76f8\u7b49 type_match: \u7c7b\u578b\u662f\u5426\u5339\u914d jmespath: jmespath\u8868\u8fbe\u5f0f\uff0c\u8be6\u89c1 JMESPath Tutorial expected_value: \u6307\u5b9a\u671f\u671b\u503c\u6216\u53d8\u91cf\uff0c\u4e5f\u53ef\u4ee5\u8c03\u7528\u65b9\u6cd5 message(optional): \u7528\u4e8e\u63cf\u8ff0\u65ad\u8a00\u5931\u8d25\u539f\u56e0 hooks(\u53ef\u9009) setup_hooks\u51fd\u6570\u653e\u7f6e\u4e8edebugtalk.py\u4e2d\uff0c\u5e76\u4e14\u5fc5\u987b\u5305\u542b\u4e09\u4e2a\u53c2\u6570\uff1a method: \u8bf7\u6c42\u65b9\u6cd5\uff0c\u6bd4\u5982\uff1aGET,POST,PUT url: \u8bf7\u6c42URL kwargs: request\u7684\u53c2\u6570\u5b57\u5178 teardown_hooks\u51fd\u6570\u653e\u7f6e\u4e8edebugtalk.py\u4e2d\uff0c\u5e76\u4e14\u5fc5\u987b\u5305\u542b\u4e00\u4e2a\u53c2\u6570: resp_obj: requests.Response\u5b9e\u4f8b \u5173\u4e8e setup_hooks \u548c teardown_hooks \u7684\u66f4\u591a\u5185\u5bb9\uff0c\u8bf7\u53c2\u8003 \u300ahook \u673a\u5236\u300b \u3002 \u6d4b\u8bd5\u6b65\u9aa4\u4e2d\u5f15\u7528\u6d4b\u8bd5\u7528\u4f8b \u793a\u4f8b\uff1a teststeps: - name: request with functions variables: foo1: testcase_ref_bar1 expect_foo1: testcase_ref_bar1 testcase: testcases/demo_testcase_request.yml export: - foo3 variables \u8ddfrequest\u4e2d\u7684variables\u4e00\u6837 testcase \u6307\u5b9a\u5f15\u7528\u7684\u6d4b\u8bd5\u7528\u4f8b export \u4ece\u5f15\u7528\u7684\u6d4b\u8bd5\u7528\u4f8b\u4e2d\u63d0\u53d6\u7684\u53d8\u91cf\uff0c\u8be5\u53d8\u91cf\u5728\u540e\u9762\u7684test steps\u4e2d\u53ef\u4ee5\u5f15\u7528","title":"\u6d4b\u8bd5\u7528\u4f8b\u7ed3\u6784"},{"location":"concepts/testcase_structure/#_1","text":"","title":"\u6d4b\u8bd5\u7528\u4f8b\u7ec4\u7ec7"},{"location":"concepts/testcase_structure/#yaml-python-json","text":"HttpRunner v3.x \u652f\u63013\u79cd\u7528\u4f8b\u683c\u5f0f\uff1a pytest \u3001 YAML \u548c JSON \u3002 pytest \u3001 YAML \u548c JSON \u683c\u5f0f\u7684\u6d4b\u8bd5\u7528\u4f8b\u5b8c\u5168\u7b49\u4ef7\uff0c\u5305\u542b\u7684\u4fe1\u606f\u5185\u5bb9\u4e5f\u5b8c\u5168\u76f8\u540c\u3002 \u5bf9\u4e8e\u6709python\u57fa\u7840\u7684\uff0c\u5efa\u8bae\u4ee5 pytest \u683c\u5f0f\u800c\u4e0d\u662f\u4ee5\u524d\u7684 YAML / JSON \u683c\u5f0f\u7f16\u5199\u548c\u7ef4\u62a4\u6d4b\u8bd5\u7528\u4f8b\u3002 \u5bf9\u4e8e\u65b0\u624b\u6765\u8bf4\uff0c\u63a8\u8350\u4f7f\u7528 JSON \u683c\u5f0f\uff0c\u867d\u7136\u63cf\u8ff0\u5f62\u5f0f\u4e0a\u7a0d\u663e\u7d2f\u8d58\uff0c\u4f46\u662f\u4e0d\u5bb9\u6613\u51fa\u9519\uff08\u5927\u591a\u7f16\u8f91\u5668\u90fd\u5177\u6709 JSON \u683c\u5f0f\u7684\u68c0\u6d4b\u529f\u80fd\uff09\uff1b\u540c\u65f6\uff0cHttpRunner \u4e5f\u5185\u7f6e\u4e86 JSON \u683c\u5f0f\u6b63\u786e\u6027\u68c0\u6d4b\u548c\u6837\u5f0f\u7f8e\u5316\u529f\u80fd\uff0c\u8be6\u60c5\u53ef\u67e5\u770b \u300aValidate & Prettify\u300b \u3002 \u5bf9\u4e8e\u719f\u6089 YAML \u683c\u5f0f\u7684\u4eba\u6765\u8bf4\uff0c\u7f16\u5199\u7ef4\u62a4 YAML \u683c\u5f0f\u7684\u6d4b\u8bd5\u7528\u4f8b\u4f1a\u66f4\u7b80\u6d01\uff0c\u4f46\u524d\u63d0\u662f\u8981\u4fdd\u8bc1 YAML \u683c\u5f0f\u6ca1\u6709\u8bed\u6cd5\u9519\u8bef\u3002 \u5173\u4e8e\u4e3a\u4ec0\u4e48\u4eceHttpRunner v3.x\u5f00\u59cb\uff0c\u4f5c\u8005\u6bd4\u8f83\u5efa\u8baepython\u811a\u672c\u7f16\u5199\u7528\u4f8b\u3002 \u4e3b\u8981\u662f\u7f16\u5199Python\u53ef\u4ee5\u590d\u7528IDE\u7684\u80fd\u529b\uff0c\u5305\u62ec\u8bed\u6cd5\u63d0\u793a\u3001\u81ea\u52a8\u8865\u5168\uff0c\u8fd9\u4e9b\u90fd\u4f1a\u662fYaml/Json\u6bd4\u8f83\u6b20\u7f3a\u7684\u3002 \u811a\u672c\u683c\u5f0f\u8f6c\u6362\u5173\u7cfb\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u5bf9\u4e8e\u4e09\u79cd\u683c\u5f0f\u7684\u5c55\u793a\u5dee\u5f02\uff0c\u53ef\u4ee5\u5bf9\u6bd4\u67e5\u770b demo_testcase.json / demo_testcase.yml / demo_testcase_test.py \u83b7\u53d6\u521d\u6b65\u7684\u5370\u8c61\u3002 \u540e\u9762\u4e3a\u4e86\u66f4\u6e05\u6670\u7684\u63cf\u8ff0\uff0c\u7edf\u4e00\u91c7\u7528 YAML \u683c\u5f0f\u4f5c\u4e3a\u793a\u4f8b\u3002","title":"YAML &amp; Python &amp; JSON"},{"location":"concepts/testcase_structure/#_2","text":"\u5728httprunner\u4e2d\uff0c\u6d4b\u8bd5\u7528\u4f8b\u7ec4\u7ec7\u4e3b\u8981\u57fa\u4e8e\u4e09\u4e2a\u6982\u5ff5\uff1a * \u6d4b\u8bd5\u7528\u4f8b\u96c6(testsuite): \u5bf9\u5e94\u4e00\u4e2aYAML/JSON/Python\u6587\u4ef6\uff0c\u5305\u542b\u5355\u4e2a\u6216\u591a\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u6587\u4ef6\u3002 * \u6d4b\u8bd5\u7528\u4f8b(testcase): \u5bf9\u5e94\u4e00\u4e2aYAML/JSON/Python\u6587\u4ef6\uff0c\u5305\u542b\u5355\u4e2a\u6216\u591a\u4e2a\u6d4b\u8bd5\u6b65\u9aa4\u3002 * \u6d4b\u8bd5\u6b65\u9aa4(teststep): \u5bf9\u5e94YAML/JSON/Python\u4e2d teststeps\u4e0b\u7684\u4e00\u4e2a\u8282\u70b9\uff0c\u63cf\u8ff0\u5355\u6b21\u63a5\u53e3\u6d4b\u8bd5\u7684\u5168\u90e8\u5185\u5bb9\uff0c\u5305\u62ec\u53d1\u8d77\u63a5\u53e3\u8bf7\u6c42\u3001\u89e3\u6790\u54cd\u5e94\u7ed3\u679c\u3001\u68c0\u9a8c\u7ed3\u679c\u7b49\u3002 \u5bf9\u4e8e\u5355\u4e2aYAML\u6587\u4ef6\u6765\u8bf4\uff0c\u6570\u636e\u5b58\u50a8\u7ed3\u6784\u4e3a list of dict \u7684\u5f62\u5f0f\uff0c\u5176\u4e2d\u53ef\u80fd\u5305\u542b\u4e00\u4e2a\u5168\u5c40\u914d\u7f6e\u9879(config)\u548c\u82e5\u5e72\u4e2a\u6d4b\u8bd5\u6b65\u9aa4\u3002 \u5177\u4f53\u5730\uff1a * config: \u4f5c\u4e3a\u6574\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u7684\u5168\u5c40\u914d\u7f6e\u9879 * \u6d4b\u8bd5\u6b65\u9aa4\uff1a\u5bf9\u5e94\u5355\u4e2a\u6d4b\u8bd5\u6b65\u9aa4(teststep)\uff0c\u6d4b\u8bd5\u7528\u4f8b\u5b58\u5728\u987a\u5e8f\u5173\u7cfb\uff0c\u8fd0\u884c\u65f6\u5c06\u4ece\u524d\u5f80\u540e\u4f9d\u6b21\u8fd0\u884c\u5404\u4e2a\u6d4b\u8bd5\u6b65\u9aa4\u3002 testcase\u5bf9\u5e94\u7684YAML\u683c\u5f0f\u5982\u4e0b\u6240\u793a\uff1a config: ... teststeps: - # step 1 ... - # step 2 ...","title":"\u6d4b\u8bd5\u7528\u4f8b\u7ed3\u6784"},{"location":"concepts/testcase_structure/#context","text":"\u5728\u6d4b\u8bd5\u7528\u4f8b\u5185\u90e8\uff0cHttpRunner\u5212\u5206\u4e86\u4e24\u5c42\u7a7a\u95f4\u4f5c\u7528\u57df(context). * config: \u4f5c\u4e3a\u6574\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u7684\u5168\u5c40\u914d\u7f6e\u9879\uff0c\u4f5c\u7528\u57df\u4e3a\u6574\u4e2a\u6d4b\u8bd5\u7528\u4f8b\uff0c\u5305\u542bbase_url, verify, variables, export\u3002 * teststeps: \u6d4b\u8bd5\u6b65\u9aa4\u7684\u5217\u8868\uff0c\u6bcf\u4e2a\u6b65\u9aa4\u90fd\u5bf9\u5e94\u4e00\u4e2aAPI\u8bf7\u6c42\u6216\u53e6\u4e00\u4e2a\u7528\u4f8b\u7684\u5f15\u7528\uff0c\u53e6\u5916variables/extract/validate/hooks\u652f\u6301\u521b\u5efa\u53ca\u5176\u590d\u6742\u7684\u6d4b\u8bd5\u7528\u4f8b\u3002 * \u6d4b\u8bd5\u6b65\u9aa4\u7684\u53d8\u91cf\u7a7a\u95f4\u4f1a\u7ee7\u627f\u6216\u8986\u76d6config\u4e2d\u5b9a\u4e49\u7684\u5185\u5bb9 * \u82e5\u67d0\u53d8\u91cf\u5728 config \u4e2d\u5b9a\u4e49\u4e86\uff0c\u5728\u67d0 test \u4e2d\u6ca1\u6709\u5b9a\u4e49\uff0c\u5219\u8be5 test \u4f1a\u7ee7\u627f\u8be5\u53d8\u91cf * \u82e5\u67d0\u53d8\u91cf\u5728 config \u548c\u67d0 test \u4e2d\u90fd\u5b9a\u4e49\u4e86\uff0c\u5219\u8be5 test \u4e2d\u4f7f\u7528\u81ea\u5df1\u5b9a\u4e49\u7684\u53d8\u91cf\u503c * \u5404\u4e2a\u6d4b\u8bd5\u6b65\u9aa4\u7684\u53d8\u91cf\u7a7a\u95f4\u76f8\u4e92\u72ec\u7acb\uff0c\u4e92\u4e0d\u5f71\u54cd\uff1b * \u5982\u9700\u5728\u591a\u4e2a\u6d4b\u8bd5\u6b65\u9aa4\u4e2d\u4f20\u9012\u53c2\u6570\u503c\uff0c\u5219\u9700\u8981\u4f7f\u7528 extract \u5173\u952e\u5b57\uff0c\u5e76\u4e14\u53ea\u80fd\u4ece\u524d\u5f80\u540e\u4f20\u9012","title":"\u53d8\u91cf\u7a7a\u95f4(context)\u4f5c\u7528\u57df"},{"location":"concepts/testcase_structure/#config","text":"\u6bcf\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u90fd\u5fc5\u987b\u6709config\u90e8\u5206\uff0c\u53ef\u4ee5\u914d\u7f6e\u7528\u4f8b\u3002 config: name: xxx variables: # \u914d\u7f6e\u53d8\u91cf(config variables) varA: \"configA\" varB: \"configB\" varC: \"configC\" parameters: # \u53c2\u6570\u53d8\u91cf(parameter variables) varA: [\"paramA1\"] varB: [\"paramB1\"] base_url: \"https://postman-echo.com\" verify: False export: [\"foo3\"] teststeps: - name: step 1 ... - name: step 2 ...","title":"config"},{"location":"concepts/testcase_structure/#name","text":"\u6d4b\u8bd5\u7528\u4f8b\u7684\u540d\u79f0\uff0c\u5c06\u5728log\u548c\u62a5\u544a\u4e2d\u5c55\u793a\u3002","title":"name(\u5fc5\u987b)"},{"location":"concepts/testcase_structure/#base_url","text":"\u6d4b\u8bd5\u7528\u4f8b\u4e2d\u7684\u901a\u7528Host\uff0c\u4f8b\u5982https://postman-echo.com\u3002\u5982\u679cbase_url\u88ab\u6307\u5b9a\uff0c\u6d4b\u8bd5\u6b65\u9aa4\u4e2d\u7684url\u53ea\u80fd\u5199\u76f8\u5bf9\u8def\u5f84\u3002\u5f53\u4f60\u8981\u5728\u4e0d\u540c\u73af\u5883\u4e0b\u6d4b\u8bd5\u65f6\uff0c\u8fd9\u4e2a\u914d\u7f6e\u975e\u5e38\u6709\u7528\u3002","title":"base_url(\u53ef\u9009)"},{"location":"concepts/testcase_structure/#variables","text":"\u5b9a\u4e49\u7684\u5168\u5c40\u53d8\u91cf\uff0c\u4f5c\u7528\u57df\u4e3a\u6574\u4e2a\u7528\u4f8b\u3002\u6bcf\u4e2a\u6d4b\u8bd5\u6b65\u9aa4\u90fd\u53ef\u4ee5\u5f15\u7528config variables\u3002\u4e5f\u5c31\u662f\u8bf4\uff0cstep variables \u4f18\u5148\u7ea7\u9ad8\u4e8e config variables.","title":"variables(\u53ef\u9009\u7684)"},{"location":"concepts/testcase_structure/#parameters","text":"\u5168\u5c40\u53c2\u6570\uff0c\u7528\u4e8e\u5b9e\u73b0\u6570\u636e\u5316\u9a71\u52a8\uff0c\u4f5c\u7528\u57df\u4e3a\u6574\u4e2a\u7528\u4f8b\u3002","title":"parameters(\u53ef\u9009\u7684)"},{"location":"concepts/testcase_structure/#verify","text":"\u6307\u5b9a\u662f\u5426\u9a8c\u8bc1\u670d\u52a1\u5668\u7684TLS\u8bc1\u4e66\u3002\u5982\u679c\u6211\u4eec\u60f3\u8bb0\u5f55\u6d4b\u8bd5\u7528\u4f8b\u6267\u884c\u7684HTTP\u6d41\u91cf\uff0c\u8fd9\u5c06\u7279\u522b\u6709\u7528\uff0c\u56e0\u4e3a\u5982\u679c\u6ca1\u6709\u8bbe\u7f6everify\u6216\u5c06\u5176\u8bbe\u7f6e\u4e3aTrue\uff0c\u5219\u4f1a\u53d1\u751fSSLError\u3002","title":"verify(\u53ef\u9009\u7684)"},{"location":"concepts/testcase_structure/#export","text":"\u6307\u5b9a\u8f93\u51fa\u7684\u6d4b\u8bd5\u7528\u4f8b\u53d8\u91cf\u3002\u5c06\u6bcf\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u770b\u4f5c\u4e00\u4e2a\u9ed1\u76d2\uff0cconfig variables\u662f\u8f93\u5165\u53d8\u91cf\uff0cconfig export\u662f\u8f93\u51fa\u53d8\u91cf\u3002\u5f53\u4e00\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u5728\u53e6\u4e00\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u7684\u6b65\u9aa4\u4e2d\u88ab\u5f15\u7528\u65f6\uff0cconfig export\u5c06\u88ab\u63d0\u53d6\u5e76\u5728\u968f\u540e\u7684\u6d4b\u8bd5\u6b65\u9aa4\u4e2d\u4f7f\u7528\u3002","title":"export(\u53ef\u9009\u7684)"},{"location":"concepts/testcase_structure/#teststeps","text":"\u6bcf\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u90fd\u67091\u4e2a\u6216\u591a\u4e2a\u6d4b\u8bd5\u6b65\u9aa4\uff08List[step]\uff09\uff0c\u6bcf\u4e2a\u6d4b\u8bd5\u6b65\u9aa4\u5bf9\u5e94\u4e00\u4e2aAPI\u8bf7\u6c42\u6216\u5176\u4ed6\u7528\u4f8b\u7684\u5f15\u7528\u3002 \u6ce8\u610f\uff1a\u4e3a\u4e86\u7b80\u5355\uff0c\u5728HttpRunner v2.x\u4e2d\u7684API\u6982\u5ff5\u5df2\u7ecf\u88ab\u53d6\u6d88\u4e86\u3002\u4f60\u53ef\u4ee5\u5c06API\u5b9a\u4e49\u4e3a\u53ea\u6709\u4e00\u4e2a\u8bf7\u6c42\u6b65\u9aa4\u7684\u6d4b\u8bd5\u7528\u4f8b\u3002 teststeps: - name: get with params variables: foo1: bar11 foo2: bar21 sum_v: \"${sum_two(1, 2)}\" request: method: GET url: /get params: foo1: $foo1 foo2: $foo2 sum_v: $sum_v headers: User-Agent: HttpRunner/${get_httprunner_version()} extract: foo3: \"body.args.foo2\" validate: - eq: [\"status_code\", 200] - eq: [\"body.args.foo1\", \"bar11\"] - eq: [\"body.args.sum_v\", \"3\"] - eq: [\"body.args.foo2\", \"bar21\"] - name: post form data variables: foo2: bar23 request: method: POST url: /post headers: User-Agent: HttpRunner/${get_httprunner_version()} Content-Type: \"application/x-www-form-urlencoded\" data: \"foo1=$foo1&foo2=$foo2&foo3=$foo3\" validate: - equal: [\"status_code\", 200, \"\u5931\u8d25\u539f\u56e0\"] - equal: [\"body.form.foo1\", \"$expect_foo1\"] - equal: [\"body.form.foo2\", \"bar23\"] - equal: [\"body.form.foo3\", \"bar21\"]","title":"teststeps"},{"location":"concepts/testcase_structure/#name_1","text":"name\u7528\u6765\u5b9a\u4e49\u6d4b\u8bd5\u6b65\u9aa4 name\uff0c\u5c06\u51fa\u73b0\u5728log\u548c\u6d4b\u8bd5\u62a5\u544a\u4e2d\u3002","title":"name(\u5fc5\u987b)"},{"location":"concepts/testcase_structure/#variables_1","text":"\u6d4b\u8bd5\u6b65\u9aa4\u4e2d\u5b9a\u4e49\u7684\u53d8\u91cf\uff0c\u4f5c\u7528\u57df\u4e3a\u5f53\u524d\u6d4b\u8bd5\u6b65\u9aa4\u3002 \u5982\u679c\u60f3\u5728\u591a\u4e2a\u6d4b\u8bd5\u6b65\u9aa4\u4e2d\u5171\u4eab\u53d8\u91cf\uff0c\u9700\u8981\u5728config variables\u4e2d\u5b9a\u4e49\u3002 \u6d4b\u8bd5\u6b65\u9aa4\u4e2d\u7684\u53d8\u91cf\uff0c\u4f1a\u8986\u76d6config variables\u4e2d\u7684\u540c\u540d\u53d8\u91cf\u3002","title":"variables(\u53ef\u9009\u7684)"},{"location":"concepts/testcase_structure/#request","text":"","title":"request(\u5fc5\u987b)"},{"location":"concepts/testcase_structure/#method","text":"\u8bbe\u7f6ehttp\u65b9\u6cd5\uff0c\u652f\u6301 RestFul\u4e2d\u7684\u6240\u6709http\u65b9\u6cd5\uff08GET/POST/PUT/PATCH/DELETE/\uff09 \uff0c\u76f8\u5f53\u4e8e requests.request \u4e2d\u7684method\u3002","title":"method(\u5fc5\u987b)"},{"location":"concepts/testcase_structure/#url","text":"\u8bbe\u7f6eUrl,\u5982\u679cbase_url\u5728config\u4e2d\u8bbe\u7f6e\u4e86\uff0curl\u53ea\u80fd\u662f\u76f8\u5bf9\u8def\u5f84\u90e8\u5206\u3002\u76f8\u5f53\u4e8e requests.request \u4e2d\u7684url\u3002","title":"url(\u5fc5\u987b)"},{"location":"concepts/testcase_structure/#params","text":"\u8bbe\u7f6eUrl\u7684query\uff0c\u76f8\u5f53\u4e8e requests.request \u4e2d\u7684params\u3002","title":"params(\u53ef\u9009)"},{"location":"concepts/testcase_structure/#headers","text":"\u8bbe\u7f6e\u8bf7\u6c42\u7684headers\uff0c\u76f8\u5f53\u4e8e requests.request \u4e2d\u7684headers\u3002","title":"headers(\u53ef\u9009)"},{"location":"concepts/testcase_structure/#cookies","text":"\u8bbe\u7f6eHttp\u8bf7\u6c42\u7684cookies\uff0c\u76f8\u5f53\u4e8e requests.request \u4e2d\u7684cookies\u3002","title":"cookies(\u53ef\u9009)"},{"location":"concepts/testcase_structure/#data","text":"\u8bbe\u7f6ehttp\u8bf7\u6c42\u7684Body\uff0c\u76f8\u5f53\u4e8e requests.request \u4e2d\u7684data\u3002","title":"data(\u53ef\u9009)"},{"location":"concepts/testcase_structure/#json","text":"\u8bbe\u7f6ehttp\u8bf7\u6c42json\u683c\u5f0f\u7684body\uff0c\u76f8\u5f53\u4e8e requests.request \u4e2d\u7684json\u3002","title":"json(\u53ef\u9009)"},{"location":"concepts/testcase_structure/#extract","text":"\u4ece\u5f53\u524d HTTP \u8bf7\u6c42\u7684\u54cd\u5e94\u7ed3\u679c\u4e2d\u63d0\u53d6\u53c2\u6570\uff0c\u5e76\u4fdd\u5b58\u5230\u53c2\u6570\u53d8\u91cf\u4e2d\uff08\u4f8b\u5982token\uff09\uff0c\u540e\u7eed\u6d4b\u8bd5\u7528\u4f8b\u53ef\u901a\u8fc7$token\u7684\u5f62\u5f0f\u8fdb\u884c\u5f15\u7528\u3002 \u539f\u7406\uff1a\u5229\u7528 jmespath \u63d0\u53d6Json response body\u7684\u5185\u5bb9\u3002","title":"extract(\u53ef\u9009)"},{"location":"concepts/testcase_structure/#validate","text":"\u6d4b\u8bd5\u7528\u4f8b\u4e2d\u5b9a\u4e49\u7684\u7ed3\u679c\u6821\u9a8c\u9879\uff0c\u4f5c\u7528\u57df\u4e3a\u5f53\u524d\u6d4b\u8bd5\u7528\u4f8b\uff0c\u7528\u4e8e\u5b9e\u73b0\u5bf9\u5f53\u524d\u6d4b\u8bd5\u7528\u4f8b\u8fd0\u884c\u7ed3\u679c\u7684\u6821\u9a8c\u3002 \u539f\u7406\uff1a\u7528 jmespath \u63d0\u53d6Json response\u7684\u5185\u5bb9\uff0c\u5e76\u8fdb\u884c\u65ad\u8a00\u6821\u9a8c\u3002 \u683c\u5f0f\uff1a - \u8fd0\u7b97\u7b26: [jmespath\u8868\u8fbe\u5f0f, expected_value, message] \u8fd0\u7b97\u7b26\u5305\u62ec: equal: \u7b49\u4e8e contained_by: \u5b9e\u9645\u7ed3\u679c\u662f\u5426\u88ab\u5305\u542b\u5728\u9884\u671f\u7ed3\u679c\u4e2d contains: \u9884\u671f\u7ed3\u679c\u662f\u5426\u88ab\u5305\u542b\u5728\u5b9e\u9645\u7ed3\u679c\u4e2d endswith: \u4ee5...\u7ed3\u5c3e greater_or_equals: \u5927\u4e8e\u7b49\u4e8e greater_than: \u5927\u4e8e length_equal: \u957f\u5ea6\u7b49\u4e8e length_greater_or_equals: \u957f\u5ea6\u5927\u4e8e\u7b49\u4e8e length_greater_than: \u957f\u5ea6\u5927\u4e8e length_less_or_equals: \u957f\u5ea6\u5c0f\u4e8e\u7b49\u4e8e length_less_than: \u957f\u5ea6\u5c0f\u4e8e less_or_equals: \u5c0f\u4e8e\u7b49\u4e8e less_than: \u5c0f\u4e8e not_equal: \u4e0d\u7b49\u4e8e regex_match: \u5b57\u7b26\u4e32\u662f\u5426\u7b26\u5408\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d\u89c4\u5219 startswith: \u4ee5...\u5f00\u5934 string_equals: \u5b57\u7b26\u4e32\u76f8\u7b49 type_match: \u7c7b\u578b\u662f\u5426\u5339\u914d jmespath: jmespath\u8868\u8fbe\u5f0f\uff0c\u8be6\u89c1 JMESPath Tutorial expected_value: \u6307\u5b9a\u671f\u671b\u503c\u6216\u53d8\u91cf\uff0c\u4e5f\u53ef\u4ee5\u8c03\u7528\u65b9\u6cd5 message(optional): \u7528\u4e8e\u63cf\u8ff0\u65ad\u8a00\u5931\u8d25\u539f\u56e0","title":"validate(\u53ef\u9009)"},{"location":"concepts/testcase_structure/#hooks","text":"setup_hooks\u51fd\u6570\u653e\u7f6e\u4e8edebugtalk.py\u4e2d\uff0c\u5e76\u4e14\u5fc5\u987b\u5305\u542b\u4e09\u4e2a\u53c2\u6570\uff1a method: \u8bf7\u6c42\u65b9\u6cd5\uff0c\u6bd4\u5982\uff1aGET,POST,PUT url: \u8bf7\u6c42URL kwargs: request\u7684\u53c2\u6570\u5b57\u5178 teardown_hooks\u51fd\u6570\u653e\u7f6e\u4e8edebugtalk.py\u4e2d\uff0c\u5e76\u4e14\u5fc5\u987b\u5305\u542b\u4e00\u4e2a\u53c2\u6570: resp_obj: requests.Response\u5b9e\u4f8b \u5173\u4e8e setup_hooks \u548c teardown_hooks \u7684\u66f4\u591a\u5185\u5bb9\uff0c\u8bf7\u53c2\u8003 \u300ahook \u673a\u5236\u300b \u3002","title":"hooks(\u53ef\u9009)"},{"location":"concepts/testcase_structure/#_3","text":"\u793a\u4f8b\uff1a teststeps: - name: request with functions variables: foo1: testcase_ref_bar1 expect_foo1: testcase_ref_bar1 testcase: testcases/demo_testcase_request.yml export: - foo3","title":"\u6d4b\u8bd5\u6b65\u9aa4\u4e2d\u5f15\u7528\u6d4b\u8bd5\u7528\u4f8b"},{"location":"concepts/testcase_structure/#variables_2","text":"\u8ddfrequest\u4e2d\u7684variables\u4e00\u6837","title":"variables"},{"location":"concepts/testcase_structure/#testcase","text":"\u6307\u5b9a\u5f15\u7528\u7684\u6d4b\u8bd5\u7528\u4f8b","title":"testcase"},{"location":"concepts/testcase_structure/#export_1","text":"\u4ece\u5f15\u7528\u7684\u6d4b\u8bd5\u7528\u4f8b\u4e2d\u63d0\u53d6\u7684\u53d8\u91cf\uff0c\u8be5\u53d8\u91cf\u5728\u540e\u9762\u7684test steps\u4e2d\u53ef\u4ee5\u5f15\u7528","title":"export"},{"location":"concepts/upload-case/","text":"\u6587\u4ef6\u4e0a\u4f20\u573a\u666f \u5bf9\u4e8e\u4e0a\u4f20\u6587\u4ef6\u7c7b\u578b\u7684\u6d4b\u8bd5\u573a\u666f\uff0cHttpRunner \u96c6\u6210 requests_toolbelt \u5b9e\u73b0\u4e86\u4e0a\u4f20\u529f\u80fd\u3002 \u5728\u4f7f\u7528\u4e4b\u524d\uff0c\u786e\u4fdd\u5df2\u5b89\u88c5\u5982\u4e0b\u4f9d\u8d56\u5e93\uff1a * requests_toolbelt * filetype \u4f7f\u7528\u5185\u7f6e upload \u5173\u952e\u5b57\uff0c\u53ef\u8f7b\u677e\u5b9e\u73b0\u4e0a\u4f20\u529f\u80fd\uff08\u9002\u7528\u7248\u672c\uff1a2.4.1+\uff09\u3002 teststeps: - name: \u7528\u6237vip\u72b6\u6001\u68c0\u67e5-v3 variables: # \u6d4b\u8bd5\u6b65\u9aa4\u53d8\u91cf api_name: \"detail\" request: method: POST url: http://127.0.0.1:5000/demo headers: Cookie: session=AAA-BBB-CCC upload: file: \"data/file_to_upload\" field1: \"value1\" field2: \"value2\" validate: # \u65ad\u8a00 - eq: [ \"status_code\", 200 ]","title":"\u6587\u4ef6\u4e0a\u4f20\u573a\u666f"},{"location":"concepts/upload-case/#_1","text":"\u5bf9\u4e8e\u4e0a\u4f20\u6587\u4ef6\u7c7b\u578b\u7684\u6d4b\u8bd5\u573a\u666f\uff0cHttpRunner \u96c6\u6210 requests_toolbelt \u5b9e\u73b0\u4e86\u4e0a\u4f20\u529f\u80fd\u3002 \u5728\u4f7f\u7528\u4e4b\u524d\uff0c\u786e\u4fdd\u5df2\u5b89\u88c5\u5982\u4e0b\u4f9d\u8d56\u5e93\uff1a * requests_toolbelt * filetype \u4f7f\u7528\u5185\u7f6e upload \u5173\u952e\u5b57\uff0c\u53ef\u8f7b\u677e\u5b9e\u73b0\u4e0a\u4f20\u529f\u80fd\uff08\u9002\u7528\u7248\u672c\uff1a2.4.1+\uff09\u3002 teststeps: - name: \u7528\u6237vip\u72b6\u6001\u68c0\u67e5-v3 variables: # \u6d4b\u8bd5\u6b65\u9aa4\u53d8\u91cf api_name: \"detail\" request: method: POST url: http://127.0.0.1:5000/demo headers: Cookie: session=AAA-BBB-CCC upload: file: \"data/file_to_upload\" field1: \"value1\" field2: \"value2\" validate: # \u65ad\u8a00 - eq: [ \"status_code\", 200 ]","title":"\u6587\u4ef6\u4e0a\u4f20\u573a\u666f"},{"location":"user_guide/record%26generate%20testcase/","text":"\u5f55\u5236\u5e76\u751f\u6210\u6d4b\u8bd5\u7528\u4f8b \u6293\u5305http\u8bf7\u6c42\u548cresponse \u5199\u7528\u4f8b\u4e4b\u524d\uff0c\u6211\u4eec\u5e94\u8be5\u719f\u6089API\u7684\u8be6\u7ec6\u4fe1\u606f\u3002\u5efa\u8bae\u4f7f\u7528\u6293\u5305\u5de5\u5177Charles\u6216AnyProxy\u8fdb\u884c\u6293\u5305\u3002 \u6293\u5305\u914d\u7f6e\u53ef\u4ee5\u53c2\u8003\uff1a Android https\u6293\u5305\u6307\u5357 \u6293\u5305\u793a\u4f8b\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u5bfc\u51faHAR\u6587\u4ef6 \u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u6355\u83b7\u7684\u8bf7\u6c42\u548c\u54cd\u5e94\uff0c\u5e76\u5c06\u4f1a\u8bdd\u5bfc\u51fa\u5230Har\u6587\u4ef6 har2case\u751f\u6210\u7528\u4f8b \u53ef\u4ee5\u4f7f\u7528\u547d\u4ee4 har2case \u5c06Har\u6587\u4ef6\u8f6c\u6210\u6d4b\u8bd5\u7528\u4f8b\u3002 \u5e2e\u52a9 $ har2case -h \u7528\u6cd5: har2case har2case [-h] [-2y] [-2j] [--filter FILTER] [--exclude EXCLUDE] [har_source_file] positional arguments: har_source_file Specify HAR source file optional arguments: -h, --help show this help message and exit -2y, --to-yml, --to-yaml \u8f6c\u6362\u6210YAML\u683c\u5f0f\uff0c\u5982\u679c\u672a\u6307\u5b9a\uff0c\u9ed8\u8ba4\u8f6c\u672apytest\u683c\u5f0f\u3002 -2j, --to-json \u8f6c\u6362\u6210JSON\u683c\u5f0f\uff0c\u5982\u679c\u672a\u6307\u5b9a\uff0c\u9ed8\u8ba4\u8f6c\u672apytest\u683c\u5f0f\u3002 --filter FILTER \u6307\u5b9a\u8fc7\u6ee4\u5173\u952e\u8bcd, \u53ea\u8f6c\u6362\u8fc7\u6ee4\u5668\u5305\u542b\u7684URL\u3002 --exclude EXCLUDE \u6307\u5b9a\u6392\u9664\u5173\u952e\u8bcd, \u5305\u542b\u6392\u9664\u5173\u952e\u8106\u7684URL\u4e0d\u4f1a\u88ab\u8f6c\u6362, \u591a\u4e2a\u5173\u952e\u8bcd\u53ef\u4ee5\u7528'|'\u9694\u5f00\u3002 \u751f\u6210\u6d4b\u8bd5\u7528\u4f8b(pytest) HttpRunner 3.0.7 \u7248\u672c\u5f00\u59cb\uff0c har2case \u5c06HAR\u6587\u4ef6\u9ed8\u8ba4\u8f6c\u6362\u6210pytest\uff0c\u5f3a\u70c8\u5efa\u8bae\u4ee5pytest\u683c\u5f0f\u800c\u4e0d\u662f\u4ee5\u524d\u7684YAML / JSON\u683c\u5f0f\u7f16\u5199\u548c\u7ef4\u62a4\u6d4b\u8bd5\u7528\u4f8b\u3002 $ har2case har/postman-echo-post-form.har 2020-06-15 15:08:01.187 | INFO | httprunner.ext.har2case.core:gen_testcase:332 - Start to generate testcase from har/postman-echo-post-form.har 2020-06-15 15:08:01.187 | INFO | httprunner.ext.har2case.core:_make_testcase:323 - Extract info from HAR file and prepare for testcase. 2020-06-15 15:08:01.191 | INFO | httprunner.loader:load_dot_env_file:130 - Loading environment variables from /Users/debugtalk/Desktop/demo/.env 2020-06-15 15:08:01.191 | DEBUG | httprunner.utils:set_os_environ:32 - Set OS environment variable: USERNAME 2020-06-15 15:08:01.191 | DEBUG | httprunner.utils:set_os_environ:32 - Set OS environment variable: PASSWORD 2020-06-15 15:08:01.193 | INFO | httprunner.make:make_testcase:310 - start to make testcase: /Users/debugtalk/Desktop/demo/har/postman-echo-post-form.har 2020-06-15 15:08:01.193 | INFO | httprunner.make:make_testcase:383 - generated testcase: /Users/debugtalk/Desktop/demo/har/postman_echo_post_form_test.py 2020-06-15 15:08:01.194 | INFO | httprunner.make:format_pytest_with_black:147 - format pytest cases with black ... reformatted /Users/debugtalk/Desktop/demo/har/postman_echo_post_form_test.py All done! \u2728 \ud83c\udf70 \u2728 1 file reformatted. 2020-06-15 15:08:01.469 | INFO | httprunner.ext.har2case.core:gen_testcase:353 - generated testcase: /Users/debugtalk/Desktop/demo/har/postman_echo_post_form_test.py \u751f\u6210\u7684pytest\u6587\u4ef6\u662f\u6807\u51c6\u7684python\u6587\u4ef6\uff0c\u5982\u4e0b\u6240\u793a\uff1a # NOTE: Generated By HttpRunner v3.0.12 # FROM: har/postman-echo-post-form.har from httprunner import HttpRunner, Config, Step, RunRequest, RunTestCase class TestCasePostmanEchoPostForm(HttpRunner): config = Config(\"testcase description\").verify(False) teststeps = [ Step( RunRequest(\"/get\") .get(\"https://postman-echo.com/get\") .with_params(**{\"foo1\": \"bar1\", \"foo2\": \"bar2\"}) .with_headers( **{ \"User-Agent\": \"PostmanRuntime/7.24.1\", \"Accept\": \"*/*\", \"Cache-Control\": \"no-cache\", \"Postman-Token\": \"6606343b-10e5-4165-a89f-6c301b762ce0\", \"Host\": \"postman-echo.com\", \"Accept-Encoding\": \"gzip, deflate, br\", \"Connection\": \"keep-alive\", \"Cookie\": \"sails.sid=s%3AQG_EVeNRw8k1xxZ6v_SG401VTpmJDSRu.fTAGx3JnZUT7S0c2%2FrD9cxUhQemIsm78nifYZYHpPCU\", } ) .with_cookies( **{ \"sails.sid\": \"s%3AQG_EVeNRw8k1xxZ6v_SG401VTpmJDSRu.fTAGx3JnZUT7S0c2%2FrD9cxUhQemIsm78nifYZYHpPCU\" } ) .validate() .assert_equal(\"status_code\", 200) .assert_equal('headers.\"Content-Type\"', \"application/json; charset=utf-8\") .assert_equal( \"body.url\", \"https://postman-echo.com/get?foo1=bar1&foo2=bar2\" ) ), Step( RunRequest(\"/post\") .post(\"https://postman-echo.com/post\") .with_headers( **{ \"User-Agent\": \"PostmanRuntime/7.24.1\", \"Accept\": \"*/*\", \"Cache-Control\": \"no-cache\", \"Postman-Token\": \"3e408e9d-25ca-4b31-b04b-7f4898a8cd49\", \"Host\": \"postman-echo.com\", \"Accept-Encoding\": \"gzip, deflate, br\", \"Connection\": \"keep-alive\", \"Content-Type\": \"application/x-www-form-urlencoded\", \"Content-Length\": \"19\", \"Cookie\": \"sails.sid=s%3AQG_EVeNRw8k1xxZ6v_SG401VTpmJDSRu.fTAGx3JnZUT7S0c2%2FrD9cxUhQemIsm78nifYZYHpPCU\", } ) .with_cookies( **{ \"sails.sid\": \"s%3AQG_EVeNRw8k1xxZ6v_SG401VTpmJDSRu.fTAGx3JnZUT7S0c2%2FrD9cxUhQemIsm78nifYZYHpPCU\" } ) .with_data({\"foo1\": \"bar1\", \"foo2\": \"bar2\"}) .validate() .assert_equal(\"status_code\", 200) .assert_equal('headers.\"Content-Type\"', \"application/json; charset=utf-8\") .assert_equal(\"body.data\", \"\") .assert_equal(\"body.url\", \"https://postman-echo.com/post\") ), ] if __name__ == \"__main__\": TestCasePostmanEchoPostForm().test_start() \u53ef\u4ee5\u4f7f\u7528\u547d\u4ee4 hrun \u6216 pytest \u8fd0\u884c\uff0c\u5b9e\u9645\u4e0a\uff0c hrun \u662f pytest \u7684\u5c01\u88c5\uff0c\u6548\u679c\u57fa\u672c\u76f8\u540c\u3002 $ hrun har/postman_echo_post_form_test.py 2020-06-15 15:23:03.502 | INFO | httprunner.loader:load_dot_env_file:130 - Loading environment variables from /Users/debugtalk/Desktop/demo/.env 2020-06-15 15:23:03.502 | DEBUG | httprunner.utils:set_os_environ:32 - Set OS environment variable: USERNAME 2020-06-15 15:23:03.502 | DEBUG | httprunner.utils:set_os_environ:32 - Set OS environment variable: PASSWORD 2020-06-15 15:23:03.503 | INFO | httprunner.make:format_pytest_with_black:147 - format pytest cases with black ... All done! \u2728 \ud83c\udf70 \u2728 1 file left unchanged. 2020-06-15 15:23:03.662 | INFO | httprunner.cli:main_run:56 - start to run tests with pytest. HttpRunner version: 3.0.12 ====================================================================== test session starts ====================================================================== platform darwin -- Python 3.7.5, pytest-5.4.2, py-1.8.1, pluggy-0.13.1 rootdir: /Users/debugtalk/Desktop/demo plugins: metadata-1.9.0, allure-pytest-2.8.16, html-2.1.1 collected 1 item har/postman_echo_post_form_test.py . [100%] ======================================================================= 1 passed in 2.60s ======================================================================= $ pytest har/postman_echo_post_form_test.py ====================================================================== test session starts ====================================================================== platform darwin -- Python 3.7.5, pytest-5.4.2, py-1.8.1, pluggy-0.13.1 rootdir: /Users/debugtalk/Desktop/demo plugins: metadata-1.9.0, allure-pytest-2.8.16, html-2.1.1 collected 1 item har/postman_echo_post_form_test.py . [100%] ================================================================= 1 passed, 1 warning in 4.11s ================================================================== \u751f\u6210\u6d4b\u8bd5\u7528\u4f8b(YAML/JSON) \u5f53\u7136\uff0c\u4f60\u4e5f\u53ef\u4ee5\u751f\u6210 YAML/JSON \u6d4b\u8bd5\u7528\u4f8b\u3002 \u53ea\u9700\u8981\u5728 har2case \u547d\u4ee4\u540e \u6dfb\u52a0 -2y/--to-yml \u6216 -2j/--to-json \u3002 $ har2case har/postman-echo-post-form.har -2j 2020-06-15 15:32:02.955 | INFO | httprunner.ext.har2case.core:gen_testcase:332 - Start to generate testcase from har/postman-echo-post-form.har 2020-06-15 15:32:02.955 | INFO | httprunner.ext.har2case.core:_make_testcase:323 - Extract info from HAR file and prepare for testcase. 2020-06-15 15:32:02.958 | INFO | httprunner.ext.har2case.utils:dump_json:122 - dump testcase to JSON format. 2020-06-15 15:32:02.959 | INFO | httprunner.ext.har2case.utils:dump_json:131 - Generate JSON testcase successfully: har/postman-echo-post-form.json 2020-06-15 15:32:02.959 | INFO | httprunner.ext.har2case.core:gen_testcase:353 - generated testcase: har/postman-echo-post-form.json { \"config\": { \"name\": \"testcase description\", \"variables\": {}, \"verify\": false }, \"teststeps\": [ { \"name\": \"/get\", \"request\": { \"url\": \"https://postman-echo.com/get\", \"params\": { \"foo1\": \"bar1\", \"foo2\": \"bar2\" }, \"method\": \"GET\", \"cookies\": { \"sails.sid\": \"s%3AQG_EVeNRw8k1xxZ6v_SG401VTpmJDSRu.fTAGx3JnZUT7S0c2%2FrD9cxUhQemIsm78nifYZYHpPCU\" }, \"headers\": { \"User-Agent\": \"PostmanRuntime/7.24.1\", \"Accept\": \"*/*\", \"Cache-Control\": \"no-cache\", \"Postman-Token\": \"6606343b-10e5-4165-a89f-6c301b762ce0\", \"Host\": \"postman-echo.com\", \"Accept-Encoding\": \"gzip, deflate, br\", \"Connection\": \"keep-alive\", \"Cookie\": \"sails.sid=s%3AQG_EVeNRw8k1xxZ6v_SG401VTpmJDSRu.fTAGx3JnZUT7S0c2%2FrD9cxUhQemIsm78nifYZYHpPCU\" } }, \"validate\": [ { \"eq\": [ \"status_code\", 200 ] }, { \"eq\": [ \"headers.Content-Type\", \"application/json; charset=utf-8\" ] }, { \"eq\": [ \"body.url\", \"https://postman-echo.com/get?foo1=bar1&foo2=bar2\" ] } ] }, { \"name\": \"/post\", \"request\": { \"url\": \"https://postman-echo.com/post\", \"method\": \"POST\", \"cookies\": { \"sails.sid\": \"s%3AQG_EVeNRw8k1xxZ6v_SG401VTpmJDSRu.fTAGx3JnZUT7S0c2%2FrD9cxUhQemIsm78nifYZYHpPCU\" }, \"headers\": { \"User-Agent\": \"PostmanRuntime/7.24.1\", \"Accept\": \"*/*\", \"Cache-Control\": \"no-cache\", \"Postman-Token\": \"3e408e9d-25ca-4b31-b04b-7f4898a8cd49\", \"Host\": \"postman-echo.com\", \"Accept-Encoding\": \"gzip, deflate, br\", \"Connection\": \"keep-alive\", \"Content-Type\": \"application/x-www-form-urlencoded\", \"Content-Length\": \"19\", \"Cookie\": \"sails.sid=s%3AQG_EVeNRw8k1xxZ6v_SG401VTpmJDSRu.fTAGx3JnZUT7S0c2%2FrD9cxUhQemIsm78nifYZYHpPCU\" }, \"data\": { \"foo1\": \"bar1\", \"foo2\": \"bar2\" } }, \"validate\": [ { \"eq\": [ \"status_code\", 200 ] }, { \"eq\": [ \"headers.Content-Type\", \"application/json; charset=utf-8\" ] }, { \"eq\": [ \"body.data\", \"\" ] }, { \"eq\": [ \"body.url\", \"https://postman-echo.com/post\" ] } ] } ] } YAML/JSON \u7528\u4f8b\u548c pytest \u7528\u4f8b\u6587\u4ef6\u542b\u6709\u76f8\u540c\u7684\u4fe1\u606f\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528 hrun \u8fd0\u884c\u3002 $ hrun har/postman-echo-post-form.json 2020-06-15 15:37:15.621 | INFO | httprunner.loader:load_dot_env_file:130 - Loading environment variables from /Users/debugtalk/Desktop/demo/.env 2020-06-15 15:37:15.622 | DEBUG | httprunner.utils:set_os_environ:32 - Set OS environment variable: USERNAME 2020-06-15 15:37:15.622 | DEBUG | httprunner.utils:set_os_environ:32 - Set OS environment variable: PASSWORD 2020-06-15 15:37:15.623 | INFO | httprunner.make:make_testcase:310 - start to make testcase: /Users/debugtalk/Desktop/demo/har/postman-echo-post-form.json 2020-06-15 15:37:15.625 | INFO | httprunner.make:make_testcase:383 - generated testcase: /Users/debugtalk/Desktop/demo/har/postman_echo_post_form_test.py 2020-06-15 15:37:15.625 | INFO | httprunner.make:format_pytest_with_black:147 - format pytest cases with black ... reformatted /Users/debugtalk/Desktop/demo/har/postman_echo_post_form_test.py All done! \u2728 \ud83c\udf70 \u2728 1 file reformatted, 1 file left unchanged. 2020-06-15 15:37:15.962 | INFO | httprunner.cli:main_run:56 - start to run tests with pytest. HttpRunner version: 3.0.12 ====================================================================== test session starts ====================================================================== platform darwin -- Python 3.7.5, pytest-5.4.2, py-1.8.1, pluggy-0.13.1 rootdir: /Users/debugtalk/Desktop/demo plugins: metadata-1.9.0, allure-pytest-2.8.16, html-2.1.1 collected 1 item har/postman_echo_post_form_test.py . [100%] ======================================================================= 1 passed in 2.03s =======================================================================","title":"\u5f55\u5236&\u751f\u6210\u6d4b\u8bd5\u7528\u4f8b"},{"location":"user_guide/record%26generate%20testcase/#_1","text":"","title":"\u5f55\u5236\u5e76\u751f\u6210\u6d4b\u8bd5\u7528\u4f8b"},{"location":"user_guide/record%26generate%20testcase/#httpresponse","text":"\u5199\u7528\u4f8b\u4e4b\u524d\uff0c\u6211\u4eec\u5e94\u8be5\u719f\u6089API\u7684\u8be6\u7ec6\u4fe1\u606f\u3002\u5efa\u8bae\u4f7f\u7528\u6293\u5305\u5de5\u5177Charles\u6216AnyProxy\u8fdb\u884c\u6293\u5305\u3002 \u6293\u5305\u914d\u7f6e\u53ef\u4ee5\u53c2\u8003\uff1a Android https\u6293\u5305\u6307\u5357 \u6293\u5305\u793a\u4f8b\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a","title":"\u6293\u5305http\u8bf7\u6c42\u548cresponse"},{"location":"user_guide/record%26generate%20testcase/#har","text":"\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u6355\u83b7\u7684\u8bf7\u6c42\u548c\u54cd\u5e94\uff0c\u5e76\u5c06\u4f1a\u8bdd\u5bfc\u51fa\u5230Har\u6587\u4ef6","title":"\u5bfc\u51faHAR\u6587\u4ef6"},{"location":"user_guide/record%26generate%20testcase/#har2case","text":"\u53ef\u4ee5\u4f7f\u7528\u547d\u4ee4 har2case \u5c06Har\u6587\u4ef6\u8f6c\u6210\u6d4b\u8bd5\u7528\u4f8b\u3002","title":"har2case\u751f\u6210\u7528\u4f8b"},{"location":"user_guide/record%26generate%20testcase/#_2","text":"$ har2case -h \u7528\u6cd5: har2case har2case [-h] [-2y] [-2j] [--filter FILTER] [--exclude EXCLUDE] [har_source_file] positional arguments: har_source_file Specify HAR source file optional arguments: -h, --help show this help message and exit -2y, --to-yml, --to-yaml \u8f6c\u6362\u6210YAML\u683c\u5f0f\uff0c\u5982\u679c\u672a\u6307\u5b9a\uff0c\u9ed8\u8ba4\u8f6c\u672apytest\u683c\u5f0f\u3002 -2j, --to-json \u8f6c\u6362\u6210JSON\u683c\u5f0f\uff0c\u5982\u679c\u672a\u6307\u5b9a\uff0c\u9ed8\u8ba4\u8f6c\u672apytest\u683c\u5f0f\u3002 --filter FILTER \u6307\u5b9a\u8fc7\u6ee4\u5173\u952e\u8bcd, \u53ea\u8f6c\u6362\u8fc7\u6ee4\u5668\u5305\u542b\u7684URL\u3002 --exclude EXCLUDE \u6307\u5b9a\u6392\u9664\u5173\u952e\u8bcd, \u5305\u542b\u6392\u9664\u5173\u952e\u8106\u7684URL\u4e0d\u4f1a\u88ab\u8f6c\u6362, \u591a\u4e2a\u5173\u952e\u8bcd\u53ef\u4ee5\u7528'|'\u9694\u5f00\u3002","title":"\u5e2e\u52a9"},{"location":"user_guide/record%26generate%20testcase/#pytest","text":"HttpRunner 3.0.7 \u7248\u672c\u5f00\u59cb\uff0c har2case \u5c06HAR\u6587\u4ef6\u9ed8\u8ba4\u8f6c\u6362\u6210pytest\uff0c\u5f3a\u70c8\u5efa\u8bae\u4ee5pytest\u683c\u5f0f\u800c\u4e0d\u662f\u4ee5\u524d\u7684YAML / JSON\u683c\u5f0f\u7f16\u5199\u548c\u7ef4\u62a4\u6d4b\u8bd5\u7528\u4f8b\u3002 $ har2case har/postman-echo-post-form.har 2020-06-15 15:08:01.187 | INFO | httprunner.ext.har2case.core:gen_testcase:332 - Start to generate testcase from har/postman-echo-post-form.har 2020-06-15 15:08:01.187 | INFO | httprunner.ext.har2case.core:_make_testcase:323 - Extract info from HAR file and prepare for testcase. 2020-06-15 15:08:01.191 | INFO | httprunner.loader:load_dot_env_file:130 - Loading environment variables from /Users/debugtalk/Desktop/demo/.env 2020-06-15 15:08:01.191 | DEBUG | httprunner.utils:set_os_environ:32 - Set OS environment variable: USERNAME 2020-06-15 15:08:01.191 | DEBUG | httprunner.utils:set_os_environ:32 - Set OS environment variable: PASSWORD 2020-06-15 15:08:01.193 | INFO | httprunner.make:make_testcase:310 - start to make testcase: /Users/debugtalk/Desktop/demo/har/postman-echo-post-form.har 2020-06-15 15:08:01.193 | INFO | httprunner.make:make_testcase:383 - generated testcase: /Users/debugtalk/Desktop/demo/har/postman_echo_post_form_test.py 2020-06-15 15:08:01.194 | INFO | httprunner.make:format_pytest_with_black:147 - format pytest cases with black ... reformatted /Users/debugtalk/Desktop/demo/har/postman_echo_post_form_test.py All done! \u2728 \ud83c\udf70 \u2728 1 file reformatted. 2020-06-15 15:08:01.469 | INFO | httprunner.ext.har2case.core:gen_testcase:353 - generated testcase: /Users/debugtalk/Desktop/demo/har/postman_echo_post_form_test.py \u751f\u6210\u7684pytest\u6587\u4ef6\u662f\u6807\u51c6\u7684python\u6587\u4ef6\uff0c\u5982\u4e0b\u6240\u793a\uff1a # NOTE: Generated By HttpRunner v3.0.12 # FROM: har/postman-echo-post-form.har from httprunner import HttpRunner, Config, Step, RunRequest, RunTestCase class TestCasePostmanEchoPostForm(HttpRunner): config = Config(\"testcase description\").verify(False) teststeps = [ Step( RunRequest(\"/get\") .get(\"https://postman-echo.com/get\") .with_params(**{\"foo1\": \"bar1\", \"foo2\": \"bar2\"}) .with_headers( **{ \"User-Agent\": \"PostmanRuntime/7.24.1\", \"Accept\": \"*/*\", \"Cache-Control\": \"no-cache\", \"Postman-Token\": \"6606343b-10e5-4165-a89f-6c301b762ce0\", \"Host\": \"postman-echo.com\", \"Accept-Encoding\": \"gzip, deflate, br\", \"Connection\": \"keep-alive\", \"Cookie\": \"sails.sid=s%3AQG_EVeNRw8k1xxZ6v_SG401VTpmJDSRu.fTAGx3JnZUT7S0c2%2FrD9cxUhQemIsm78nifYZYHpPCU\", } ) .with_cookies( **{ \"sails.sid\": \"s%3AQG_EVeNRw8k1xxZ6v_SG401VTpmJDSRu.fTAGx3JnZUT7S0c2%2FrD9cxUhQemIsm78nifYZYHpPCU\" } ) .validate() .assert_equal(\"status_code\", 200) .assert_equal('headers.\"Content-Type\"', \"application/json; charset=utf-8\") .assert_equal( \"body.url\", \"https://postman-echo.com/get?foo1=bar1&foo2=bar2\" ) ), Step( RunRequest(\"/post\") .post(\"https://postman-echo.com/post\") .with_headers( **{ \"User-Agent\": \"PostmanRuntime/7.24.1\", \"Accept\": \"*/*\", \"Cache-Control\": \"no-cache\", \"Postman-Token\": \"3e408e9d-25ca-4b31-b04b-7f4898a8cd49\", \"Host\": \"postman-echo.com\", \"Accept-Encoding\": \"gzip, deflate, br\", \"Connection\": \"keep-alive\", \"Content-Type\": \"application/x-www-form-urlencoded\", \"Content-Length\": \"19\", \"Cookie\": \"sails.sid=s%3AQG_EVeNRw8k1xxZ6v_SG401VTpmJDSRu.fTAGx3JnZUT7S0c2%2FrD9cxUhQemIsm78nifYZYHpPCU\", } ) .with_cookies( **{ \"sails.sid\": \"s%3AQG_EVeNRw8k1xxZ6v_SG401VTpmJDSRu.fTAGx3JnZUT7S0c2%2FrD9cxUhQemIsm78nifYZYHpPCU\" } ) .with_data({\"foo1\": \"bar1\", \"foo2\": \"bar2\"}) .validate() .assert_equal(\"status_code\", 200) .assert_equal('headers.\"Content-Type\"', \"application/json; charset=utf-8\") .assert_equal(\"body.data\", \"\") .assert_equal(\"body.url\", \"https://postman-echo.com/post\") ), ] if __name__ == \"__main__\": TestCasePostmanEchoPostForm().test_start() \u53ef\u4ee5\u4f7f\u7528\u547d\u4ee4 hrun \u6216 pytest \u8fd0\u884c\uff0c\u5b9e\u9645\u4e0a\uff0c hrun \u662f pytest \u7684\u5c01\u88c5\uff0c\u6548\u679c\u57fa\u672c\u76f8\u540c\u3002 $ hrun har/postman_echo_post_form_test.py 2020-06-15 15:23:03.502 | INFO | httprunner.loader:load_dot_env_file:130 - Loading environment variables from /Users/debugtalk/Desktop/demo/.env 2020-06-15 15:23:03.502 | DEBUG | httprunner.utils:set_os_environ:32 - Set OS environment variable: USERNAME 2020-06-15 15:23:03.502 | DEBUG | httprunner.utils:set_os_environ:32 - Set OS environment variable: PASSWORD 2020-06-15 15:23:03.503 | INFO | httprunner.make:format_pytest_with_black:147 - format pytest cases with black ... All done! \u2728 \ud83c\udf70 \u2728 1 file left unchanged. 2020-06-15 15:23:03.662 | INFO | httprunner.cli:main_run:56 - start to run tests with pytest. HttpRunner version: 3.0.12 ====================================================================== test session starts ====================================================================== platform darwin -- Python 3.7.5, pytest-5.4.2, py-1.8.1, pluggy-0.13.1 rootdir: /Users/debugtalk/Desktop/demo plugins: metadata-1.9.0, allure-pytest-2.8.16, html-2.1.1 collected 1 item har/postman_echo_post_form_test.py . [100%] ======================================================================= 1 passed in 2.60s ======================================================================= $ pytest har/postman_echo_post_form_test.py ====================================================================== test session starts ====================================================================== platform darwin -- Python 3.7.5, pytest-5.4.2, py-1.8.1, pluggy-0.13.1 rootdir: /Users/debugtalk/Desktop/demo plugins: metadata-1.9.0, allure-pytest-2.8.16, html-2.1.1 collected 1 item har/postman_echo_post_form_test.py . [100%] ================================================================= 1 passed, 1 warning in 4.11s ==================================================================","title":"\u751f\u6210\u6d4b\u8bd5\u7528\u4f8b(pytest)"},{"location":"user_guide/record%26generate%20testcase/#yamljson","text":"\u5f53\u7136\uff0c\u4f60\u4e5f\u53ef\u4ee5\u751f\u6210 YAML/JSON \u6d4b\u8bd5\u7528\u4f8b\u3002 \u53ea\u9700\u8981\u5728 har2case \u547d\u4ee4\u540e \u6dfb\u52a0 -2y/--to-yml \u6216 -2j/--to-json \u3002 $ har2case har/postman-echo-post-form.har -2j 2020-06-15 15:32:02.955 | INFO | httprunner.ext.har2case.core:gen_testcase:332 - Start to generate testcase from har/postman-echo-post-form.har 2020-06-15 15:32:02.955 | INFO | httprunner.ext.har2case.core:_make_testcase:323 - Extract info from HAR file and prepare for testcase. 2020-06-15 15:32:02.958 | INFO | httprunner.ext.har2case.utils:dump_json:122 - dump testcase to JSON format. 2020-06-15 15:32:02.959 | INFO | httprunner.ext.har2case.utils:dump_json:131 - Generate JSON testcase successfully: har/postman-echo-post-form.json 2020-06-15 15:32:02.959 | INFO | httprunner.ext.har2case.core:gen_testcase:353 - generated testcase: har/postman-echo-post-form.json { \"config\": { \"name\": \"testcase description\", \"variables\": {}, \"verify\": false }, \"teststeps\": [ { \"name\": \"/get\", \"request\": { \"url\": \"https://postman-echo.com/get\", \"params\": { \"foo1\": \"bar1\", \"foo2\": \"bar2\" }, \"method\": \"GET\", \"cookies\": { \"sails.sid\": \"s%3AQG_EVeNRw8k1xxZ6v_SG401VTpmJDSRu.fTAGx3JnZUT7S0c2%2FrD9cxUhQemIsm78nifYZYHpPCU\" }, \"headers\": { \"User-Agent\": \"PostmanRuntime/7.24.1\", \"Accept\": \"*/*\", \"Cache-Control\": \"no-cache\", \"Postman-Token\": \"6606343b-10e5-4165-a89f-6c301b762ce0\", \"Host\": \"postman-echo.com\", \"Accept-Encoding\": \"gzip, deflate, br\", \"Connection\": \"keep-alive\", \"Cookie\": \"sails.sid=s%3AQG_EVeNRw8k1xxZ6v_SG401VTpmJDSRu.fTAGx3JnZUT7S0c2%2FrD9cxUhQemIsm78nifYZYHpPCU\" } }, \"validate\": [ { \"eq\": [ \"status_code\", 200 ] }, { \"eq\": [ \"headers.Content-Type\", \"application/json; charset=utf-8\" ] }, { \"eq\": [ \"body.url\", \"https://postman-echo.com/get?foo1=bar1&foo2=bar2\" ] } ] }, { \"name\": \"/post\", \"request\": { \"url\": \"https://postman-echo.com/post\", \"method\": \"POST\", \"cookies\": { \"sails.sid\": \"s%3AQG_EVeNRw8k1xxZ6v_SG401VTpmJDSRu.fTAGx3JnZUT7S0c2%2FrD9cxUhQemIsm78nifYZYHpPCU\" }, \"headers\": { \"User-Agent\": \"PostmanRuntime/7.24.1\", \"Accept\": \"*/*\", \"Cache-Control\": \"no-cache\", \"Postman-Token\": \"3e408e9d-25ca-4b31-b04b-7f4898a8cd49\", \"Host\": \"postman-echo.com\", \"Accept-Encoding\": \"gzip, deflate, br\", \"Connection\": \"keep-alive\", \"Content-Type\": \"application/x-www-form-urlencoded\", \"Content-Length\": \"19\", \"Cookie\": \"sails.sid=s%3AQG_EVeNRw8k1xxZ6v_SG401VTpmJDSRu.fTAGx3JnZUT7S0c2%2FrD9cxUhQemIsm78nifYZYHpPCU\" }, \"data\": { \"foo1\": \"bar1\", \"foo2\": \"bar2\" } }, \"validate\": [ { \"eq\": [ \"status_code\", 200 ] }, { \"eq\": [ \"headers.Content-Type\", \"application/json; charset=utf-8\" ] }, { \"eq\": [ \"body.data\", \"\" ] }, { \"eq\": [ \"body.url\", \"https://postman-echo.com/post\" ] } ] } ] } YAML/JSON \u7528\u4f8b\u548c pytest \u7528\u4f8b\u6587\u4ef6\u542b\u6709\u76f8\u540c\u7684\u4fe1\u606f\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528 hrun \u8fd0\u884c\u3002 $ hrun har/postman-echo-post-form.json 2020-06-15 15:37:15.621 | INFO | httprunner.loader:load_dot_env_file:130 - Loading environment variables from /Users/debugtalk/Desktop/demo/.env 2020-06-15 15:37:15.622 | DEBUG | httprunner.utils:set_os_environ:32 - Set OS environment variable: USERNAME 2020-06-15 15:37:15.622 | DEBUG | httprunner.utils:set_os_environ:32 - Set OS environment variable: PASSWORD 2020-06-15 15:37:15.623 | INFO | httprunner.make:make_testcase:310 - start to make testcase: /Users/debugtalk/Desktop/demo/har/postman-echo-post-form.json 2020-06-15 15:37:15.625 | INFO | httprunner.make:make_testcase:383 - generated testcase: /Users/debugtalk/Desktop/demo/har/postman_echo_post_form_test.py 2020-06-15 15:37:15.625 | INFO | httprunner.make:format_pytest_with_black:147 - format pytest cases with black ... reformatted /Users/debugtalk/Desktop/demo/har/postman_echo_post_form_test.py All done! \u2728 \ud83c\udf70 \u2728 1 file reformatted, 1 file left unchanged. 2020-06-15 15:37:15.962 | INFO | httprunner.cli:main_run:56 - start to run tests with pytest. HttpRunner version: 3.0.12 ====================================================================== test session starts ====================================================================== platform darwin -- Python 3.7.5, pytest-5.4.2, py-1.8.1, pluggy-0.13.1 rootdir: /Users/debugtalk/Desktop/demo plugins: metadata-1.9.0, allure-pytest-2.8.16, html-2.1.1 collected 1 item har/postman_echo_post_form_test.py . [100%] ======================================================================= 1 passed in 2.03s =======================================================================","title":"\u751f\u6210\u6d4b\u8bd5\u7528\u4f8b(YAML/JSON)"},{"location":"user_guide/run_load_test/","text":"\u6267\u884c\u538b\u529b\u6d4b\u8bd5 HttpRunner3.1.0\u96c6\u6210\u6027\u80fd\u6d4b\u8bd5 \u901a\u8fc7\u91cd\u590d\u4f7f\u7528 Locust \uff0c\u60a8\u53ef\u4ee5\u8fdb\u884c\u8d1f\u8f7d\u6d4b\u8bd5\uff0c\u800c\u65e0\u9700\u8fdb\u884c\u989d\u5916\u7684\u5de5\u4f5c\u3002 $ locusts -V locust 1.0.3 \u4e3a\u4e86\u5145\u5206\u5229\u7528\u5b83\u4eec\uff0c\u60a8\u53ef\u4ee5\u8fd0\u884clocusts -h\u6765\u67e5\u770b\u5e2e\u52a9\uff0c\u5e76\u4e14\u60a8\u4f1a\u53d1\u73b0\u5b83\u4e0elocust -h\u76f8\u540c\u3002 \u542f\u52a8locust \u552f\u4e00\u7684\u533a\u522b\u662f -f /-locustfile \u53c2\u6570\u3002 \u5f53\u4f7f\u7528 YAML/JSON \u6d4b\u8bd5\u7528\u4f8b\u6587\u4ef6\u6307\u5b9a-f\u65f6\uff0c\u5b83\u5c06\u9996\u5148\u8f6c\u6362\u4e3apytest\uff0c\u7136\u540e\u4f7f\u7528HttpRunner\u7684\u5185\u7f6elocustfile\uff08httprunner/ext/locust/locustfile.py\uff09\u8fd0\u884c\u8d1f\u8f7d\u6d4b\u8bd5\u3002 $ locusts -f examples/postman_echo/request_methods/request_with_variables.yml 2020-06-18 18:14:29.877 | INFO | httprunner.make:make_testcase:317 - start to make testcase: /Users/debugtalk/MyProjects/HttpRunner-dev/HttpRunner/examples/postman_echo/request_methods/request_with_variables.yml 2020-06-18 18:14:29.878 | INFO | httprunner.make:make_testcase:390 - generated testcase: /Users/debugtalk/MyProjects/HttpRunner-dev/HttpRunner/examples/postman_echo/request_methods/request_with_variables_test.py 2020-06-18 18:14:29.878 | INFO | httprunner.make:format_pytest_with_black:154 - format pytest cases with black ... reformatted /Users/debugtalk/MyProjects/HttpRunner-dev/HttpRunner/examples/postman_echo/request_methods/request_with_variables_test.py All done! \u2728 \ud83c\udf70 \u2728 1 file reformatted, 1 file left unchanged. [2020-06-18 18:14:30,241] LeodeMacBook-Pro.local/INFO/locust.main: Starting web interface at http://:8089 [2020-06-18 18:14:30,249] LeodeMacBook-Pro.local/INFO/locust.main: Starting Locust 1.0.3 \u6ce8\u610f\u4e8b\u9879 YAML\u6027\u80fd\u6d4b\u8bd5\u811a\u672c\uff0c\u5f53\u4f7f\u7528locusts\u6267\u884c\u6027\u80fd\u6d4b\u8bd5\u65f6\uff0cconfig \u4e2d parameters\u4e2d\u7684\u53d8\u91cf\u9700\u8981\u5728variables\u58f0\u660e\uff0c\u5426\u5219\u4f1a\u53d1\u751fError\uff1a\u53c2\u6570\u627e\u4e0d\u5230\u3002 locust\u6240\u6709\u529f\u80fd \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528Locust\u7684\u6240\u6709\u529f\u80fd\u3002 $ locusts -h Usage: locust [OPTIONS] [UserClass ...] Common options: -h, --help show this help message and exit -f LOCUSTFILE, --locustfile LOCUSTFILE Python module file to import, e.g. '../other.py'. Default: locustfile --config CONFIG Config file path -H HOST, --host HOST Host to load test in the following format: http://10.21.32.33 -u NUM_USERS, --users NUM_USERS Number of concurrent Locust users. Only used together with --headless -r HATCH_RATE, --hatch-rate HATCH_RATE The rate per second in which users are spawned. Only used together with --headless -t RUN_TIME, --run-time RUN_TIME Stop after the specified amount of time, e.g. (300s, 20m, 3h, 1h30m, etc.). Only used together with --headless -l, --list Show list of possible User classes and exit Web UI options: --web-host WEB_HOST Host to bind the web interface to. Defaults to '*' (all interfaces) --web-port WEB_PORT, -P WEB_PORT Port on which to run web host --headless Disable the web interface, and instead start the load test immediately. Requires -u and -t to be specified. --web-auth WEB_AUTH Turn on Basic Auth for the web interface. Should be supplied in the following format: username:password --tls-cert TLS_CERT Optional path to TLS certificate to use to serve over HTTPS --tls-key TLS_KEY Optional path to TLS private key to use to serve over HTTPS Master options: Options for running a Locust Master node when running Locust distributed. A Master node need Worker nodes that connect to it before it can run load tests. --master Set locust to run in distributed mode with this process as master --master-bind-host MASTER_BIND_HOST Interfaces (hostname, ip) that locust master should bind to. Only used when running with --master. Defaults to * (all available interfaces). --master-bind-port MASTER_BIND_PORT Port that locust master should bind to. Only used when running with --master. Defaults to 5557. --expect-workers EXPECT_WORKERS How many workers master should expect to connect before starting the test (only when --headless used). Worker options: Options for running a Locust Worker node when running Locust distributed. Only the LOCUSTFILE (-f option) need to be specified when starting a Worker, since other options such as -u, -r, -t are specified on the Master node. --worker Set locust to run in distributed mode with this process as worker --master-host MASTER_HOST Host or IP address of locust master for distributed load testing. Only used when running with --worker. Defaults to 127.0.0.1. --master-port MASTER_PORT The port to connect to that is used by the locust master for distributed load testing. Only used when running with --worker. Defaults to 5557. Tag options: Locust tasks can be tagged using the @tag decorator. These options let specify which tasks to include or exclude during a test. -T [TAG [TAG ...]], --tags [TAG [TAG ...]] List of tags to include in the test, so only tasks with any matching tags will be executed -E [TAG [TAG ...]], --exclude-tags [TAG [TAG ...]] List of tags to exclude from the test, so only tasks with no matching tags will be executed Request statistics options: --csv CSV_PREFIX Store current request stats to files in CSV format. Setting this option will generate three files: [CSV_PREFIX]_stats.csv, [CSV_PREFIX]_stats_history.csv and [CSV_PREFIX]_failures.csv --csv-full-history Store each stats entry in CSV format to _stats_history.csv file --print-stats Print stats in the console --only-summary Only print the summary stats --reset-stats Reset statistics once hatching has been completed. Should be set on both master and workers when running in distributed mode Logging options: --skip-log-setup Disable Locust's logging setup. Instead, the configuration is provided by the Locust test or Python defaults. --loglevel LOGLEVEL, -L LOGLEVEL Choose between DEBUG/INFO/WARNING/ERROR/CRITICAL. Default is INFO. --logfile LOGFILE Path to log file. If not set, log will go to stdout/stderr Step load options: --step-load Enable Step Load mode to monitor how performance metrics varies when user load increases. Requires --step-users and --step-time to be specified. --step-users STEP_USERS User count to increase by step in Step Load mode. Only used together with --step-load --step-time STEP_TIME Step duration in Step Load mode, e.g. (300s, 20m, 3h, 1h30m, etc.). Only used together with --step-load Other options: --show-task-ratio Print table of the User classes' task execution ratio --show-task-ratio-json Print json data of the User classes' task execution ratio --version, -V Show program's version number and exit --exit-code-on-error EXIT_CODE_ON_ERROR Sets the process exit code to use when a test result contain any failure or error -s STOP_TIMEOUT, --stop-timeout STOP_TIMEOUT Number of seconds to wait for a simulated user to complete any executing task before exiting. Default is to terminate immediately. This parameter only needs to be specified for the master process when running Locust distributed. User classes: UserClass Optionally specify which User classes that should be used (available User classes can be listed with -l or --list)","title":"\u6267\u884c\u6027\u80fd\u6d4b\u8bd5"},{"location":"user_guide/run_load_test/#_1","text":"HttpRunner3.1.0\u96c6\u6210\u6027\u80fd\u6d4b\u8bd5 \u901a\u8fc7\u91cd\u590d\u4f7f\u7528 Locust \uff0c\u60a8\u53ef\u4ee5\u8fdb\u884c\u8d1f\u8f7d\u6d4b\u8bd5\uff0c\u800c\u65e0\u9700\u8fdb\u884c\u989d\u5916\u7684\u5de5\u4f5c\u3002 $ locusts -V locust 1.0.3 \u4e3a\u4e86\u5145\u5206\u5229\u7528\u5b83\u4eec\uff0c\u60a8\u53ef\u4ee5\u8fd0\u884clocusts -h\u6765\u67e5\u770b\u5e2e\u52a9\uff0c\u5e76\u4e14\u60a8\u4f1a\u53d1\u73b0\u5b83\u4e0elocust -h\u76f8\u540c\u3002","title":"\u6267\u884c\u538b\u529b\u6d4b\u8bd5"},{"location":"user_guide/run_load_test/#locust","text":"\u552f\u4e00\u7684\u533a\u522b\u662f -f /-locustfile \u53c2\u6570\u3002 \u5f53\u4f7f\u7528 YAML/JSON \u6d4b\u8bd5\u7528\u4f8b\u6587\u4ef6\u6307\u5b9a-f\u65f6\uff0c\u5b83\u5c06\u9996\u5148\u8f6c\u6362\u4e3apytest\uff0c\u7136\u540e\u4f7f\u7528HttpRunner\u7684\u5185\u7f6elocustfile\uff08httprunner/ext/locust/locustfile.py\uff09\u8fd0\u884c\u8d1f\u8f7d\u6d4b\u8bd5\u3002 $ locusts -f examples/postman_echo/request_methods/request_with_variables.yml 2020-06-18 18:14:29.877 | INFO | httprunner.make:make_testcase:317 - start to make testcase: /Users/debugtalk/MyProjects/HttpRunner-dev/HttpRunner/examples/postman_echo/request_methods/request_with_variables.yml 2020-06-18 18:14:29.878 | INFO | httprunner.make:make_testcase:390 - generated testcase: /Users/debugtalk/MyProjects/HttpRunner-dev/HttpRunner/examples/postman_echo/request_methods/request_with_variables_test.py 2020-06-18 18:14:29.878 | INFO | httprunner.make:format_pytest_with_black:154 - format pytest cases with black ... reformatted /Users/debugtalk/MyProjects/HttpRunner-dev/HttpRunner/examples/postman_echo/request_methods/request_with_variables_test.py All done! \u2728 \ud83c\udf70 \u2728 1 file reformatted, 1 file left unchanged. [2020-06-18 18:14:30,241] LeodeMacBook-Pro.local/INFO/locust.main: Starting web interface at http://:8089 [2020-06-18 18:14:30,249] LeodeMacBook-Pro.local/INFO/locust.main: Starting Locust 1.0.3","title":"\u542f\u52a8locust"},{"location":"user_guide/run_load_test/#_2","text":"YAML\u6027\u80fd\u6d4b\u8bd5\u811a\u672c\uff0c\u5f53\u4f7f\u7528locusts\u6267\u884c\u6027\u80fd\u6d4b\u8bd5\u65f6\uff0cconfig \u4e2d parameters\u4e2d\u7684\u53d8\u91cf\u9700\u8981\u5728variables\u58f0\u660e\uff0c\u5426\u5219\u4f1a\u53d1\u751fError\uff1a\u53c2\u6570\u627e\u4e0d\u5230\u3002","title":"\u6ce8\u610f\u4e8b\u9879"},{"location":"user_guide/run_load_test/#locust_1","text":"\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528Locust\u7684\u6240\u6709\u529f\u80fd\u3002 $ locusts -h Usage: locust [OPTIONS] [UserClass ...] Common options: -h, --help show this help message and exit -f LOCUSTFILE, --locustfile LOCUSTFILE Python module file to import, e.g. '../other.py'. Default: locustfile --config CONFIG Config file path -H HOST, --host HOST Host to load test in the following format: http://10.21.32.33 -u NUM_USERS, --users NUM_USERS Number of concurrent Locust users. Only used together with --headless -r HATCH_RATE, --hatch-rate HATCH_RATE The rate per second in which users are spawned. Only used together with --headless -t RUN_TIME, --run-time RUN_TIME Stop after the specified amount of time, e.g. (300s, 20m, 3h, 1h30m, etc.). Only used together with --headless -l, --list Show list of possible User classes and exit Web UI options: --web-host WEB_HOST Host to bind the web interface to. Defaults to '*' (all interfaces) --web-port WEB_PORT, -P WEB_PORT Port on which to run web host --headless Disable the web interface, and instead start the load test immediately. Requires -u and -t to be specified. --web-auth WEB_AUTH Turn on Basic Auth for the web interface. Should be supplied in the following format: username:password --tls-cert TLS_CERT Optional path to TLS certificate to use to serve over HTTPS --tls-key TLS_KEY Optional path to TLS private key to use to serve over HTTPS Master options: Options for running a Locust Master node when running Locust distributed. A Master node need Worker nodes that connect to it before it can run load tests. --master Set locust to run in distributed mode with this process as master --master-bind-host MASTER_BIND_HOST Interfaces (hostname, ip) that locust master should bind to. Only used when running with --master. Defaults to * (all available interfaces). --master-bind-port MASTER_BIND_PORT Port that locust master should bind to. Only used when running with --master. Defaults to 5557. --expect-workers EXPECT_WORKERS How many workers master should expect to connect before starting the test (only when --headless used). Worker options: Options for running a Locust Worker node when running Locust distributed. Only the LOCUSTFILE (-f option) need to be specified when starting a Worker, since other options such as -u, -r, -t are specified on the Master node. --worker Set locust to run in distributed mode with this process as worker --master-host MASTER_HOST Host or IP address of locust master for distributed load testing. Only used when running with --worker. Defaults to 127.0.0.1. --master-port MASTER_PORT The port to connect to that is used by the locust master for distributed load testing. Only used when running with --worker. Defaults to 5557. Tag options: Locust tasks can be tagged using the @tag decorator. These options let specify which tasks to include or exclude during a test. -T [TAG [TAG ...]], --tags [TAG [TAG ...]] List of tags to include in the test, so only tasks with any matching tags will be executed -E [TAG [TAG ...]], --exclude-tags [TAG [TAG ...]] List of tags to exclude from the test, so only tasks with no matching tags will be executed Request statistics options: --csv CSV_PREFIX Store current request stats to files in CSV format. Setting this option will generate three files: [CSV_PREFIX]_stats.csv, [CSV_PREFIX]_stats_history.csv and [CSV_PREFIX]_failures.csv --csv-full-history Store each stats entry in CSV format to _stats_history.csv file --print-stats Print stats in the console --only-summary Only print the summary stats --reset-stats Reset statistics once hatching has been completed. Should be set on both master and workers when running in distributed mode Logging options: --skip-log-setup Disable Locust's logging setup. Instead, the configuration is provided by the Locust test or Python defaults. --loglevel LOGLEVEL, -L LOGLEVEL Choose between DEBUG/INFO/WARNING/ERROR/CRITICAL. Default is INFO. --logfile LOGFILE Path to log file. If not set, log will go to stdout/stderr Step load options: --step-load Enable Step Load mode to monitor how performance metrics varies when user load increases. Requires --step-users and --step-time to be specified. --step-users STEP_USERS User count to increase by step in Step Load mode. Only used together with --step-load --step-time STEP_TIME Step duration in Step Load mode, e.g. (300s, 20m, 3h, 1h30m, etc.). Only used together with --step-load Other options: --show-task-ratio Print table of the User classes' task execution ratio --show-task-ratio-json Print json data of the User classes' task execution ratio --version, -V Show program's version number and exit --exit-code-on-error EXIT_CODE_ON_ERROR Sets the process exit code to use when a test result contain any failure or error -s STOP_TIMEOUT, --stop-timeout STOP_TIMEOUT Number of seconds to wait for a simulated user to complete any executing task before exiting. Default is to terminate immediately. This parameter only needs to be specified for the master process when running Locust distributed. User classes: UserClass Optionally specify which User classes that should be used (available User classes can be listed with -l or --list)","title":"locust\u6240\u6709\u529f\u80fd"},{"location":"user_guide/run_testcase/","text":"\u8fd0\u884c\u6d4b\u8bd5\u7528\u4f8b \u6d4b\u8bd5\u7528\u4f8b\u51c6\u5907\u597d\u540e\uff0c\u8fd0\u884c hrun \u6267\u884c\u6d4b\u8bd5\u7528\u4f8b\u3002 \u6ce8\u610f\uff1a hrun \u662f httprunner run \u7684\u7f29\u5199\uff0c\u4ed6\u4eec\u529f\u80fd\u4e00\u6837\u3002 hrun = httprunner run \u8fd0\u884c\u7528\u4f8b\u7684\u5404\u79cd\u65b9\u5f0f \uff081\uff09\u8fd0\u884c\u6307\u5b9a\u8def\u5f84\u7684\u7528\u4f8b hrun path/to/testcase1 \uff082\uff09\u6307\u5b9a\u591a\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u8def\u5f84\u6267\u884c hrun path/to/testcase1 path/to/testcase2 \uff083\uff09\u8fd0\u884c\u6d4b\u8bd5\u9879\u76ee\u4e2d\u6240\u6709\u6d4b\u8bd5\u7528\u4f8b \u6307\u5b9a\u6d4b\u8bd5\u9879\u76ee\u7684\u7edd\u5bf9\u8def\u5f84 hrun path/to/testcase_folder/ \u8fd0\u884cYAML/JSON\u683c\u5f0f\u7684\u6d4b\u8bd5\u7528\u4f8b \u5982\u679c\u6d4b\u8bd5\u7528\u4f8b\u683c\u5f0f\u662fYAML\u6216JSON\uff0c hrun \u5148\u5c06YAML/JSON\u8f6c\u4e3apytest(python)\u683c\u5f0f\uff0c\u7136\u540e\u518d\u8fd0\u884cpytest\u3002 \u76f8\u5f53\u4e8e\uff1a hrun = make + pytest \u5bf9\u4e8e\u5927\u591a\u6570\u7528\u4f8b\uff0c\u751f\u6210\u7684pytest\u6587\u4ef6\u548cYAML/JSON\u4fdd\u5b58\u5728\u76f8\u540c\u76ee\u5f55\u4e0b\u3002\u751f\u6210\u7684pytest\u7528\u4f8b\u540d\u589e\u52a0 _test \u540e\u7f00\uff0c\u4e14 .yml/yaml/.json \u66ff\u6362\u4e3a .py \u3002 /path/to/example.yml => /path/to/example_test.py \u7136\u800c\uff0c\u5982\u679c\u6d4b\u8bd5\u7528\u4f8b\u76ee\u5f55\u540d\u6216\u7528\u4f8b\u6587\u4ef6\u540d\u5305\u542b . - \u7a7a\u683c \u8fd9\u4e9b\u5b57\u7b26\uff0c\u8fd9\u4e9b\u5b57\u7b26\u5c06\u88ab _ \u66ff\u6362\uff0c\u4ee5\u907f\u514dpython\u7c7b\u4e2d\u7528\u4f8b\u5f15\u7528\u65f6\u7684\u8bed\u6cd5\u9519\u8bef\u3002 \u800c\u4e14\uff0c\u4ee5\u6570\u5b57\u5f00\u5934\u7684\u76ee\u5f55\u548c\u6587\u4ef6\u540d\uff0c\u5c06\u6dfb\u52a0 T \u524d\u7f00\uff0c\u56e0\u4e3apython\u6a21\u5757\u548c\u7c7b\u540d\u4e0d\u80fd\u4ee5\u6570\u5b57\u5f00\u5934\u3002 path 1/a.b-2/3.yml => path_1/a_b_2/T3_test.py \u8fd0\u884cpytest\u7528\u4f8b \u5f53\u60f3\u8fd0\u884cpytest\u683c\u5f0f\u7528\u4f8b \u6216 YAML/JSON\u8f6c\u6362\u540e\u7684pytest\u7528\u4f8b\uff0c hrun \u548c pytest \u90fd\u53ef\u4ee5\u4f7f\u7528\u3002 \u9700\u8981\u8bb0\u4f4f\u7684\u662f\uff0c hrun \u53ea\u5305\u88c5\u4e86 pytest \uff0c\u6240\u4ee5 pytest \u7684\u529f\u80fd\u90fd\u53ef\u4ee5\u5728 hrun \u4e2d\u4f7f\u7528\u3002 $ hrun -h usage: hrun [options] [file_or_dir] [file_or_dir] [...] positional arguments: file_or_dir general: -k EXPRESSION \u4ec5\u8fd0\u884c\u4e0e\u7ed9\u5b9a\u5b57\u7b26\u4e32\u8868\u8fbe\u5f0f\u5339\u914d\u7684\u6d4b\u8bd5\u3002\u8868\u8fbe\u5f0f\u662fpython\u53ef\u8bc6\u522b\u7684\u8868\u8fbe\u5f0f\uff0c\u5176\u4e2d\u6240\u6709\u540d\u79f0\u5747\u4e3a\u4e0e\u6d4b\u8bd5\u6587\u4ef6\u540d\u79f0\u53ca\u5176\u7236\u7c7b\u8fdb\u884c\u5b50\u5b57\u7b26\u4e32\u5339\u914d\u3002 \u4f8b\u5982\uff1a`-k 'test_method or test_other'` \u5339\u914d\u6240\u6709\u6d4b\u8bd5\u65b9\u6cd5\u540d\u548c\u7c7b\u540d\u5305\u542b'test_method' \u6216 'test_other'\u7684\u7528\u4f8b\u3002 `-k 'not test_method'` \u5339\u914d\u540d\u79f0\u4e2d\u4e0d\u5305\u542b'test_method'\u7684\u7c7b\u3002 `-k 'not test_method and not test_other'` \u6d88\u9664\u5339\u914d\u9879\u3002 \u53e6\u5916\uff0c\u8fd8\u8fd0\u884c\uff0c\u5728\u5176\u4ed6\u7684\u5173\u952e\u5b57\u5339\u914d\u4e2d\uff0c\u7c7b\u548c\u65b9\u6cd5\u540d\u6210\u5305\u542b\u7684\uff0c\u4ee5\u53ca\u76f4\u63a5\u4e3a\u5176\u5206\u914d\u540d\u79f0\u7684\u51fd\u6570\u3002 \u5339\u914d\u4e0d\u533a\u5206\u5927\u5c0f\u5199\u3002 -m MARKEXPR \u53ea\u8fd0\u884c\u5339\u914d\u7ed9\u5b9a\u8868\u8fbe\u5f0f\u5339\u914d\u7684\u7528\u4f8b\u3002 \u4f8b\u5982: -m 'mark1 and not mark2'. --markers \u663e\u793a\u6807\u8bb0\uff08\u5185\u7f6e\u6807\u8bb0\uff0c\u63d2\u4ef6\u6807\u8bb0\u548c\u53ea\u8fd0\u884c\u4e00\u6b21\u6807\u8bb0\uff09 -x, --exitfirst \u9047\u5230error\u6216fail test\u7acb\u5373\u9000\u51fa. --maxfail=num \u5728\u7b2c\u4e00\u4e2a\u5931\u8d25\u7528\u4f8b\u6216\u9519\u8bef\u540e\u9000\u51fa\u3002 --strict-markers, --strict \u672a\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\"\u6807\u8bb0\"\u90e8\u5206\u6ce8\u518c\u7684\u6807\u8bb0\u4f1a\u5f15\u53d1\u9519\u8bef\u3002 -c file \u4ece'file'\u52a0\u8f7d\u914d\u7f6e\uff0c\u800c\u4e0d\u662f\u52a0\u8f7d\u9690\u85cf\u7684\u914d\u7f6e\u6587\u4ef6\u3002 --continue-on-collection-errors \u5373\u4f7f\u53d1\u751f\u9519\u8bef\uff0c\u4e5f\u5f3a\u5236\u7ee7\u7eed\u6267\u884c\u6d4b\u8bd5\u3002 --rootdir=ROOTDIR \u5b9a\u4e49\u6d4b\u8bd5\u9879\u76ee\u7684root\u76ee\u5f55. \u53ef\u4ee5\u662f\u76f8\u5bf9\u8def\u5f84\uff1a'root_dir', './root_dir', 'root_dir/another_dir/'; \u7edd\u5bf9\u8def\u5f84: '/home/user/root_dir'; \u5305\u542b\u53d8\u91cf\u7684\u8def\u5f84: '$HOME/root_dir'. --fixtures, --funcargs \u663e\u793a\u53ef\u7528\u7684fixtures, \u6309fixture\u540d\u79f0\u6392\u5e8f (\u4ee5`_`\u5f00\u5934\u7684fixture\uff0c\u53ea\u6709\u6dfb\u52a0`-v`\u65f6\u624d\u663e\u793a) --fixtures-per-test \u6bcf\u6b21\u6d4b\u8bd5\u90fd\u663e\u793afixtures --import-mode={prepend,append} \u5f53import\u6d4b\u8bd5\u6a21\u5757\u65f6, prepend/append\u5230\u7cfb\u7edf\u73af\u5883\u53d8\u91cf\u4e2d\uff0c\u9ed8\u8ba4\u524d\u7f6e\u5230\u7cfb\u7edf\u73af\u5883\u53d8\u91cf\u4e2d\u3002 --pdb \u5f53\u51fa\u73b0error\u6216\u5f3a\u5236\u65ad\u5f00\u65f6\uff0c\u542f\u52a8\u4ea4\u4e92\u5f0fpython\u8c03\u8bd5\u5668. --pdbcls=modulename:classname \u9488\u5bf9\u9519\u8bef\u542f\u52a8\u81ea\u5b9a\u4e49\u4ea4\u4e92\u5f0fpython\u8c03\u8bd5\u5668. \u4f8b\u5982: --pdbcls=IPython.terminal.debugger:TerminalPdb --trace \u6bcf\u6b21\u8fd0\u884c\u6d4b\u8bd5\u65f6\u7acb\u5373\u8df3\u51fa --capture=method \u6bcf\u6b21\u6d4b\u8bd5\u90fd\u6355\u83b7\u65b9\u6cd5: fd|sys|no|tee-sys\u7684\u5176\u4e2d\u4e4b\u4e00\u3002 -s --capture=no\u7684\u5feb\u6377\u6a21\u5f0f. --runxfail \u62a5\u544axfail\u6807\u8bb0\u7684\u6d4b\u8bd5\u7ed3\u679c\uff0c\u5c31\u50cf\u6ca1\u6807\u8bb0\u8fc7\u4e00\u6837\u3002 --lf, --last-failed \u4ec5\u91cd\u65b0\u8fd0\u884c\u6700\u540e\u4e00\u6b21\u8fd0\u884c\u5931\u8d25\u7684\u6d4b\u8bd5\uff08\u5982\u679c\u6ca1\u6709\u5931\u8d25\u7684\u5219\u5168\u90e8\u91cd\u65b0\u8fd0\u884c\uff09 --ff, --failed-first \u8fd0\u884c\u6240\u6709\u6d4b\u8bd5\uff0c\u4f46\u5148\u8fd0\u884c\u6700\u540e\u7684\u5931\u8d25\u7528\u4f8b\u3002\u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4setup/teardown\u7684\u91cd\u590d\u8fd0\u884c\u3002 --nf, --new-first \u9996\u5148\u8fd0\u884c\u65b0\u7684\u6d4b\u8bd5\u7528\u4f8b\uff0c\u7136\u540e\u5176\u4f59\u6d4b\u8bd5\u7528\u4f8b\u6309\u7167\u6700\u540e\u4e00\u6b21\u4fee\u6539\u65f6\u95f4\u987a\u5e8f\u6267\u884c\u3002 --cache-show=[CACHESHOW] \u663e\u793a\u7f13\u5b58\u5185\u5bb9, \u4e0d\u6267\u884c\u641c\u96c6\u6216\u6d4b\u8bd5. \u53ef\u9009\u53c2\u6570: glob (default: '*'). --cache-clear \u6d4b\u8bd5\u8fd0\u884c\u524d\u6e05\u7a7a\u6240\u6709\u7f13\u5b58. --lfnf={all,none}, --last-failed-no-failures={all,none} \u8fd0\u884c\u6ca1\u6709\u5931\u8d25\u8fc7\u7684\u7528\u4f8b. --sw, --stepwise \u6d4b\u8bd5\u5931\u8d25\u65f6\u9000\u51fa\uff0c\u4e14\u4e0b\u6b21\u8fd0\u884c\u4ece\u6700\u540e\u5931\u8d25\u7684\u7528\u4f8b\u5f00\u59cb\u8fd0\u884c --stepwise-skip \u5ffd\u7565\u7b2c\u4e00\u4e2a\u5931\u8d25\u7684\u6d4b\u8bd5\uff0c\u4e0b\u4e00\u4e2a\u5931\u8d25\u7684\u7528\u4f8b\u51fa\u73b0\u65f6\u505c\u6b62 --allure-severities=SEVERITIES_SET \u4ee5\u9017\u53f7\u5206\u5272\u7684\u4f18\u5148\u7ea7\u540d\u79f0\u5217\u8868. \u53ea\u8fd0\u884c\u6307\u5b9a\u4f18\u5148\u7ea7\u7684\u7528\u4f8b. \u53ef\u9009\u62e9\u7684\u4f18\u5148\u7ea7\u4e3a: blocker, critical, normal, minor, trivial. --allure-epics=EPICS_SET \u4ee5\u9017\u53f7\u5206\u5272\u7684epic\u5217\u8868. \u8fd0\u884c\u5177\u6709\u81f3\u5c11\u4e00\u4e2a\u6307\u5b9a\u6807\u7b7e\u7684\u6d4b\u8bd5\u3002 --allure-features=FEATURES_SET \u4ee5\u9017\u53f7\u5206\u5272\u7684feature\u5217\u8868. \u8fd0\u884c\u5177\u6709\u81f3\u5c11\u4e00\u4e2a\u6307\u5b9a\u6807\u7b7e\u7684\u6d4b\u8bd5\u3002 --allure-stories=STORIES_SET \u4ee5\u9017\u53f7\u5206\u5272\u7684story\u5217\u8868. \u8fd0\u884c\u5177\u6709\u81f3\u5c11\u4e00\u4e2a\u6307\u5b9astory\u7684\u6d4b\u8bd5. --allure-link-pattern=LINK_TYPE:LINK_PATTERN \u6267\u884c\u547d\u4ee4\u65f6\u6307\u5b9a\u77ed\u94fe\u63a5, \u6bd4\u5982Bug\u5730\u5740. \u683c\u5f0f\u4e3apython str.format()\u683c\u5f0f\uff0c\u4f8b\u5982\uff1a`pytest test.py ----allure-link-pattern=issue:http//www.mytesttracker.com/issue/{}`. reporting: --durations=N \u663e\u793a\u6700\u6162\u7684N\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u548csetup (N=0 for all). -v, --verbose \u589e\u52a0\u62a5\u544a\u4fe1\u606f. -q, --quiet \u51cf\u5c11\u62a5\u544a\u4fe1\u606f. --verbosity=VERBOSE \u8bbe\u7f6e\u8be6\u7ec6\u7a0b\u5ea6\uff0c\u9ed8\u8ba4\u662f0\u3002 -r chars \u663e\u793a\u5b57\u7b26\u6307\u5b9a\u7684\u6d4b\u8bd5\u6458\u8981\u4fe1\u606f: (f)ailed, (E)rror, (s)kipped, (x)failed, (X)passed, (p)assed, (P)assed (a)ll except passed (p/P), or (A)ll. \u9ed8\u8ba4\u542f\u7528(w)arnings (see --disable-warnings), 'N' \u7528\u4e8e\u91cd\u7f6e\u5217\u8868 (\u9ed8\u8ba4: 'fE'). --disable-warnings, --disable-pytest-warnings \u7981\u7528\u8b66\u544a\u6458\u8981 -l, --showlocals \u5728\u56de\u6eaf\u4e2d\u663e\u793a\u5c40\u90e8\u53d8\u91cf(\u9ed8\u8ba4\u7981\u6b62). --tb=style \u8ffd\u6eaf\u6253\u5370\u6a21\u5f0f (auto/long/short/line/native/no). --show-capture={no,stdout,stderr,log,all} \u63a7\u5236\u5728\u5931\u8d25\u7684\u6d4b\u8bd5\u4e2d\u5982\u4f55\u663e\u793a\u6355\u83b7\u7684stdout/stderr/log. \u9ed8\u8ba4'all'. --full-trace \u4e0d\u5220\u51cf\u4efb\u4f55\u4fe1\u606f\uff08\u9ed8\u8ba4\u662f\u5220\u51cf\u7684\uff09. --color=color \u5f69\u8272\u7ec8\u7aef\u8f93\u51fa (yes/no/auto). --pastebin=mode \u53d1\u9001\u5931\u8d25\uff5call\u4fe1\u606f\u5230bpaste.net\u670d\u52a1 --junit-xml=path \u5728\u6307\u5b9a\u8def\u5f84\u751f\u6210junit-xml\u62a5\u544a --junit-prefix=str \u5728junit-xml\u8f93\u51fa\u4e2d\u6dfb\u52a0str\u5230\u7c7b\u540d\u524d\u9762 --result-log=path \u53ef\u8bfb\u7ed3\u679c\u65e5\u5fd7\u7684\u5df2\u5f03\u7528\u8def\u5f84 --html=path \u6307\u5b9a\u8def\u5f84\u751f\u6210html\u62a5\u544a --self-contained-html \u521b\u5efa\u4e00\u4e2a\u5305\u542b\u6240\u6709\u5fc5\u9700\u7684\u6837\u5f0f\uff0c\u811a\u672c\u548c\u56fe\u50cf\u7684\u81ea\u5305\u542bhtml\u6587\u4ef6 - \u8fd9\u610f\u5473\u7740\u8be5\u62a5\u544a\u53ef\u80fd\u4e0d\u4f1a\u5448\u73b0\u6216\u5177\u5907CSP\u9650\u5236\u7684\u529f\u80fd (\u89c1\uff1a https://developer.mozilla.org/docs/Web/Security/CSP) --css=path \u5c06\u7ed9\u5b9a\u7684CSS\u6587\u4ef6\u5185\u5bb9\u9644\u52a0\u5230\u62a5\u8868\u6837\u5f0f\u6587\u4ef6\u4e2d\u3002 collection: --collect-only, --co \u4ec5\u6536\u96c6\u6d4b\u8bd5\uff0c\u4e0d\u6267\u884c\u6d4b\u8bd5\u3002 --pyargs \u5c1d\u8bd5\u5c06\u6240\u6709\u53c2\u6570\u89e3\u91ca\u4e3apython\u8f6f\u4ef6\u5305\u3002 --ignore=path \u6536\u96c6\u671f\u95f4\u5ffd\u7565\u6307\u5b9a\u8def\u5f84(\u5141\u8bb8\u591a\u4e2a\u8def\u5f84). --ignore-glob=path \u6536\u96c6\u671f\u95f4\u5ffd\u7565\u8def\u5f84 (\u5141\u8bb8\u591a\u4e2a\u8def\u5f84). --deselect=nodeid_prefix \u5728\u6536\u96c6\u671f\u95f4\u53d6\u6d88\u9009\u62e9\u9879\uff08\u901a\u8fc7\u8282\u70b9id\u524d\u7f00\uff09\uff08\u5141\u8bb8\u591a\u4e2a\uff09 --confcutdir=dir \u4ec5\u52a0\u8f7d\u6307\u5b9a\u76ee\u5f55(conftest.py\u7684\u76f8\u5bf9\u8def\u5f84) --noconftest \u4e0d\u52a0\u8f7d\u4efb\u4f55conftest.py files. --keep-duplicates \u4fdd\u6301\u91cd\u590d\u6d4b\u8bd5 --collect-in-virtualenv \u4e0d\u8981\u5ffd\u7565\u672c\u5730virtualenv\u76ee\u5f55\u4e2d\u7684\u6d4b\u8bd5 --doctest-modules \u5728\u6240\u6709.py\u6a21\u5757\u4e2d\u8fd0\u884cdoctests --doctest-report={none,cdiff,ndiff,udiff,only_first_failure} \u4e3adoctest\u5931\u8d25\u65f6\u7684\u5dee\u5f02\u9009\u62e9\u53e6\u4e00\u79cd\u8f93\u51fa\u683c\u5f0f --doctest-glob=pat doctests\u6587\u4ef6\u5339\u914d\u6a21\u5f0f\uff0c\u9ed8\u8ba4\u503c\uff1atest * .txt --doctest-ignore-import-errors \u5ffd\u7565 doctest ImportErrors --doctest-continue-on-failure \u5bf9\u4e8e\u7ed9\u5b9a\u7684doctest\uff0c\u5728\u7b2c\u4e00\u6b21\u5931\u8d25\u540e\u7ee7\u7eed\u8fd0\u884c \u6d4b\u8bd5\u4f1a\u8bdd\u8c03\u8bd5\u548c\u914d\u7f6e: --basetemp=dir \u6b64\u6d4b\u8bd5\u8fd0\u884c\u7684\u57fa\u672c\u4e34\u65f6\u76ee\u5f55\u3002\uff08\u8b66\u544a\uff1a\u5982\u679c\u5b58\u5728\u6b64\u76ee\u5f55\uff0c\u5219\u5c06\u5176\u5220\u9664\uff09 -V, --version \u663e\u793apytest\u7248\u672c\u548c\u6709\u5173\u63d2\u4ef6\u7684\u4fe1\u606f\u3002 -h, --help \u663e\u793a\u5e2e\u52a9\u6d88\u606f\u548c\u914d\u7f6e\u4fe1\u606f -p name \u5c3d\u65e9\u52a0\u8f7d\u7ed9\u5b9a\u7684\u63d2\u4ef6\u6a21\u5757\u540d\u79f0\u6216\u5165\u53e3\u70b9\uff08\u5141\u8bb8\u591a\u4e2a\uff09. \u4e3a\u907f\u514d\u52a0\u8f7d\u63d2\u4ef6, \u4f7f\u7528`no:` prefix, \u4f8b\u5982. `no:doctest`. --trace-config \u8ddf\u8e2aconftest.py\u6587\u4ef6\u7684\u6ce8\u610f\u4e8b\u9879\u3002 --debug \u5c06\u5185\u90e8\u8ddf\u8e2a\u8c03\u8bd5\u4fe1\u606f\u5b58\u50a8\u5728\u201c pytestdebug.log\u201d\u4e2d\u3002 -o OVERRIDE_INI, --override-ini=OVERRIDE_INI \u4ee5\u201coption = value\u201d\u6837\u5f0f\u8986\u76d6ini\u9009\u9879\uff0c\u4f8b\u5982 `-o xfail_strict = True -o cache_dir = cache` --assert=MODE \u63a7\u5236\u65ad\u8a00\u8c03\u8bd5\u5de5\u5177\u3002 'plain'\u4e0d\u6267\u884c\u4efb\u4f55\u65ad\u8a00\u8c03\u8bd5\u3002 \u201c rewrite\u201d\uff08\u9ed8\u8ba4\uff09\u5728\u5bfc\u5165\u65f6\u91cd\u5199\u6d4b\u8bd5\u6a21\u5757\u4e2d\u7684assert\u8bed\u53e5\uff0c\u4ee5\u63d0\u4f9bassert\u8868\u8fbe\u5f0f\u4fe1\u606f\u3002 --setup-only \u4ec5\u5b89\u88c5fixtures, \u4e0d\u6267\u884c\u6d4b\u8bd5. --setup-show \u6267\u884c\u6d4b\u8bd5\u65f6\u663e\u793afixtures\u7684setup. --setup-plan \u4e0d\u6267\u884c\uff0c\u53ea\u663e\u793a\u5c06\u8981\u6267\u884c\u7684fixture\u548c\u6d4b\u8bd5\u7528\u4f8b pytest-warnings: -W PYTHONWARNINGS, --pythonwarnings=PYTHONWARNINGS set which warnings to report, see -W option of python itself. logging: --no-print-logs disable printing caught logs on failed tests. --log-level=LEVEL level of messages to catch/display. Not set by default, so it depends on the root/parent log handler's effective level, where it is \"WARNING\" by default. --log-format=LOG_FORMAT log format as used by the logging module. --log-date-format=LOG_DATE_FORMAT log date format as used by the logging module. --log-cli-level=LOG_CLI_LEVEL cli logging level. --log-cli-format=LOG_CLI_FORMAT log format as used by the logging module. --log-cli-date-format=LOG_CLI_DATE_FORMAT log date format as used by the logging module. --log-file=LOG_FILE path to a file when logging will be written to. --log-file-level=LOG_FILE_LEVEL log file logging level. --log-file-format=LOG_FILE_FORMAT log format as used by the logging module. --log-file-date-format=LOG_FILE_DATE_FORMAT log date format as used by the logging module. --log-auto-indent=LOG_AUTO_INDENT Auto-indent multiline messages passed to the logging module. Accepts true|on, false|off or an integer. reporting: --alluredir=DIR Generate Allure report in the specified directory (may not exist) --clean-alluredir Clean alluredir folder if it exists --allure-no-capture Do not attach pytest captured logging/stdout/stderr to report custom options: --metadata=key value additional metadata. --metadata-from-json=METADATA_FROM_JSON additional metadata from a json string. [pytest] ini-options in the first pytest.ini|tox.ini|setup.cfg file found: markers (linelist): markers for test functions empty_parameter_set_mark (string): default marker for empty parametersets norecursedirs (args): directory patterns to avoid for recursion testpaths (args): directories to search for tests when no files or directories are given in the command line. usefixtures (args): list of default fixtures to be used with this project python_files (args): glob-style file patterns for Python test module discovery python_classes (args): prefixes or glob names for Python test class discovery python_functions (args): prefixes or glob names for Python test function and method discovery disable_test_id_escaping_and_forfeit_all_rights_to_community_support (bool): disable string escape non-ascii characters, might cause unwanted side effects(use at your own risk) console_output_style (string): console output: \"classic\", or with additional progress information (\"progress\" (percentage) | \"count\"). xfail_strict (bool): default for the strict parameter of xfail markers when not given explicitly (default: False) enable_assertion_pass_hook (bool): Enables the pytest_assertion_pass hook.Make sure to delete any previously generated pyc cache files. junit_suite_name (string): Test suite name for JUnit report junit_logging (string): Write captured log messages to JUnit report: one of no|log|system-out|system-err|out-err|all junit_log_passing_tests (bool): Capture log information for passing tests to JUnit report: junit_duration_report (string): Duration time to report: one of total|call junit_family (string): Emit XML for schema: one of legacy|xunit1|xunit2 doctest_optionflags (args): option flags for doctests doctest_encoding (string): encoding used for doctest files cache_dir (string): cache directory path. filterwarnings (linelist): Each line specifies a pattern for warnings.filterwarnings. Processed after -W/--pythonwarnings. log_print (bool): default value for --no-print-logs log_level (string): default value for --log-level log_format (string): default value for --log-format log_date_format (string): default value for --log-date-format log_cli (bool): enable log display during test run (also known as \"live logging\"). log_cli_level (string): default value for --log-cli-level log_cli_format (string): default value for --log-cli-format log_cli_date_format (string): default value for --log-cli-date-format log_file (string): default value for --log-file log_file_level (string): default value for --log-file-level log_file_format (string): default value for --log-file-format log_file_date_format (string): default value for --log-file-date-format log_auto_indent (string): default value for --log-auto-indent faulthandler_timeout (string): Dump the traceback of all threads if a test takes more than TIMEOUT seconds to finish. Not available on Windows. addopts (args): extra command line options minversion (string): minimally required pytest version render_collapsed (bool): Open the report with all rows collapsed. Useful for very large reports environment variables: PYTEST_ADDOPTS extra command line options PYTEST_PLUGINS comma-separated plugins to load during startup PYTEST_DISABLE_PLUGIN_AUTOLOAD set to disable plugin auto-loading PYTEST_DEBUG set to enable debug tracing of pytest's internals to see available markers type: pytest --markers to see available fixtures type: pytest --fixtures (shown according to specified file_or_dir or current dir if not specified; fixtures with leading '_' are only shown with the '-v' option \u6267\u884c\u65e5\u5fd7 $ hrun examples/postman_echo/request_methods/request_with_functions.yml 2020-06-17 15:39:41.041 | INFO | httprunner.make:make_testcase:317 - start to make testcase: /Users/debugtalk/MyProjects/HttpRunner-dev/HttpRunner/examples/postman_echo/request_methods/request_with_functions.yml 2020-06-17 15:39:41.042 | INFO | httprunner.make:make_testcase:390 - generated testcase: /Users/debugtalk/MyProjects/HttpRunner-dev/HttpRunner/examples/postman_echo/request_methods/request_with_functions_test.py 2020-06-17 15:39:41.042 | INFO | httprunner.make:format_pytest_with_black:154 - format pytest cases with black ... reformatted /Users/debugtalk/MyProjects/HttpRunner-dev/HttpRunner/examples/postman_echo/request_methods/request_with_functions_test.py All done! \u2728 \ud83c\udf70 \u2728 1 file reformatted, 1 file left unchanged. 2020-06-17 15:39:41.315 | INFO | httprunner.cli:main_run:56 - start to run tests with pytest. HttpRunner version: 3.0.13 ====================================================================== test session starts ====================================================================== platform darwin -- Python 3.7.5, pytest-5.4.2, py-1.8.1, pluggy-0.13.1 rootdir: /Users/debugtalk/MyProjects/HttpRunner-dev/HttpRunner plugins: metadata-1.9.0, allure-pytest-2.8.16, html-2.1.1 collected 1 item examples/postman_echo/request_methods/request_with_functions_test.py . [100%] ======================================================================= 1 passed in 2.98s ======================================================================= \u5982\u679c\u4f60\u60f3\u770b\u5230request\u548cresponse\u3001\u63d0\u53d6\u548c\u65ad\u8a00\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u53ef\u4ee5\u589e\u52a0 -s \uff08 --capture=no \u7684\u7f29\u5199\uff09 $ hrun -s examples/postman_echo/request_methods/request_with_functions.yml 2020-06-17 15:42:54.369 | INFO | httprunner.make:make_testcase:317 - start to make testcase: /Users/debugtalk/MyProjects/HttpRunner-dev/HttpRunner/examples/postman_echo/request_methods/request_with_functions.yml 2020-06-17 15:42:54.369 | INFO | httprunner.make:make_testcase:390 - generated testcase: /Users/debugtalk/MyProjects/HttpRunner-dev/HttpRunner/examples/postman_echo/request_methods/request_with_functions_test.py 2020-06-17 15:42:54.370 | INFO | httprunner.make:format_pytest_with_black:154 - format pytest cases with black ... reformatted /Users/debugtalk/MyProjects/HttpRunner-dev/HttpRunner/examples/postman_echo/request_methods/request_with_functions_test.py All done! \u2728 \ud83c\udf70 \u2728 1 file reformatted, 1 file left unchanged. 2020-06-17 15:42:54.699 | INFO | httprunner.cli:main_run:56 - start to run tests with pytest. HttpRunner version: 3.0.13 ====================================================================== test session starts ====================================================================== platform darwin -- Python 3.7.5, pytest-5.4.2, py-1.8.1, pluggy-0.13.1 rootdir: /Users/debugtalk/MyProjects/HttpRunner-dev/HttpRunner plugins: metadata-1.9.0, allure-pytest-2.8.16, html-2.1.1 collected 1 item examples/postman_echo/request_methods/request_with_functions_test.py 2020-06-17 15:42:55.017 | INFO | httprunner.runner:test_start:435 - Start to run testcase: request methods testcase with functions, TestCase ID: cc404c49-000f-485c-b4c1-ac3367a053fe 2020-06-17 15:42:55.018 | INFO | httprunner.runner:__run_step:278 - run step begin: get with params >>>>>> 2020-06-17 15:42:56.326 | DEBUG | httprunner.client:log_print:40 - ================== request details ================== method : GET url : https://postman-echo.com/get?foo1=bar11&foo2=bar21&sum_v=3 headers : { \"User-Agent\": \"HttpRunner/3.0.13\", \"Accept-Encoding\": \"gzip, deflate\", \"Accept\": \"*/*\", \"Connection\": \"keep-alive\", \"HRUN-Request-ID\": \"HRUN-cc404c49-000f-485c-b4c1-ac3367a053fe-775018\", \"Content-Length\": \"2\", \"Content-Type\": \"application/json\" } cookies : {} body : {} 2020-06-17 15:42:56.327 | DEBUG | httprunner.client:log_print:40 - ================== response details ================== status_code : 200 headers : { \"Date\": \"Wed, 17 Jun 2020 07:42:56 GMT\", \"Content-Type\": \"application/json; charset=utf-8\", \"Content-Length\": \"477\", \"Connection\": \"keep-alive\", \"ETag\": \"W/\\\"1dd-2JtBYPcnh8D6fqLz8KFn16Oq1R0\\\"\", \"Vary\": \"Accept-Encoding\", \"set-cookie\": \"sails.sid=s%3A6J_EtUk3nkL_C2xtx-NtAXrlA5wPxEgk.gIO2yBbtvGWIIgQ%2F2mZhMkU669G3F60cvLAPWbwyoGM; Path=/; HttpOnly\" } cookies : { \"sails.sid\": \"s%3A6J_EtUk3nkL_C2xtx-NtAXrlA5wPxEgk.gIO2yBbtvGWIIgQ%2F2mZhMkU669G3F60cvLAPWbwyoGM\" } encoding : utf-8 content_type : application/json; charset=utf-8 body : { \"args\": { \"foo1\": \"bar11\", \"foo2\": \"bar21\", \"sum_v\": \"3\" }, \"headers\": { \"x-forwarded-proto\": \"https\", \"x-forwarded-port\": \"443\", \"host\": \"postman-echo.com\", \"x-amzn-trace-id\": \"Root=1-5ee9c980-d8e98cc72a26ef24f5819ce3\", \"content-length\": \"2\", \"user-agent\": \"HttpRunner/3.0.13\", \"accept-encoding\": \"gzip, deflate\", \"accept\": \"*/*\", \"hrun-request-id\": \"HRUN-cc404c49-000f-485c-b4c1-ac3367a053fe-775018\", \"content-type\": \"application/json\" }, \"url\": \"https://postman-echo.com/get?foo1=bar11&foo2=bar21&sum_v=3\" } 2020-06-17 15:42:56.328 | INFO | httprunner.client:request:203 - status_code: 200, response_time(ms): 1307.33 ms, response_length: 477 bytes 2020-06-17 15:42:56.328 | INFO | httprunner.response:extract:152 - extract mapping: {'foo3': 'bar21'} 2020-06-17 15:42:56.328 | INFO | httprunner.response:validate:209 - assert status_code equal 200(int) ==> pass 2020-06-17 15:42:56.329 | INFO | httprunner.response:validate:209 - assert body.args.foo1 equal bar11(str) ==> pass 2020-06-17 15:42:56.329 | INFO | httprunner.response:validate:209 - assert body.args.sum_v equal 3(str) ==> pass 2020-06-17 15:42:56.329 | INFO | httprunner.response:validate:209 - assert body.args.foo2 equal bar21(str) ==> pass 2020-06-17 15:42:56.330 | INFO | httprunner.runner:__run_step:290 - run step end: get with params <<<<<< <Omit> 2020-06-17 15:42:57.019 | INFO | httprunner.runner:test_start:444 - generate testcase log: /Users/debugtalk/MyProjects/HttpRunner-dev/HttpRunner/examples/postman_echo/logs/cc404c49-000f-485c-b4c1-ac3367a053fe.run.log . ======================================================================= 1 passed in 2.13s ======================================================================= \u6bcf\u4e2a\u7528\u4f8b\u90fd\u4f1a\u751f\u6210\u4e00\u4e2a\u6267\u884clog\uff0c\u4f4d\u7f6e\uff1a <ProjectRootDir>/logs/TestCaseID.run.log. \u6d4b\u8bd5\u7528\u4f8bID\u548cRequest ID \u4e3a\u6392\u9664\u6545\u969c\uff0c\u6bcf\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u5c06\u751f\u6210\u552f\u4e00ID\uff08uuid4\uff09\uff0c\u6bcf\u4e2arequest header\u5c06\u81ea\u52a8\u6dfb\u52a0\u4e00\u4e2a\u5e26\u6709\u6d4b\u8bd5\u7528\u4f8bID\u7684 HRUN-Request-ID HRUN-Request-ID = \"HRUN-<TestCase ID>-<timestamp_six_digits>\" timestamp_six_digits = str(int(time.time() * 1000))[-6:]) \u6362\u53e5\u8bdd\u8bf4\uff0c\u540c\u4e00\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u4e2d\u7684\u6240\u6709request\u6709\u540c\u6837\u7684 HRUN-Request-ID \u524d\u7f00\uff0c\u5e76\u4e14\u6bcf\u4e2a\u8bf7\u6c42\u6709\u552f\u4e00\u7684 HRUN-Request-ID \u540e\u7f00\u3002 Client & Server IP:PORT \u6709\u65f6\uff0c\u8bb0\u5f55\u8fdc\u7a0b\u670d\u52a1\u5668\u7684IP\u548c\u7aef\u53e3\u5bf9\u4e8e\u89e3\u51b3\u95ee\u9898\u7279\u522b\u6709\u7528\uff0c\u5c24\u5176\u662f\u5f53\u6709\u591a\u53f0\u670d\u52a1\u5668\u5e76\u4e14\u6211\u4eec\u8981\u68c0\u67e5\u54ea\u4e00\u53f0\u8fd4\u56de\u9519\u8bef\u65f6\u3002 \u4ece3.0.13\u5f00\u59cb\uff0cHttpRunner\u5c06\u5728\u8c03\u8bd5\u9636\u6bb5\u8bb0\u5f55\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u7aefIP:PORT \u6d4b\u8bd5\u7528\u4f8b\u6458\u8981\uff1a \"address\": { \"client_ip\": \"10.90.205.63\", \"client_port\": 62802, \"server_ip\": \"34.233.204.163\", \"server_port\": 443 }, v2.x\u517c\u5bb9\u6027\u7684\u53c2\u6570 \u9664\u4e86pytest\u7684\u6240\u6709\u53c2\u6570\u5916\uff0chrun\u8fd8\u5177\u6709\u5176\u4ed6\u51e0\u4e2a\u53c2\u6570\u4ee5\u4fdd\u6301\u4e0eHttpRunner v2.x\u7684\u517c\u5bb9\u6027\u3002 --failfast\uff1a\u65e0\u6548\uff0c\u6b64\u53c2\u6570\u5c06\u81ea\u52a8\u5220\u9664 --report-file\uff1a\u6307\u5b9ahtml\u62a5\u544a\u6587\u4ef6\u8def\u5f84\uff0c\u6b64\u53c2\u6570\u5c06\u66ff\u6362\u4e3a--html --self-contained-html\u5e76\u4f7f\u7528pytest-html\u63d2\u4ef6\u751f\u6210html\u62a5\u544a --save-tests\uff1a\u5982\u679c\u8bbe\u7f6e\uff0cHttpRunner v3.x\u5c06\u521b\u5efa\u4e00\u4e2apytest conftest.py\u6587\u4ef6\uff0c\u8be5\u6587\u4ef6\u5305\u542b\u4f1a\u8bdd\u56fa\u5b9a\u88c5\u7f6e\u4ee5\u805a\u5408\u6bcf\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u7684\u6458\u8981\u5e76\u5c06\u5176\u8f6c\u50a8\u5230summary.json","title":"\u8fd0\u884c\u6d4b\u8bd5\u7528\u4f8b"},{"location":"user_guide/run_testcase/#_1","text":"\u6d4b\u8bd5\u7528\u4f8b\u51c6\u5907\u597d\u540e\uff0c\u8fd0\u884c hrun \u6267\u884c\u6d4b\u8bd5\u7528\u4f8b\u3002 \u6ce8\u610f\uff1a hrun \u662f httprunner run \u7684\u7f29\u5199\uff0c\u4ed6\u4eec\u529f\u80fd\u4e00\u6837\u3002 hrun = httprunner run","title":"\u8fd0\u884c\u6d4b\u8bd5\u7528\u4f8b"},{"location":"user_guide/run_testcase/#_2","text":"\uff081\uff09\u8fd0\u884c\u6307\u5b9a\u8def\u5f84\u7684\u7528\u4f8b hrun path/to/testcase1 \uff082\uff09\u6307\u5b9a\u591a\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u8def\u5f84\u6267\u884c hrun path/to/testcase1 path/to/testcase2 \uff083\uff09\u8fd0\u884c\u6d4b\u8bd5\u9879\u76ee\u4e2d\u6240\u6709\u6d4b\u8bd5\u7528\u4f8b \u6307\u5b9a\u6d4b\u8bd5\u9879\u76ee\u7684\u7edd\u5bf9\u8def\u5f84 hrun path/to/testcase_folder/","title":"\u8fd0\u884c\u7528\u4f8b\u7684\u5404\u79cd\u65b9\u5f0f"},{"location":"user_guide/run_testcase/#yamljson","text":"\u5982\u679c\u6d4b\u8bd5\u7528\u4f8b\u683c\u5f0f\u662fYAML\u6216JSON\uff0c hrun \u5148\u5c06YAML/JSON\u8f6c\u4e3apytest(python)\u683c\u5f0f\uff0c\u7136\u540e\u518d\u8fd0\u884cpytest\u3002 \u76f8\u5f53\u4e8e\uff1a hrun = make + pytest \u5bf9\u4e8e\u5927\u591a\u6570\u7528\u4f8b\uff0c\u751f\u6210\u7684pytest\u6587\u4ef6\u548cYAML/JSON\u4fdd\u5b58\u5728\u76f8\u540c\u76ee\u5f55\u4e0b\u3002\u751f\u6210\u7684pytest\u7528\u4f8b\u540d\u589e\u52a0 _test \u540e\u7f00\uff0c\u4e14 .yml/yaml/.json \u66ff\u6362\u4e3a .py \u3002 /path/to/example.yml => /path/to/example_test.py \u7136\u800c\uff0c\u5982\u679c\u6d4b\u8bd5\u7528\u4f8b\u76ee\u5f55\u540d\u6216\u7528\u4f8b\u6587\u4ef6\u540d\u5305\u542b . - \u7a7a\u683c \u8fd9\u4e9b\u5b57\u7b26\uff0c\u8fd9\u4e9b\u5b57\u7b26\u5c06\u88ab _ \u66ff\u6362\uff0c\u4ee5\u907f\u514dpython\u7c7b\u4e2d\u7528\u4f8b\u5f15\u7528\u65f6\u7684\u8bed\u6cd5\u9519\u8bef\u3002 \u800c\u4e14\uff0c\u4ee5\u6570\u5b57\u5f00\u5934\u7684\u76ee\u5f55\u548c\u6587\u4ef6\u540d\uff0c\u5c06\u6dfb\u52a0 T \u524d\u7f00\uff0c\u56e0\u4e3apython\u6a21\u5757\u548c\u7c7b\u540d\u4e0d\u80fd\u4ee5\u6570\u5b57\u5f00\u5934\u3002 path 1/a.b-2/3.yml => path_1/a_b_2/T3_test.py","title":"\u8fd0\u884cYAML/JSON\u683c\u5f0f\u7684\u6d4b\u8bd5\u7528\u4f8b"},{"location":"user_guide/run_testcase/#pytest","text":"\u5f53\u60f3\u8fd0\u884cpytest\u683c\u5f0f\u7528\u4f8b \u6216 YAML/JSON\u8f6c\u6362\u540e\u7684pytest\u7528\u4f8b\uff0c hrun \u548c pytest \u90fd\u53ef\u4ee5\u4f7f\u7528\u3002 \u9700\u8981\u8bb0\u4f4f\u7684\u662f\uff0c hrun \u53ea\u5305\u88c5\u4e86 pytest \uff0c\u6240\u4ee5 pytest \u7684\u529f\u80fd\u90fd\u53ef\u4ee5\u5728 hrun \u4e2d\u4f7f\u7528\u3002 $ hrun -h usage: hrun [options] [file_or_dir] [file_or_dir] [...] positional arguments: file_or_dir general: -k EXPRESSION \u4ec5\u8fd0\u884c\u4e0e\u7ed9\u5b9a\u5b57\u7b26\u4e32\u8868\u8fbe\u5f0f\u5339\u914d\u7684\u6d4b\u8bd5\u3002\u8868\u8fbe\u5f0f\u662fpython\u53ef\u8bc6\u522b\u7684\u8868\u8fbe\u5f0f\uff0c\u5176\u4e2d\u6240\u6709\u540d\u79f0\u5747\u4e3a\u4e0e\u6d4b\u8bd5\u6587\u4ef6\u540d\u79f0\u53ca\u5176\u7236\u7c7b\u8fdb\u884c\u5b50\u5b57\u7b26\u4e32\u5339\u914d\u3002 \u4f8b\u5982\uff1a`-k 'test_method or test_other'` \u5339\u914d\u6240\u6709\u6d4b\u8bd5\u65b9\u6cd5\u540d\u548c\u7c7b\u540d\u5305\u542b'test_method' \u6216 'test_other'\u7684\u7528\u4f8b\u3002 `-k 'not test_method'` \u5339\u914d\u540d\u79f0\u4e2d\u4e0d\u5305\u542b'test_method'\u7684\u7c7b\u3002 `-k 'not test_method and not test_other'` \u6d88\u9664\u5339\u914d\u9879\u3002 \u53e6\u5916\uff0c\u8fd8\u8fd0\u884c\uff0c\u5728\u5176\u4ed6\u7684\u5173\u952e\u5b57\u5339\u914d\u4e2d\uff0c\u7c7b\u548c\u65b9\u6cd5\u540d\u6210\u5305\u542b\u7684\uff0c\u4ee5\u53ca\u76f4\u63a5\u4e3a\u5176\u5206\u914d\u540d\u79f0\u7684\u51fd\u6570\u3002 \u5339\u914d\u4e0d\u533a\u5206\u5927\u5c0f\u5199\u3002 -m MARKEXPR \u53ea\u8fd0\u884c\u5339\u914d\u7ed9\u5b9a\u8868\u8fbe\u5f0f\u5339\u914d\u7684\u7528\u4f8b\u3002 \u4f8b\u5982: -m 'mark1 and not mark2'. --markers \u663e\u793a\u6807\u8bb0\uff08\u5185\u7f6e\u6807\u8bb0\uff0c\u63d2\u4ef6\u6807\u8bb0\u548c\u53ea\u8fd0\u884c\u4e00\u6b21\u6807\u8bb0\uff09 -x, --exitfirst \u9047\u5230error\u6216fail test\u7acb\u5373\u9000\u51fa. --maxfail=num \u5728\u7b2c\u4e00\u4e2a\u5931\u8d25\u7528\u4f8b\u6216\u9519\u8bef\u540e\u9000\u51fa\u3002 --strict-markers, --strict \u672a\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\"\u6807\u8bb0\"\u90e8\u5206\u6ce8\u518c\u7684\u6807\u8bb0\u4f1a\u5f15\u53d1\u9519\u8bef\u3002 -c file \u4ece'file'\u52a0\u8f7d\u914d\u7f6e\uff0c\u800c\u4e0d\u662f\u52a0\u8f7d\u9690\u85cf\u7684\u914d\u7f6e\u6587\u4ef6\u3002 --continue-on-collection-errors \u5373\u4f7f\u53d1\u751f\u9519\u8bef\uff0c\u4e5f\u5f3a\u5236\u7ee7\u7eed\u6267\u884c\u6d4b\u8bd5\u3002 --rootdir=ROOTDIR \u5b9a\u4e49\u6d4b\u8bd5\u9879\u76ee\u7684root\u76ee\u5f55. \u53ef\u4ee5\u662f\u76f8\u5bf9\u8def\u5f84\uff1a'root_dir', './root_dir', 'root_dir/another_dir/'; \u7edd\u5bf9\u8def\u5f84: '/home/user/root_dir'; \u5305\u542b\u53d8\u91cf\u7684\u8def\u5f84: '$HOME/root_dir'. --fixtures, --funcargs \u663e\u793a\u53ef\u7528\u7684fixtures, \u6309fixture\u540d\u79f0\u6392\u5e8f (\u4ee5`_`\u5f00\u5934\u7684fixture\uff0c\u53ea\u6709\u6dfb\u52a0`-v`\u65f6\u624d\u663e\u793a) --fixtures-per-test \u6bcf\u6b21\u6d4b\u8bd5\u90fd\u663e\u793afixtures --import-mode={prepend,append} \u5f53import\u6d4b\u8bd5\u6a21\u5757\u65f6, prepend/append\u5230\u7cfb\u7edf\u73af\u5883\u53d8\u91cf\u4e2d\uff0c\u9ed8\u8ba4\u524d\u7f6e\u5230\u7cfb\u7edf\u73af\u5883\u53d8\u91cf\u4e2d\u3002 --pdb \u5f53\u51fa\u73b0error\u6216\u5f3a\u5236\u65ad\u5f00\u65f6\uff0c\u542f\u52a8\u4ea4\u4e92\u5f0fpython\u8c03\u8bd5\u5668. --pdbcls=modulename:classname \u9488\u5bf9\u9519\u8bef\u542f\u52a8\u81ea\u5b9a\u4e49\u4ea4\u4e92\u5f0fpython\u8c03\u8bd5\u5668. \u4f8b\u5982: --pdbcls=IPython.terminal.debugger:TerminalPdb --trace \u6bcf\u6b21\u8fd0\u884c\u6d4b\u8bd5\u65f6\u7acb\u5373\u8df3\u51fa --capture=method \u6bcf\u6b21\u6d4b\u8bd5\u90fd\u6355\u83b7\u65b9\u6cd5: fd|sys|no|tee-sys\u7684\u5176\u4e2d\u4e4b\u4e00\u3002 -s --capture=no\u7684\u5feb\u6377\u6a21\u5f0f. --runxfail \u62a5\u544axfail\u6807\u8bb0\u7684\u6d4b\u8bd5\u7ed3\u679c\uff0c\u5c31\u50cf\u6ca1\u6807\u8bb0\u8fc7\u4e00\u6837\u3002 --lf, --last-failed \u4ec5\u91cd\u65b0\u8fd0\u884c\u6700\u540e\u4e00\u6b21\u8fd0\u884c\u5931\u8d25\u7684\u6d4b\u8bd5\uff08\u5982\u679c\u6ca1\u6709\u5931\u8d25\u7684\u5219\u5168\u90e8\u91cd\u65b0\u8fd0\u884c\uff09 --ff, --failed-first \u8fd0\u884c\u6240\u6709\u6d4b\u8bd5\uff0c\u4f46\u5148\u8fd0\u884c\u6700\u540e\u7684\u5931\u8d25\u7528\u4f8b\u3002\u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4setup/teardown\u7684\u91cd\u590d\u8fd0\u884c\u3002 --nf, --new-first \u9996\u5148\u8fd0\u884c\u65b0\u7684\u6d4b\u8bd5\u7528\u4f8b\uff0c\u7136\u540e\u5176\u4f59\u6d4b\u8bd5\u7528\u4f8b\u6309\u7167\u6700\u540e\u4e00\u6b21\u4fee\u6539\u65f6\u95f4\u987a\u5e8f\u6267\u884c\u3002 --cache-show=[CACHESHOW] \u663e\u793a\u7f13\u5b58\u5185\u5bb9, \u4e0d\u6267\u884c\u641c\u96c6\u6216\u6d4b\u8bd5. \u53ef\u9009\u53c2\u6570: glob (default: '*'). --cache-clear \u6d4b\u8bd5\u8fd0\u884c\u524d\u6e05\u7a7a\u6240\u6709\u7f13\u5b58. --lfnf={all,none}, --last-failed-no-failures={all,none} \u8fd0\u884c\u6ca1\u6709\u5931\u8d25\u8fc7\u7684\u7528\u4f8b. --sw, --stepwise \u6d4b\u8bd5\u5931\u8d25\u65f6\u9000\u51fa\uff0c\u4e14\u4e0b\u6b21\u8fd0\u884c\u4ece\u6700\u540e\u5931\u8d25\u7684\u7528\u4f8b\u5f00\u59cb\u8fd0\u884c --stepwise-skip \u5ffd\u7565\u7b2c\u4e00\u4e2a\u5931\u8d25\u7684\u6d4b\u8bd5\uff0c\u4e0b\u4e00\u4e2a\u5931\u8d25\u7684\u7528\u4f8b\u51fa\u73b0\u65f6\u505c\u6b62 --allure-severities=SEVERITIES_SET \u4ee5\u9017\u53f7\u5206\u5272\u7684\u4f18\u5148\u7ea7\u540d\u79f0\u5217\u8868. \u53ea\u8fd0\u884c\u6307\u5b9a\u4f18\u5148\u7ea7\u7684\u7528\u4f8b. \u53ef\u9009\u62e9\u7684\u4f18\u5148\u7ea7\u4e3a: blocker, critical, normal, minor, trivial. --allure-epics=EPICS_SET \u4ee5\u9017\u53f7\u5206\u5272\u7684epic\u5217\u8868. \u8fd0\u884c\u5177\u6709\u81f3\u5c11\u4e00\u4e2a\u6307\u5b9a\u6807\u7b7e\u7684\u6d4b\u8bd5\u3002 --allure-features=FEATURES_SET \u4ee5\u9017\u53f7\u5206\u5272\u7684feature\u5217\u8868. \u8fd0\u884c\u5177\u6709\u81f3\u5c11\u4e00\u4e2a\u6307\u5b9a\u6807\u7b7e\u7684\u6d4b\u8bd5\u3002 --allure-stories=STORIES_SET \u4ee5\u9017\u53f7\u5206\u5272\u7684story\u5217\u8868. \u8fd0\u884c\u5177\u6709\u81f3\u5c11\u4e00\u4e2a\u6307\u5b9astory\u7684\u6d4b\u8bd5. --allure-link-pattern=LINK_TYPE:LINK_PATTERN \u6267\u884c\u547d\u4ee4\u65f6\u6307\u5b9a\u77ed\u94fe\u63a5, \u6bd4\u5982Bug\u5730\u5740. \u683c\u5f0f\u4e3apython str.format()\u683c\u5f0f\uff0c\u4f8b\u5982\uff1a`pytest test.py ----allure-link-pattern=issue:http//www.mytesttracker.com/issue/{}`. reporting: --durations=N \u663e\u793a\u6700\u6162\u7684N\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u548csetup (N=0 for all). -v, --verbose \u589e\u52a0\u62a5\u544a\u4fe1\u606f. -q, --quiet \u51cf\u5c11\u62a5\u544a\u4fe1\u606f. --verbosity=VERBOSE \u8bbe\u7f6e\u8be6\u7ec6\u7a0b\u5ea6\uff0c\u9ed8\u8ba4\u662f0\u3002 -r chars \u663e\u793a\u5b57\u7b26\u6307\u5b9a\u7684\u6d4b\u8bd5\u6458\u8981\u4fe1\u606f: (f)ailed, (E)rror, (s)kipped, (x)failed, (X)passed, (p)assed, (P)assed (a)ll except passed (p/P), or (A)ll. \u9ed8\u8ba4\u542f\u7528(w)arnings (see --disable-warnings), 'N' \u7528\u4e8e\u91cd\u7f6e\u5217\u8868 (\u9ed8\u8ba4: 'fE'). --disable-warnings, --disable-pytest-warnings \u7981\u7528\u8b66\u544a\u6458\u8981 -l, --showlocals \u5728\u56de\u6eaf\u4e2d\u663e\u793a\u5c40\u90e8\u53d8\u91cf(\u9ed8\u8ba4\u7981\u6b62). --tb=style \u8ffd\u6eaf\u6253\u5370\u6a21\u5f0f (auto/long/short/line/native/no). --show-capture={no,stdout,stderr,log,all} \u63a7\u5236\u5728\u5931\u8d25\u7684\u6d4b\u8bd5\u4e2d\u5982\u4f55\u663e\u793a\u6355\u83b7\u7684stdout/stderr/log. \u9ed8\u8ba4'all'. --full-trace \u4e0d\u5220\u51cf\u4efb\u4f55\u4fe1\u606f\uff08\u9ed8\u8ba4\u662f\u5220\u51cf\u7684\uff09. --color=color \u5f69\u8272\u7ec8\u7aef\u8f93\u51fa (yes/no/auto). --pastebin=mode \u53d1\u9001\u5931\u8d25\uff5call\u4fe1\u606f\u5230bpaste.net\u670d\u52a1 --junit-xml=path \u5728\u6307\u5b9a\u8def\u5f84\u751f\u6210junit-xml\u62a5\u544a --junit-prefix=str \u5728junit-xml\u8f93\u51fa\u4e2d\u6dfb\u52a0str\u5230\u7c7b\u540d\u524d\u9762 --result-log=path \u53ef\u8bfb\u7ed3\u679c\u65e5\u5fd7\u7684\u5df2\u5f03\u7528\u8def\u5f84 --html=path \u6307\u5b9a\u8def\u5f84\u751f\u6210html\u62a5\u544a --self-contained-html \u521b\u5efa\u4e00\u4e2a\u5305\u542b\u6240\u6709\u5fc5\u9700\u7684\u6837\u5f0f\uff0c\u811a\u672c\u548c\u56fe\u50cf\u7684\u81ea\u5305\u542bhtml\u6587\u4ef6 - \u8fd9\u610f\u5473\u7740\u8be5\u62a5\u544a\u53ef\u80fd\u4e0d\u4f1a\u5448\u73b0\u6216\u5177\u5907CSP\u9650\u5236\u7684\u529f\u80fd (\u89c1\uff1a https://developer.mozilla.org/docs/Web/Security/CSP) --css=path \u5c06\u7ed9\u5b9a\u7684CSS\u6587\u4ef6\u5185\u5bb9\u9644\u52a0\u5230\u62a5\u8868\u6837\u5f0f\u6587\u4ef6\u4e2d\u3002 collection: --collect-only, --co \u4ec5\u6536\u96c6\u6d4b\u8bd5\uff0c\u4e0d\u6267\u884c\u6d4b\u8bd5\u3002 --pyargs \u5c1d\u8bd5\u5c06\u6240\u6709\u53c2\u6570\u89e3\u91ca\u4e3apython\u8f6f\u4ef6\u5305\u3002 --ignore=path \u6536\u96c6\u671f\u95f4\u5ffd\u7565\u6307\u5b9a\u8def\u5f84(\u5141\u8bb8\u591a\u4e2a\u8def\u5f84). --ignore-glob=path \u6536\u96c6\u671f\u95f4\u5ffd\u7565\u8def\u5f84 (\u5141\u8bb8\u591a\u4e2a\u8def\u5f84). --deselect=nodeid_prefix \u5728\u6536\u96c6\u671f\u95f4\u53d6\u6d88\u9009\u62e9\u9879\uff08\u901a\u8fc7\u8282\u70b9id\u524d\u7f00\uff09\uff08\u5141\u8bb8\u591a\u4e2a\uff09 --confcutdir=dir \u4ec5\u52a0\u8f7d\u6307\u5b9a\u76ee\u5f55(conftest.py\u7684\u76f8\u5bf9\u8def\u5f84) --noconftest \u4e0d\u52a0\u8f7d\u4efb\u4f55conftest.py files. --keep-duplicates \u4fdd\u6301\u91cd\u590d\u6d4b\u8bd5 --collect-in-virtualenv \u4e0d\u8981\u5ffd\u7565\u672c\u5730virtualenv\u76ee\u5f55\u4e2d\u7684\u6d4b\u8bd5 --doctest-modules \u5728\u6240\u6709.py\u6a21\u5757\u4e2d\u8fd0\u884cdoctests --doctest-report={none,cdiff,ndiff,udiff,only_first_failure} \u4e3adoctest\u5931\u8d25\u65f6\u7684\u5dee\u5f02\u9009\u62e9\u53e6\u4e00\u79cd\u8f93\u51fa\u683c\u5f0f --doctest-glob=pat doctests\u6587\u4ef6\u5339\u914d\u6a21\u5f0f\uff0c\u9ed8\u8ba4\u503c\uff1atest * .txt --doctest-ignore-import-errors \u5ffd\u7565 doctest ImportErrors --doctest-continue-on-failure \u5bf9\u4e8e\u7ed9\u5b9a\u7684doctest\uff0c\u5728\u7b2c\u4e00\u6b21\u5931\u8d25\u540e\u7ee7\u7eed\u8fd0\u884c \u6d4b\u8bd5\u4f1a\u8bdd\u8c03\u8bd5\u548c\u914d\u7f6e: --basetemp=dir \u6b64\u6d4b\u8bd5\u8fd0\u884c\u7684\u57fa\u672c\u4e34\u65f6\u76ee\u5f55\u3002\uff08\u8b66\u544a\uff1a\u5982\u679c\u5b58\u5728\u6b64\u76ee\u5f55\uff0c\u5219\u5c06\u5176\u5220\u9664\uff09 -V, --version \u663e\u793apytest\u7248\u672c\u548c\u6709\u5173\u63d2\u4ef6\u7684\u4fe1\u606f\u3002 -h, --help \u663e\u793a\u5e2e\u52a9\u6d88\u606f\u548c\u914d\u7f6e\u4fe1\u606f -p name \u5c3d\u65e9\u52a0\u8f7d\u7ed9\u5b9a\u7684\u63d2\u4ef6\u6a21\u5757\u540d\u79f0\u6216\u5165\u53e3\u70b9\uff08\u5141\u8bb8\u591a\u4e2a\uff09. \u4e3a\u907f\u514d\u52a0\u8f7d\u63d2\u4ef6, \u4f7f\u7528`no:` prefix, \u4f8b\u5982. `no:doctest`. --trace-config \u8ddf\u8e2aconftest.py\u6587\u4ef6\u7684\u6ce8\u610f\u4e8b\u9879\u3002 --debug \u5c06\u5185\u90e8\u8ddf\u8e2a\u8c03\u8bd5\u4fe1\u606f\u5b58\u50a8\u5728\u201c pytestdebug.log\u201d\u4e2d\u3002 -o OVERRIDE_INI, --override-ini=OVERRIDE_INI \u4ee5\u201coption = value\u201d\u6837\u5f0f\u8986\u76d6ini\u9009\u9879\uff0c\u4f8b\u5982 `-o xfail_strict = True -o cache_dir = cache` --assert=MODE \u63a7\u5236\u65ad\u8a00\u8c03\u8bd5\u5de5\u5177\u3002 'plain'\u4e0d\u6267\u884c\u4efb\u4f55\u65ad\u8a00\u8c03\u8bd5\u3002 \u201c rewrite\u201d\uff08\u9ed8\u8ba4\uff09\u5728\u5bfc\u5165\u65f6\u91cd\u5199\u6d4b\u8bd5\u6a21\u5757\u4e2d\u7684assert\u8bed\u53e5\uff0c\u4ee5\u63d0\u4f9bassert\u8868\u8fbe\u5f0f\u4fe1\u606f\u3002 --setup-only \u4ec5\u5b89\u88c5fixtures, \u4e0d\u6267\u884c\u6d4b\u8bd5. --setup-show \u6267\u884c\u6d4b\u8bd5\u65f6\u663e\u793afixtures\u7684setup. --setup-plan \u4e0d\u6267\u884c\uff0c\u53ea\u663e\u793a\u5c06\u8981\u6267\u884c\u7684fixture\u548c\u6d4b\u8bd5\u7528\u4f8b pytest-warnings: -W PYTHONWARNINGS, --pythonwarnings=PYTHONWARNINGS set which warnings to report, see -W option of python itself. logging: --no-print-logs disable printing caught logs on failed tests. --log-level=LEVEL level of messages to catch/display. Not set by default, so it depends on the root/parent log handler's effective level, where it is \"WARNING\" by default. --log-format=LOG_FORMAT log format as used by the logging module. --log-date-format=LOG_DATE_FORMAT log date format as used by the logging module. --log-cli-level=LOG_CLI_LEVEL cli logging level. --log-cli-format=LOG_CLI_FORMAT log format as used by the logging module. --log-cli-date-format=LOG_CLI_DATE_FORMAT log date format as used by the logging module. --log-file=LOG_FILE path to a file when logging will be written to. --log-file-level=LOG_FILE_LEVEL log file logging level. --log-file-format=LOG_FILE_FORMAT log format as used by the logging module. --log-file-date-format=LOG_FILE_DATE_FORMAT log date format as used by the logging module. --log-auto-indent=LOG_AUTO_INDENT Auto-indent multiline messages passed to the logging module. Accepts true|on, false|off or an integer. reporting: --alluredir=DIR Generate Allure report in the specified directory (may not exist) --clean-alluredir Clean alluredir folder if it exists --allure-no-capture Do not attach pytest captured logging/stdout/stderr to report custom options: --metadata=key value additional metadata. --metadata-from-json=METADATA_FROM_JSON additional metadata from a json string. [pytest] ini-options in the first pytest.ini|tox.ini|setup.cfg file found: markers (linelist): markers for test functions empty_parameter_set_mark (string): default marker for empty parametersets norecursedirs (args): directory patterns to avoid for recursion testpaths (args): directories to search for tests when no files or directories are given in the command line. usefixtures (args): list of default fixtures to be used with this project python_files (args): glob-style file patterns for Python test module discovery python_classes (args): prefixes or glob names for Python test class discovery python_functions (args): prefixes or glob names for Python test function and method discovery disable_test_id_escaping_and_forfeit_all_rights_to_community_support (bool): disable string escape non-ascii characters, might cause unwanted side effects(use at your own risk) console_output_style (string): console output: \"classic\", or with additional progress information (\"progress\" (percentage) | \"count\"). xfail_strict (bool): default for the strict parameter of xfail markers when not given explicitly (default: False) enable_assertion_pass_hook (bool): Enables the pytest_assertion_pass hook.Make sure to delete any previously generated pyc cache files. junit_suite_name (string): Test suite name for JUnit report junit_logging (string): Write captured log messages to JUnit report: one of no|log|system-out|system-err|out-err|all junit_log_passing_tests (bool): Capture log information for passing tests to JUnit report: junit_duration_report (string): Duration time to report: one of total|call junit_family (string): Emit XML for schema: one of legacy|xunit1|xunit2 doctest_optionflags (args): option flags for doctests doctest_encoding (string): encoding used for doctest files cache_dir (string): cache directory path. filterwarnings (linelist): Each line specifies a pattern for warnings.filterwarnings. Processed after -W/--pythonwarnings. log_print (bool): default value for --no-print-logs log_level (string): default value for --log-level log_format (string): default value for --log-format log_date_format (string): default value for --log-date-format log_cli (bool): enable log display during test run (also known as \"live logging\"). log_cli_level (string): default value for --log-cli-level log_cli_format (string): default value for --log-cli-format log_cli_date_format (string): default value for --log-cli-date-format log_file (string): default value for --log-file log_file_level (string): default value for --log-file-level log_file_format (string): default value for --log-file-format log_file_date_format (string): default value for --log-file-date-format log_auto_indent (string): default value for --log-auto-indent faulthandler_timeout (string): Dump the traceback of all threads if a test takes more than TIMEOUT seconds to finish. Not available on Windows. addopts (args): extra command line options minversion (string): minimally required pytest version render_collapsed (bool): Open the report with all rows collapsed. Useful for very large reports environment variables: PYTEST_ADDOPTS extra command line options PYTEST_PLUGINS comma-separated plugins to load during startup PYTEST_DISABLE_PLUGIN_AUTOLOAD set to disable plugin auto-loading PYTEST_DEBUG set to enable debug tracing of pytest's internals to see available markers type: pytest --markers to see available fixtures type: pytest --fixtures (shown according to specified file_or_dir or current dir if not specified; fixtures with leading '_' are only shown with the '-v' option","title":"\u8fd0\u884cpytest\u7528\u4f8b"},{"location":"user_guide/run_testcase/#_3","text":"$ hrun examples/postman_echo/request_methods/request_with_functions.yml 2020-06-17 15:39:41.041 | INFO | httprunner.make:make_testcase:317 - start to make testcase: /Users/debugtalk/MyProjects/HttpRunner-dev/HttpRunner/examples/postman_echo/request_methods/request_with_functions.yml 2020-06-17 15:39:41.042 | INFO | httprunner.make:make_testcase:390 - generated testcase: /Users/debugtalk/MyProjects/HttpRunner-dev/HttpRunner/examples/postman_echo/request_methods/request_with_functions_test.py 2020-06-17 15:39:41.042 | INFO | httprunner.make:format_pytest_with_black:154 - format pytest cases with black ... reformatted /Users/debugtalk/MyProjects/HttpRunner-dev/HttpRunner/examples/postman_echo/request_methods/request_with_functions_test.py All done! \u2728 \ud83c\udf70 \u2728 1 file reformatted, 1 file left unchanged. 2020-06-17 15:39:41.315 | INFO | httprunner.cli:main_run:56 - start to run tests with pytest. HttpRunner version: 3.0.13 ====================================================================== test session starts ====================================================================== platform darwin -- Python 3.7.5, pytest-5.4.2, py-1.8.1, pluggy-0.13.1 rootdir: /Users/debugtalk/MyProjects/HttpRunner-dev/HttpRunner plugins: metadata-1.9.0, allure-pytest-2.8.16, html-2.1.1 collected 1 item examples/postman_echo/request_methods/request_with_functions_test.py . [100%] ======================================================================= 1 passed in 2.98s ======================================================================= \u5982\u679c\u4f60\u60f3\u770b\u5230request\u548cresponse\u3001\u63d0\u53d6\u548c\u65ad\u8a00\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u53ef\u4ee5\u589e\u52a0 -s \uff08 --capture=no \u7684\u7f29\u5199\uff09 $ hrun -s examples/postman_echo/request_methods/request_with_functions.yml 2020-06-17 15:42:54.369 | INFO | httprunner.make:make_testcase:317 - start to make testcase: /Users/debugtalk/MyProjects/HttpRunner-dev/HttpRunner/examples/postman_echo/request_methods/request_with_functions.yml 2020-06-17 15:42:54.369 | INFO | httprunner.make:make_testcase:390 - generated testcase: /Users/debugtalk/MyProjects/HttpRunner-dev/HttpRunner/examples/postman_echo/request_methods/request_with_functions_test.py 2020-06-17 15:42:54.370 | INFO | httprunner.make:format_pytest_with_black:154 - format pytest cases with black ... reformatted /Users/debugtalk/MyProjects/HttpRunner-dev/HttpRunner/examples/postman_echo/request_methods/request_with_functions_test.py All done! \u2728 \ud83c\udf70 \u2728 1 file reformatted, 1 file left unchanged. 2020-06-17 15:42:54.699 | INFO | httprunner.cli:main_run:56 - start to run tests with pytest. HttpRunner version: 3.0.13 ====================================================================== test session starts ====================================================================== platform darwin -- Python 3.7.5, pytest-5.4.2, py-1.8.1, pluggy-0.13.1 rootdir: /Users/debugtalk/MyProjects/HttpRunner-dev/HttpRunner plugins: metadata-1.9.0, allure-pytest-2.8.16, html-2.1.1 collected 1 item examples/postman_echo/request_methods/request_with_functions_test.py 2020-06-17 15:42:55.017 | INFO | httprunner.runner:test_start:435 - Start to run testcase: request methods testcase with functions, TestCase ID: cc404c49-000f-485c-b4c1-ac3367a053fe 2020-06-17 15:42:55.018 | INFO | httprunner.runner:__run_step:278 - run step begin: get with params >>>>>> 2020-06-17 15:42:56.326 | DEBUG | httprunner.client:log_print:40 - ================== request details ================== method : GET url : https://postman-echo.com/get?foo1=bar11&foo2=bar21&sum_v=3 headers : { \"User-Agent\": \"HttpRunner/3.0.13\", \"Accept-Encoding\": \"gzip, deflate\", \"Accept\": \"*/*\", \"Connection\": \"keep-alive\", \"HRUN-Request-ID\": \"HRUN-cc404c49-000f-485c-b4c1-ac3367a053fe-775018\", \"Content-Length\": \"2\", \"Content-Type\": \"application/json\" } cookies : {} body : {} 2020-06-17 15:42:56.327 | DEBUG | httprunner.client:log_print:40 - ================== response details ================== status_code : 200 headers : { \"Date\": \"Wed, 17 Jun 2020 07:42:56 GMT\", \"Content-Type\": \"application/json; charset=utf-8\", \"Content-Length\": \"477\", \"Connection\": \"keep-alive\", \"ETag\": \"W/\\\"1dd-2JtBYPcnh8D6fqLz8KFn16Oq1R0\\\"\", \"Vary\": \"Accept-Encoding\", \"set-cookie\": \"sails.sid=s%3A6J_EtUk3nkL_C2xtx-NtAXrlA5wPxEgk.gIO2yBbtvGWIIgQ%2F2mZhMkU669G3F60cvLAPWbwyoGM; Path=/; HttpOnly\" } cookies : { \"sails.sid\": \"s%3A6J_EtUk3nkL_C2xtx-NtAXrlA5wPxEgk.gIO2yBbtvGWIIgQ%2F2mZhMkU669G3F60cvLAPWbwyoGM\" } encoding : utf-8 content_type : application/json; charset=utf-8 body : { \"args\": { \"foo1\": \"bar11\", \"foo2\": \"bar21\", \"sum_v\": \"3\" }, \"headers\": { \"x-forwarded-proto\": \"https\", \"x-forwarded-port\": \"443\", \"host\": \"postman-echo.com\", \"x-amzn-trace-id\": \"Root=1-5ee9c980-d8e98cc72a26ef24f5819ce3\", \"content-length\": \"2\", \"user-agent\": \"HttpRunner/3.0.13\", \"accept-encoding\": \"gzip, deflate\", \"accept\": \"*/*\", \"hrun-request-id\": \"HRUN-cc404c49-000f-485c-b4c1-ac3367a053fe-775018\", \"content-type\": \"application/json\" }, \"url\": \"https://postman-echo.com/get?foo1=bar11&foo2=bar21&sum_v=3\" } 2020-06-17 15:42:56.328 | INFO | httprunner.client:request:203 - status_code: 200, response_time(ms): 1307.33 ms, response_length: 477 bytes 2020-06-17 15:42:56.328 | INFO | httprunner.response:extract:152 - extract mapping: {'foo3': 'bar21'} 2020-06-17 15:42:56.328 | INFO | httprunner.response:validate:209 - assert status_code equal 200(int) ==> pass 2020-06-17 15:42:56.329 | INFO | httprunner.response:validate:209 - assert body.args.foo1 equal bar11(str) ==> pass 2020-06-17 15:42:56.329 | INFO | httprunner.response:validate:209 - assert body.args.sum_v equal 3(str) ==> pass 2020-06-17 15:42:56.329 | INFO | httprunner.response:validate:209 - assert body.args.foo2 equal bar21(str) ==> pass 2020-06-17 15:42:56.330 | INFO | httprunner.runner:__run_step:290 - run step end: get with params <<<<<< <Omit> 2020-06-17 15:42:57.019 | INFO | httprunner.runner:test_start:444 - generate testcase log: /Users/debugtalk/MyProjects/HttpRunner-dev/HttpRunner/examples/postman_echo/logs/cc404c49-000f-485c-b4c1-ac3367a053fe.run.log . ======================================================================= 1 passed in 2.13s ======================================================================= \u6bcf\u4e2a\u7528\u4f8b\u90fd\u4f1a\u751f\u6210\u4e00\u4e2a\u6267\u884clog\uff0c\u4f4d\u7f6e\uff1a <ProjectRootDir>/logs/TestCaseID.run.log.","title":"\u6267\u884c\u65e5\u5fd7"},{"location":"user_guide/run_testcase/#idrequest-id","text":"\u4e3a\u6392\u9664\u6545\u969c\uff0c\u6bcf\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u5c06\u751f\u6210\u552f\u4e00ID\uff08uuid4\uff09\uff0c\u6bcf\u4e2arequest header\u5c06\u81ea\u52a8\u6dfb\u52a0\u4e00\u4e2a\u5e26\u6709\u6d4b\u8bd5\u7528\u4f8bID\u7684 HRUN-Request-ID HRUN-Request-ID = \"HRUN-<TestCase ID>-<timestamp_six_digits>\" timestamp_six_digits = str(int(time.time() * 1000))[-6:]) \u6362\u53e5\u8bdd\u8bf4\uff0c\u540c\u4e00\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u4e2d\u7684\u6240\u6709request\u6709\u540c\u6837\u7684 HRUN-Request-ID \u524d\u7f00\uff0c\u5e76\u4e14\u6bcf\u4e2a\u8bf7\u6c42\u6709\u552f\u4e00\u7684 HRUN-Request-ID \u540e\u7f00\u3002","title":"\u6d4b\u8bd5\u7528\u4f8bID\u548cRequest ID"},{"location":"user_guide/run_testcase/#client-server-ipport","text":"\u6709\u65f6\uff0c\u8bb0\u5f55\u8fdc\u7a0b\u670d\u52a1\u5668\u7684IP\u548c\u7aef\u53e3\u5bf9\u4e8e\u89e3\u51b3\u95ee\u9898\u7279\u522b\u6709\u7528\uff0c\u5c24\u5176\u662f\u5f53\u6709\u591a\u53f0\u670d\u52a1\u5668\u5e76\u4e14\u6211\u4eec\u8981\u68c0\u67e5\u54ea\u4e00\u53f0\u8fd4\u56de\u9519\u8bef\u65f6\u3002 \u4ece3.0.13\u5f00\u59cb\uff0cHttpRunner\u5c06\u5728\u8c03\u8bd5\u9636\u6bb5\u8bb0\u5f55\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u7aefIP:PORT \u6d4b\u8bd5\u7528\u4f8b\u6458\u8981\uff1a \"address\": { \"client_ip\": \"10.90.205.63\", \"client_port\": 62802, \"server_ip\": \"34.233.204.163\", \"server_port\": 443 },","title":"Client &amp; Server IP:PORT"},{"location":"user_guide/run_testcase/#v2x","text":"\u9664\u4e86pytest\u7684\u6240\u6709\u53c2\u6570\u5916\uff0chrun\u8fd8\u5177\u6709\u5176\u4ed6\u51e0\u4e2a\u53c2\u6570\u4ee5\u4fdd\u6301\u4e0eHttpRunner v2.x\u7684\u517c\u5bb9\u6027\u3002 --failfast\uff1a\u65e0\u6548\uff0c\u6b64\u53c2\u6570\u5c06\u81ea\u52a8\u5220\u9664 --report-file\uff1a\u6307\u5b9ahtml\u62a5\u544a\u6587\u4ef6\u8def\u5f84\uff0c\u6b64\u53c2\u6570\u5c06\u66ff\u6362\u4e3a--html --self-contained-html\u5e76\u4f7f\u7528pytest-html\u63d2\u4ef6\u751f\u6210html\u62a5\u544a --save-tests\uff1a\u5982\u679c\u8bbe\u7f6e\uff0cHttpRunner v3.x\u5c06\u521b\u5efa\u4e00\u4e2apytest conftest.py\u6587\u4ef6\uff0c\u8be5\u6587\u4ef6\u5305\u542b\u4f1a\u8bdd\u56fa\u5b9a\u88c5\u7f6e\u4ee5\u805a\u5408\u6bcf\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u7684\u6458\u8981\u5e76\u5c06\u5176\u8f6c\u50a8\u5230summary.json","title":"v2.x\u517c\u5bb9\u6027\u7684\u53c2\u6570"},{"location":"user_guide/testing_report/","text":"\u6d4b\u8bd5\u62a5\u544a \u53d7\u76ca\u4e8epytest\u7684\u96c6\u6210\uff0cHttpRunner v3.x\u53ef\u4ee5\u5229\u7528pytest\u6240\u6709\u63d2\u4ef6\uff0c\u5305\u62ec pytest-html \u548c allure-pytest \u5185\u7f6ehtml\u62a5\u544a pytest-html \u63d2\u4ef6\u968fHttpRunner\u4e00\u671f\u5b89\u88c5\u3002\u5f53\u4f60\u8fd0\u884c\u6d4b\u8bd5\u7528\u4f8b\u60f3\u751f\u6210html\u62a5\u544a\u65f6\uff0c\u53ef\u4ee5\u5728\u547d\u4ee4\u884c\u4e2d\u6dfb\u52a0 --html $ hrun /path/to/testcase --html=report.html \u5982\u679c\u60f3\u521b\u5efa\u4e00\u4e2a\u72ec\u7acb\u7684\u3001\u66f4\u52a0\u65b9\u4fbf\u5171\u4eab\u6d4b\u8bd5\u7ed3\u679c\u7684html\u62a5\u544a\uff0c\u53ef\u4ee5\u5728\u547d\u4ee4\u884c\u4e2d\u6dfb\u52a0 --self-contained-html $ hrun /path/to/testcase --html=report.html --self-contained-html \u8be6\u60c5\u8bf7\u770b pytest-html allure\u62a5\u544a allure-pytest \u662fHttpRunner\u7684\u53ef\u9009\u4f9d\u8d56\u9879\uff0c\u6240\u4ee5\u5982\u679c\u60f3\u751f\u6210allure\u62a5\u544a\u65f6\uff0c\u9700\u8981\u5355\u72ec\u5b89\u88c5\uff1a pip install allure-pytest \u6216\u8005\u5728\u5b89\u88c5httprunner\u65f6\u9009\u62e9\u5b89\u88c5\uff1a pip install \"httprunner[allure]\" \u4e00\u65e6 allure-pytest \u5b89\u88c5\u597d\uff0c\u53ef\u4ee5\u7528 hrun/pytest \u4f7f\u7528\u5982\u4e0b\u529f\u80fd\uff1a * --alluredir = DIR \uff1a\u5728\u6307\u5b9a\u76ee\u5f55\u4e2d\u751f\u6210\u201c\u9b45\u529b\u201d\u62a5\u544a\uff08\u53ef\u80fd\u4e0d\u5b58\u5728\uff09 * --clean-alluredir \uff1a\u6e05\u7406alluredir\u6587\u4ef6\u5939\uff08\u5982\u679c\u5b58\u5728\uff09 * --allure-no-capture \uff1a\u4e0d\u8981\u5c06pytest\u6355\u83b7\u7684\u65e5\u5fd7\u8bb0\u5f55/ stdout / stderr\u9644\u52a0\u5230\u62a5\u544a\u4e2d \u8981\u4f7fAllure\u4fa6\u542c\u5668\u80fd\u591f\u5728\u6d4b\u8bd5\u6267\u884c\u671f\u95f4\u6536\u96c6\u7ed3\u679c\uff0c\u53ea\u9700\u6dfb\u52a0--alluredir\u9009\u9879\uff0c\u5e76\u63d0\u4f9b\u6307\u5411\u5e94\u5b58\u50a8\u7ed3\u679c\u7684\u6587\u4ef6\u5939\u7684\u8def\u5f84\u3002 \u4f8b\u5982\u3002\uff1a $ hrun /path/to/testcase --alluredir=/tmp/my_allure_results \u6ce8\u610f\uff1a\u8fd9\u91cc\u9700\u8981 \u5b89\u88c5allure \uff0c\u5e76\u914d\u7f6e\u7cfb\u7edf\u73af\u5883\u53d8\u91cf \u8981\u5728\u6d4b\u8bd5\u5b8c\u6210\u540e\u67e5\u770b\u5b9e\u9645\u62a5\u544a\uff0c\u60a8\u9700\u8981\u4f7f\u7528Allure\u547d\u4ee4\u884c\u5b9e\u7528\u7a0b\u5e8f\u4ece\u7ed3\u679c\u751f\u6210\u62a5\u544a\u3002 # \u5728\u7ebf\u6253\u5f00\u62a5\u544a $ allure serve /tmp/my_allure_results # \u751f\u6210html\u62a5\u544a allure generate reports/allure -o reports/allure/html \u6b64\u547d\u4ee4\u5c06\u5728\u9ed8\u8ba4\u6d4f\u89c8\u5668\u4e2d\u663e\u793a\u60a8\u751f\u6210\u7684\u62a5\u544a \u8be6\u60c5\u8bf7\u770b\uff1a allure-pytest","title":"\u6d4b\u8bd5\u62a5\u544a"},{"location":"user_guide/testing_report/#_1","text":"\u53d7\u76ca\u4e8epytest\u7684\u96c6\u6210\uff0cHttpRunner v3.x\u53ef\u4ee5\u5229\u7528pytest\u6240\u6709\u63d2\u4ef6\uff0c\u5305\u62ec pytest-html \u548c allure-pytest","title":"\u6d4b\u8bd5\u62a5\u544a"},{"location":"user_guide/testing_report/#html","text":"pytest-html \u63d2\u4ef6\u968fHttpRunner\u4e00\u671f\u5b89\u88c5\u3002\u5f53\u4f60\u8fd0\u884c\u6d4b\u8bd5\u7528\u4f8b\u60f3\u751f\u6210html\u62a5\u544a\u65f6\uff0c\u53ef\u4ee5\u5728\u547d\u4ee4\u884c\u4e2d\u6dfb\u52a0 --html $ hrun /path/to/testcase --html=report.html \u5982\u679c\u60f3\u521b\u5efa\u4e00\u4e2a\u72ec\u7acb\u7684\u3001\u66f4\u52a0\u65b9\u4fbf\u5171\u4eab\u6d4b\u8bd5\u7ed3\u679c\u7684html\u62a5\u544a\uff0c\u53ef\u4ee5\u5728\u547d\u4ee4\u884c\u4e2d\u6dfb\u52a0 --self-contained-html $ hrun /path/to/testcase --html=report.html --self-contained-html \u8be6\u60c5\u8bf7\u770b pytest-html","title":"\u5185\u7f6ehtml\u62a5\u544a"},{"location":"user_guide/testing_report/#allure","text":"allure-pytest \u662fHttpRunner\u7684\u53ef\u9009\u4f9d\u8d56\u9879\uff0c\u6240\u4ee5\u5982\u679c\u60f3\u751f\u6210allure\u62a5\u544a\u65f6\uff0c\u9700\u8981\u5355\u72ec\u5b89\u88c5\uff1a pip install allure-pytest \u6216\u8005\u5728\u5b89\u88c5httprunner\u65f6\u9009\u62e9\u5b89\u88c5\uff1a pip install \"httprunner[allure]\" \u4e00\u65e6 allure-pytest \u5b89\u88c5\u597d\uff0c\u53ef\u4ee5\u7528 hrun/pytest \u4f7f\u7528\u5982\u4e0b\u529f\u80fd\uff1a * --alluredir = DIR \uff1a\u5728\u6307\u5b9a\u76ee\u5f55\u4e2d\u751f\u6210\u201c\u9b45\u529b\u201d\u62a5\u544a\uff08\u53ef\u80fd\u4e0d\u5b58\u5728\uff09 * --clean-alluredir \uff1a\u6e05\u7406alluredir\u6587\u4ef6\u5939\uff08\u5982\u679c\u5b58\u5728\uff09 * --allure-no-capture \uff1a\u4e0d\u8981\u5c06pytest\u6355\u83b7\u7684\u65e5\u5fd7\u8bb0\u5f55/ stdout / stderr\u9644\u52a0\u5230\u62a5\u544a\u4e2d \u8981\u4f7fAllure\u4fa6\u542c\u5668\u80fd\u591f\u5728\u6d4b\u8bd5\u6267\u884c\u671f\u95f4\u6536\u96c6\u7ed3\u679c\uff0c\u53ea\u9700\u6dfb\u52a0--alluredir\u9009\u9879\uff0c\u5e76\u63d0\u4f9b\u6307\u5411\u5e94\u5b58\u50a8\u7ed3\u679c\u7684\u6587\u4ef6\u5939\u7684\u8def\u5f84\u3002 \u4f8b\u5982\u3002\uff1a $ hrun /path/to/testcase --alluredir=/tmp/my_allure_results \u6ce8\u610f\uff1a\u8fd9\u91cc\u9700\u8981 \u5b89\u88c5allure \uff0c\u5e76\u914d\u7f6e\u7cfb\u7edf\u73af\u5883\u53d8\u91cf \u8981\u5728\u6d4b\u8bd5\u5b8c\u6210\u540e\u67e5\u770b\u5b9e\u9645\u62a5\u544a\uff0c\u60a8\u9700\u8981\u4f7f\u7528Allure\u547d\u4ee4\u884c\u5b9e\u7528\u7a0b\u5e8f\u4ece\u7ed3\u679c\u751f\u6210\u62a5\u544a\u3002 # \u5728\u7ebf\u6253\u5f00\u62a5\u544a $ allure serve /tmp/my_allure_results # \u751f\u6210html\u62a5\u544a allure generate reports/allure -o reports/allure/html \u6b64\u547d\u4ee4\u5c06\u5728\u9ed8\u8ba4\u6d4f\u89c8\u5668\u4e2d\u663e\u793a\u60a8\u751f\u6210\u7684\u62a5\u544a \u8be6\u60c5\u8bf7\u770b\uff1a allure-pytest","title":"allure\u62a5\u544a"},{"location":"user_guide/write_testcase/","text":"\u7f16\u5199\u6d4b\u8bd5\u7528\u4f8b(python) \u5f55\u5236&\u751f\u6210\u6d4b\u8bd5\u7528\u4f8b \u5f53\u4ea7\u54c1\u8fdb\u5165\u88ab\u6d4b\u72b6\u6001\u540e\uff0c\u6700\u6709\u6548\u7387\u7684\u65b9\u5f0f\u662f\u6355\u83b7HTTP\u8bf7\u6c42\uff0c\u5229\u7528HAR\u6587\u4ef6\u751f\u6210\u6d4b\u8bd5\u7528\u4f8b\u3002\u8be6\u60c5\u8bf7\u770b \u5f55\u5236&\u751f\u6210\u6d4b\u8bd5\u7528\u4f8b \u57fa\u4e8e\u751f\u6210\u7684pytest\u7528\u4f8b\uff0c\u4f60\u53ef\u4ee5\u6839\u636e\u9700\u8981\u8fdb\u884c\u8c03\u6574\uff0c\u4ece\u800c\u9700\u8981\u66f4\u591a\u7684\u4e86\u89e3\u7528\u4f8b\u683c\u5f0f\u3002 \u7528\u4f8b\u7ed3\u6784 \u6bcf\u4e2a\u7528\u4f8b\u90fd\u662f HttpRunner \u7684\u5b50\u7c7b\uff0c\u4e14\u5fc5\u987b\u5305\u542b\u5c5e\u6027\uff1a config \u548c teststeps \u3002 config \uff1a\u914d\u7f6e\u6d4b\u8bd5\u7528\u4f8b\uff0c\u5305\u542b base_url , verify , variables , export teststeps \uff1a\u6d4b\u8bd5\u6b65\u9aa4\u7684\u5217\u8868\uff0c\u6bcf\u4e2a\u6b65\u9aa4\u90fd\u5bf9\u5e94\u4e00\u4e2aAPI\u8bf7\u6c42\u6216\u53e6\u4e00\u4e2a\u7528\u4f8b\u7684\u5f15\u7528\uff0c\u53e6\u5916 variables/extract/validate/hooks \u652f\u6301\u521b\u5efa\u6781\u5176\u590d\u6742\u7684\u6d4b\u8bd5\u7528\u4f8b\u3002 from httprunner import HttpRunner, Config, Step, RunRequest, RunTestCase class TestCaseRequestWithFunctions(HttpRunner): config = ( Config(\"request methods testcase with functions\") .variables( **{ \"foo1\": \"config_bar1\", \"foo2\": \"config_bar2\", \"expect_foo1\": \"config_bar1\", \"expect_foo2\": \"config_bar2\", } ) .base_url(\"https://postman-echo.com\") .verify(False) .export(*[\"foo3\"]) ) teststeps = [ Step( RunRequest(\"get with params\") .with_variables( **{\"foo1\": \"bar11\", \"foo2\": \"bar21\", \"sum_v\": \"${sum_two(1, 2)}\"} ) .get(\"/get\") .with_params(**{\"foo1\": \"$foo1\", \"foo2\": \"$foo2\", \"sum_v\": \"$sum_v\"}) .with_headers(**{\"User-Agent\": \"HttpRunner/${get_httprunner_version()}\"}) .extract() .with_jmespath(\"body.args.foo2\", \"foo3\") .validate() .assert_equal(\"status_code\", 200) .assert_equal(\"body.args.foo1\", \"bar11\") .assert_equal(\"body.args.sum_v\", \"3\") .assert_equal(\"body.args.foo2\", \"bar21\") ), Step( RunRequest(\"post form data\") .with_variables(**{\"foo2\": \"bar23\"}) .post(\"/post\") .with_headers( **{ \"User-Agent\": \"HttpRunner/${get_httprunner_version()}\", \"Content-Type\": \"application/x-www-form-urlencoded\", } ) .with_data(\"foo1=$foo1&foo2=$foo2&foo3=$foo3\") .validate() .assert_equal(\"status_code\", 200) .assert_equal(\"body.form.foo1\", \"$expect_foo1\") .assert_equal(\"body.form.foo2\", \"bar23\") .assert_equal(\"body.form.foo3\", \"bar21\") ), ] if __name__ == \"__main__\": TestCaseRequestWithFunctions().test_start() \u8c03\u7528\u94fe HttpRunner v3.x \u6700\u91cd\u8981\u7684\u529f\u80fd\u4e4b\u4e00\u5c31\u662f\u652f\u6301\u8c03\u7528\u94fe\uff0c\u4f7f\u7528\u8c03\u7528\u94fe\uff0c\u4e0d\u9700\u8981\u8bb0\u4f4f\u4efb\u4f55\u6d4b\u8bd5\u7528\u4f8b\u7684\u4fe1\u606f\uff0c\u5728IDE\u4e2d\u7f16\u5199\u6d4b\u8bd5\u7528\u4f8b\u65f6\u5c31\u53ef\u4ee5\u667a\u80fd\u5b8c\u6210\u3002 config \u6bcf\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u90fd\u5e94\u8be5\u6709 config \u90e8\u5206\uff0c\u53ef\u4ee5\u914d\u7f6e\u7528\u4f8b\u7ea7\u522b\u3002 name(\u5fc5\u8981) \u6307\u5b9a\u7528\u4f8b\u540d\uff0c\u5c06\u5728log\u548c\u62a5\u544a\u4e2d\u5c55\u793a\u3002 base_url(\u53ef\u9009) \u6307\u5b9a\u88ab\u6d4b\u4ea7\u54c1\u7684\u901a\u7528Host\uff0c\u4f8b\u5982 https://postman-echo.com \u3002\u5982\u679c base_url \u88ab\u6307\u5b9a\uff0c\u6d4b\u8bd5\u6b65\u9aa4\u4e2d\u7684url\u53ea\u80fd\u5199\u76f8\u5bf9\u8def\u5f84\u3002\u5f53\u4f60\u8981\u5728\u4e0d\u540c\u73af\u5883\u4e0b\u6d4b\u8bd5\u65f6\uff0c\u8fd9\u4e2a\u914d\u7f6e\u975e\u5e38\u6709\u7528\u3002 variables(\u53ef\u9009\u7684) \u6307\u5b9a\u7528\u4f8b\u7684\u901a\u7528\u53c2\u6570\u3002\u6bcf\u4e2a\u6d4b\u8bd5\u6b65\u9aa4\u90fd\u53ef\u4ee5\u5f15\u7528config variables\u3002\u4e5f\u5c31\u662f\u8bf4\uff0cstep variables \u4f18\u5148\u7ea7\u9ad8\u4e8e config variables. verify(\u53ef\u9009\u7684) \u6307\u5b9a\u662f\u5426\u9a8c\u8bc1\u670d\u52a1\u5668\u7684 TLS\u8bc1\u4e66 \u3002 \u5982\u679c\u6211\u4eec\u60f3\u8bb0\u5f55\u6d4b\u8bd5\u7528\u4f8b\u6267\u884c\u7684HTTP\u6d41\u91cf\uff0c\u8fd9\u5c06\u7279\u522b\u6709\u7528\uff0c\u56e0\u4e3a\u5982\u679c\u6ca1\u6709\u8bbe\u7f6everify\u6216\u5c06\u5176\u8bbe\u7f6e\u4e3aTrue\uff0c\u5219\u4f1a\u53d1\u751fSSLError\u3002 export(\u53ef\u9009\u7684) \u6307\u5b9a\u8f93\u51fa\u7684\u6d4b\u8bd5\u7528\u4f8b\u53d8\u91cf\u3002\u5c06\u6bcf\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u770b\u4f5c\u4e00\u4e2a\u9ed1\u76d2\uff0cconfig variables\u662f\u8f93\u5165\u53d8\u91cf\uff0cconfig export\u662f\u8f93\u51fa\u53d8\u91cf\u3002\u5f53\u4e00\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u5728\u53e6\u4e00\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u7684\u6b65\u9aa4\u4e2d\u88ab\u5f15\u7528\u65f6\uff0cconfig export\u5c06\u88ab\u63d0\u53d6\u5e76\u5728\u968f\u540e\u7684\u6d4b\u8bd5\u6b65\u9aa4\u4e2d\u4f7f\u7528\u3002 teststeps \u6bcf\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u90fd\u67091\u4e2a\u6216\u591a\u4e2a\u6d4b\u8bd5\u6b65\u9aa4\uff08List[step]\uff09\uff0c\u6bcf\u4e2a\u6d4b\u8bd5\u6b65\u9aa4\u5bf9\u5e94\u4e00\u4e2aAPI\u8bf7\u6c42\u6216\u5176\u4ed6\u7528\u4f8b\u7684\u5f15\u7528\u3002 \u6ce8\u610f\uff1a\u4e3a\u4e86\u7b80\u5355\uff0c\u5728HttpRunner v2.x\u4e2d\u7684API\u6982\u5ff5\u5df2\u7ecf\u88ab\u53d6\u6d88\u4e86\u3002\u4f60\u53ef\u4ee5\u5c06API\u5b9a\u4e49\u4e3a\u53ea\u6709\u4e00\u4e2a\u8bf7\u6c42\u6b65\u9aa4\u7684\u6d4b\u8bd5\u7528\u4f8b\u3002 RunRequest(name) \u6d4b\u8bd5\u6b65\u9aa4\u4e2d\u7684 RunRequest \u7528\u4e8e\u53d1\u9001API\u8bf7\u6c42\u548c\u6821\u9a8cresponse\u3002 RunRequest\u7684name\u7528\u6765\u5b9a\u4e49\u6d4b\u8bd5\u6b65\u9aa4 name\uff0c\u5c06\u51fa\u73b0\u5728log\u548c\u6d4b\u8bd5\u62a5\u544a\u4e2d\u3002 .with_variables \u8bbe\u7f6e\u6d4b\u8bd5\u6b65\u9aa4\u7684\u53d8\u91cf\u3002\u6bcf\u4e2a\u6d4b\u8bd5\u6b65\u9aa4\u7684\u53d8\u91cf\u90fd\u662f\u72ec\u7acb\u7684\uff0c\u5982\u679c\u60f3\u5728\u591a\u4e2a\u6d4b\u8bd5\u6b65\u9aa4\u4e2d\u5171\u4eab\u53d8\u91cf\uff0c\u9700\u8981\u5728config variables\u4e2d\u5b9a\u4e49\u3002 \u6d4b\u8bd5\u6b65\u9aa4\u4e2d\u7684\u53d8\u91cf\uff0c\u4f1a\u8986\u76d6config variables\u4e2d\u7684\u540c\u540d\u53d8\u91cf\u3002 .method(url) \u8bbe\u7f6ehttp\u65b9\u6cd5\u548cUrl\uff0c\u5bf9\u5e94\u4e8e requests.request \u4e2d\u7684method\u548curl\u3002 \u5982\u679c base_url \u5728config\u4e2d\u8bbe\u7f6e\u4e86\uff0curl\u53ea\u80fd\u662f\u76f8\u5bf9\u8def\u5f84\u90e8\u5206\u3002 .with_params \u8bbe\u7f6eurl\u7684query\uff0c\u76f8\u5f53\u4e8e requests.request \u4e2d\u7684params\u3002 .with_headers \u8bbe\u7f6e\u8bf7\u6c42\u7684headers\uff0c\u76f8\u5f53\u4e8e requests.request \u4e2d\u7684headers\u3002 .with_cookies \u8bbe\u7f6eHttp\u8bf7\u6c42cookies\uff0c\u76f8\u5f53\u4e8e requests.request \u4e2d\u7684cookies\u3002 .whth_data \u8bbe\u7f6eHttp\u7684\u8bf7\u6c42Body\uff0c\u76f8\u5f53\u4e8e requests.request \u4e2d\u7684data\u3002 .with_json \u8bbe\u7f6eHttp\u8bf7\u6c42json\u683c\u5f0f\u7684Body\uff0c\u76f8\u5f53\u4e8e requests.request \u4e2d\u7684json\u3002 extract .WITH_HMESPATH \u5229\u7528 jmespath \u63d0\u53d6Json Response body\u5185\u5bb9\u3002 with_jmespath(jmes_path: Text, var_name: Text) jmespath: jmespath\u8868\u8fbe\u5f0f\uff0c\u8be6\u89c1 JMESPath Tutorial var_name: \u5b58\u50a8\u63d0\u53d6\u503c\u7684\u53d8\u91cf\u540d\uff0c\u53ef\u4ee5\u88ab\u540e\u9762\u7684\u6d4b\u8bd5\u6b65\u9aa4\u5f15\u7528\u3002 validate .assert_XXX \u7528 jmespath \u63d0\u53d6response body\uff0c\u5e76\u9a8c\u8bc1\u63d0\u53d6\u503c\u3002 assert_XXX(jmespath: Text, expected_value: ANy, message: Text=\"\") jmespath: jmespath\u8868\u8fbe\u5f0f\uff0c\u8be6\u89c1 JMESPath Tutorial expected_value: \u6307\u5b9a\u671f\u671b\u503c\u6216\u53d8\u91cf\uff0c\u4e5f\u53ef\u4ee5\u8c03\u7528\u65b9\u6cd5 message(optional): \u7528\u4e8e\u63cf\u8ff0\u65ad\u8a00\u5931\u8d25\u539f\u56e0 \u4e0b\u56fe\u5c55\u793aHttpRunner\u5185\u7f6e\u65ad\u8a00\uff1a RuntestCase(name) RunTestCase \u7528\u4e8e\u5728\u6d4b\u8bd5\u6b65\u9aa4\u4e2d\u5f15\u7528\u5176\u4ed6\u6d4b\u8bd5\u7528\u4f8b\u3002 RunTestCase\u7684 name \u7528\u4e8e\u6307\u5b9ateststep name\uff0c\u5c06\u4f1a\u5728\u6267\u884clog\u548c\u6d4b\u8bd5\u62a5\u544a\u4e2d\u5c55\u793a\u3002 .with_variables \u8ddfRunRequest\u7684 .with_variables \u4e00\u6837\u3002 .call \u6307\u5b9a\u5f15\u7528\u7684\u6d4b\u8bd5\u7528\u4f8b\u7c7b\u3002 .export \u6307\u5b9a\u4ece\u5f15\u7528\u7684\u6d4b\u8bd5\u7528\u4f8b\u4e2d\u63d0\u53d6\u7684\u53d8\u91cf\u540d\u3002\u8be5\u53d8\u91cf\u5728\u540e\u9762\u7684test steps\u4e2d\u53ef\u4ee5\u5f15\u7528\u3002 import os import sys sys.path.insert(0, os.getcwd()) from httprunner import HttpRunner, Config, Step, RunRequest, RunTestCase from examples.postman_echo.request_methods.request_with_functions_test import ( TestCaseRequestWithFunctions as RequestWithFunctions, ) class TestCaseRequestWithTestcaseReference(HttpRunner): config = ( Config(\"request methods testcase: reference testcase\") .variables( **{ \"foo1\": \"testsuite_config_bar1\", \"expect_foo1\": \"testsuite_config_bar1\", \"expect_foo2\": \"config_bar2\", } ) .base_url(\"https://postman-echo.com\") .verify(False) ) teststeps = [ Step( RunTestCase(\"request with functions\") .with_variables( **{\"foo1\": \"testcase_ref_bar1\", \"expect_foo1\": \"testcase_ref_bar1\"} ) .call(RequestWithFunctions) .export(*[\"foo3\"]) ), Step( RunRequest(\"post form data\") .with_variables(**{\"foo1\": \"bar1\"}) .post(\"/post\") .with_headers( **{ \"User-Agent\": \"HttpRunner/${get_httprunner_version()}\", \"Content-Type\": \"application/x-www-form-urlencoded\", } ) .with_data(\"foo1=$foo1&foo2=$foo3\") .validate() .assert_equal(\"status_code\", 200) .assert_equal(\"body.form.foo1\", \"bar1\") .assert_equal(\"body.form.foo2\", \"bar21\") ), ] if __name__ == \"__main__\": TestCaseRequestWithTestcaseReference().test_start()","title":"\u7f16\u5199\u6d4b\u8bd5\u7528\u4f8b(python)"},{"location":"user_guide/write_testcase/#python","text":"","title":"\u7f16\u5199\u6d4b\u8bd5\u7528\u4f8b(python)"},{"location":"user_guide/write_testcase/#_1","text":"\u5f53\u4ea7\u54c1\u8fdb\u5165\u88ab\u6d4b\u72b6\u6001\u540e\uff0c\u6700\u6709\u6548\u7387\u7684\u65b9\u5f0f\u662f\u6355\u83b7HTTP\u8bf7\u6c42\uff0c\u5229\u7528HAR\u6587\u4ef6\u751f\u6210\u6d4b\u8bd5\u7528\u4f8b\u3002\u8be6\u60c5\u8bf7\u770b \u5f55\u5236&\u751f\u6210\u6d4b\u8bd5\u7528\u4f8b \u57fa\u4e8e\u751f\u6210\u7684pytest\u7528\u4f8b\uff0c\u4f60\u53ef\u4ee5\u6839\u636e\u9700\u8981\u8fdb\u884c\u8c03\u6574\uff0c\u4ece\u800c\u9700\u8981\u66f4\u591a\u7684\u4e86\u89e3\u7528\u4f8b\u683c\u5f0f\u3002","title":"\u5f55\u5236&amp;\u751f\u6210\u6d4b\u8bd5\u7528\u4f8b"},{"location":"user_guide/write_testcase/#_2","text":"\u6bcf\u4e2a\u7528\u4f8b\u90fd\u662f HttpRunner \u7684\u5b50\u7c7b\uff0c\u4e14\u5fc5\u987b\u5305\u542b\u5c5e\u6027\uff1a config \u548c teststeps \u3002 config \uff1a\u914d\u7f6e\u6d4b\u8bd5\u7528\u4f8b\uff0c\u5305\u542b base_url , verify , variables , export teststeps \uff1a\u6d4b\u8bd5\u6b65\u9aa4\u7684\u5217\u8868\uff0c\u6bcf\u4e2a\u6b65\u9aa4\u90fd\u5bf9\u5e94\u4e00\u4e2aAPI\u8bf7\u6c42\u6216\u53e6\u4e00\u4e2a\u7528\u4f8b\u7684\u5f15\u7528\uff0c\u53e6\u5916 variables/extract/validate/hooks \u652f\u6301\u521b\u5efa\u6781\u5176\u590d\u6742\u7684\u6d4b\u8bd5\u7528\u4f8b\u3002 from httprunner import HttpRunner, Config, Step, RunRequest, RunTestCase class TestCaseRequestWithFunctions(HttpRunner): config = ( Config(\"request methods testcase with functions\") .variables( **{ \"foo1\": \"config_bar1\", \"foo2\": \"config_bar2\", \"expect_foo1\": \"config_bar1\", \"expect_foo2\": \"config_bar2\", } ) .base_url(\"https://postman-echo.com\") .verify(False) .export(*[\"foo3\"]) ) teststeps = [ Step( RunRequest(\"get with params\") .with_variables( **{\"foo1\": \"bar11\", \"foo2\": \"bar21\", \"sum_v\": \"${sum_two(1, 2)}\"} ) .get(\"/get\") .with_params(**{\"foo1\": \"$foo1\", \"foo2\": \"$foo2\", \"sum_v\": \"$sum_v\"}) .with_headers(**{\"User-Agent\": \"HttpRunner/${get_httprunner_version()}\"}) .extract() .with_jmespath(\"body.args.foo2\", \"foo3\") .validate() .assert_equal(\"status_code\", 200) .assert_equal(\"body.args.foo1\", \"bar11\") .assert_equal(\"body.args.sum_v\", \"3\") .assert_equal(\"body.args.foo2\", \"bar21\") ), Step( RunRequest(\"post form data\") .with_variables(**{\"foo2\": \"bar23\"}) .post(\"/post\") .with_headers( **{ \"User-Agent\": \"HttpRunner/${get_httprunner_version()}\", \"Content-Type\": \"application/x-www-form-urlencoded\", } ) .with_data(\"foo1=$foo1&foo2=$foo2&foo3=$foo3\") .validate() .assert_equal(\"status_code\", 200) .assert_equal(\"body.form.foo1\", \"$expect_foo1\") .assert_equal(\"body.form.foo2\", \"bar23\") .assert_equal(\"body.form.foo3\", \"bar21\") ), ] if __name__ == \"__main__\": TestCaseRequestWithFunctions().test_start()","title":"\u7528\u4f8b\u7ed3\u6784"},{"location":"user_guide/write_testcase/#_3","text":"HttpRunner v3.x \u6700\u91cd\u8981\u7684\u529f\u80fd\u4e4b\u4e00\u5c31\u662f\u652f\u6301\u8c03\u7528\u94fe\uff0c\u4f7f\u7528\u8c03\u7528\u94fe\uff0c\u4e0d\u9700\u8981\u8bb0\u4f4f\u4efb\u4f55\u6d4b\u8bd5\u7528\u4f8b\u7684\u4fe1\u606f\uff0c\u5728IDE\u4e2d\u7f16\u5199\u6d4b\u8bd5\u7528\u4f8b\u65f6\u5c31\u53ef\u4ee5\u667a\u80fd\u5b8c\u6210\u3002","title":"\u8c03\u7528\u94fe"},{"location":"user_guide/write_testcase/#config","text":"\u6bcf\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u90fd\u5e94\u8be5\u6709 config \u90e8\u5206\uff0c\u53ef\u4ee5\u914d\u7f6e\u7528\u4f8b\u7ea7\u522b\u3002","title":"config"},{"location":"user_guide/write_testcase/#name","text":"\u6307\u5b9a\u7528\u4f8b\u540d\uff0c\u5c06\u5728log\u548c\u62a5\u544a\u4e2d\u5c55\u793a\u3002","title":"name(\u5fc5\u8981)"},{"location":"user_guide/write_testcase/#base_url","text":"\u6307\u5b9a\u88ab\u6d4b\u4ea7\u54c1\u7684\u901a\u7528Host\uff0c\u4f8b\u5982 https://postman-echo.com \u3002\u5982\u679c base_url \u88ab\u6307\u5b9a\uff0c\u6d4b\u8bd5\u6b65\u9aa4\u4e2d\u7684url\u53ea\u80fd\u5199\u76f8\u5bf9\u8def\u5f84\u3002\u5f53\u4f60\u8981\u5728\u4e0d\u540c\u73af\u5883\u4e0b\u6d4b\u8bd5\u65f6\uff0c\u8fd9\u4e2a\u914d\u7f6e\u975e\u5e38\u6709\u7528\u3002","title":"base_url(\u53ef\u9009)"},{"location":"user_guide/write_testcase/#variables","text":"\u6307\u5b9a\u7528\u4f8b\u7684\u901a\u7528\u53c2\u6570\u3002\u6bcf\u4e2a\u6d4b\u8bd5\u6b65\u9aa4\u90fd\u53ef\u4ee5\u5f15\u7528config variables\u3002\u4e5f\u5c31\u662f\u8bf4\uff0cstep variables \u4f18\u5148\u7ea7\u9ad8\u4e8e config variables.","title":"variables(\u53ef\u9009\u7684)"},{"location":"user_guide/write_testcase/#verify","text":"\u6307\u5b9a\u662f\u5426\u9a8c\u8bc1\u670d\u52a1\u5668\u7684 TLS\u8bc1\u4e66 \u3002 \u5982\u679c\u6211\u4eec\u60f3\u8bb0\u5f55\u6d4b\u8bd5\u7528\u4f8b\u6267\u884c\u7684HTTP\u6d41\u91cf\uff0c\u8fd9\u5c06\u7279\u522b\u6709\u7528\uff0c\u56e0\u4e3a\u5982\u679c\u6ca1\u6709\u8bbe\u7f6everify\u6216\u5c06\u5176\u8bbe\u7f6e\u4e3aTrue\uff0c\u5219\u4f1a\u53d1\u751fSSLError\u3002","title":"verify(\u53ef\u9009\u7684)"},{"location":"user_guide/write_testcase/#export","text":"\u6307\u5b9a\u8f93\u51fa\u7684\u6d4b\u8bd5\u7528\u4f8b\u53d8\u91cf\u3002\u5c06\u6bcf\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u770b\u4f5c\u4e00\u4e2a\u9ed1\u76d2\uff0cconfig variables\u662f\u8f93\u5165\u53d8\u91cf\uff0cconfig export\u662f\u8f93\u51fa\u53d8\u91cf\u3002\u5f53\u4e00\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u5728\u53e6\u4e00\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u7684\u6b65\u9aa4\u4e2d\u88ab\u5f15\u7528\u65f6\uff0cconfig export\u5c06\u88ab\u63d0\u53d6\u5e76\u5728\u968f\u540e\u7684\u6d4b\u8bd5\u6b65\u9aa4\u4e2d\u4f7f\u7528\u3002","title":"export(\u53ef\u9009\u7684)"},{"location":"user_guide/write_testcase/#teststeps","text":"\u6bcf\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u90fd\u67091\u4e2a\u6216\u591a\u4e2a\u6d4b\u8bd5\u6b65\u9aa4\uff08List[step]\uff09\uff0c\u6bcf\u4e2a\u6d4b\u8bd5\u6b65\u9aa4\u5bf9\u5e94\u4e00\u4e2aAPI\u8bf7\u6c42\u6216\u5176\u4ed6\u7528\u4f8b\u7684\u5f15\u7528\u3002 \u6ce8\u610f\uff1a\u4e3a\u4e86\u7b80\u5355\uff0c\u5728HttpRunner v2.x\u4e2d\u7684API\u6982\u5ff5\u5df2\u7ecf\u88ab\u53d6\u6d88\u4e86\u3002\u4f60\u53ef\u4ee5\u5c06API\u5b9a\u4e49\u4e3a\u53ea\u6709\u4e00\u4e2a\u8bf7\u6c42\u6b65\u9aa4\u7684\u6d4b\u8bd5\u7528\u4f8b\u3002","title":"teststeps"},{"location":"user_guide/write_testcase/#runrequestname","text":"\u6d4b\u8bd5\u6b65\u9aa4\u4e2d\u7684 RunRequest \u7528\u4e8e\u53d1\u9001API\u8bf7\u6c42\u548c\u6821\u9a8cresponse\u3002 RunRequest\u7684name\u7528\u6765\u5b9a\u4e49\u6d4b\u8bd5\u6b65\u9aa4 name\uff0c\u5c06\u51fa\u73b0\u5728log\u548c\u6d4b\u8bd5\u62a5\u544a\u4e2d\u3002","title":"RunRequest(name)"},{"location":"user_guide/write_testcase/#with_variables","text":"\u8bbe\u7f6e\u6d4b\u8bd5\u6b65\u9aa4\u7684\u53d8\u91cf\u3002\u6bcf\u4e2a\u6d4b\u8bd5\u6b65\u9aa4\u7684\u53d8\u91cf\u90fd\u662f\u72ec\u7acb\u7684\uff0c\u5982\u679c\u60f3\u5728\u591a\u4e2a\u6d4b\u8bd5\u6b65\u9aa4\u4e2d\u5171\u4eab\u53d8\u91cf\uff0c\u9700\u8981\u5728config variables\u4e2d\u5b9a\u4e49\u3002 \u6d4b\u8bd5\u6b65\u9aa4\u4e2d\u7684\u53d8\u91cf\uff0c\u4f1a\u8986\u76d6config variables\u4e2d\u7684\u540c\u540d\u53d8\u91cf\u3002","title":".with_variables"},{"location":"user_guide/write_testcase/#methodurl","text":"\u8bbe\u7f6ehttp\u65b9\u6cd5\u548cUrl\uff0c\u5bf9\u5e94\u4e8e requests.request \u4e2d\u7684method\u548curl\u3002 \u5982\u679c base_url \u5728config\u4e2d\u8bbe\u7f6e\u4e86\uff0curl\u53ea\u80fd\u662f\u76f8\u5bf9\u8def\u5f84\u90e8\u5206\u3002","title":".method(url)"},{"location":"user_guide/write_testcase/#with_params","text":"\u8bbe\u7f6eurl\u7684query\uff0c\u76f8\u5f53\u4e8e requests.request \u4e2d\u7684params\u3002","title":".with_params"},{"location":"user_guide/write_testcase/#with_headers","text":"\u8bbe\u7f6e\u8bf7\u6c42\u7684headers\uff0c\u76f8\u5f53\u4e8e requests.request \u4e2d\u7684headers\u3002","title":".with_headers"},{"location":"user_guide/write_testcase/#with_cookies","text":"\u8bbe\u7f6eHttp\u8bf7\u6c42cookies\uff0c\u76f8\u5f53\u4e8e requests.request \u4e2d\u7684cookies\u3002","title":".with_cookies"},{"location":"user_guide/write_testcase/#whth_data","text":"\u8bbe\u7f6eHttp\u7684\u8bf7\u6c42Body\uff0c\u76f8\u5f53\u4e8e requests.request \u4e2d\u7684data\u3002","title":".whth_data"},{"location":"user_guide/write_testcase/#with_json","text":"\u8bbe\u7f6eHttp\u8bf7\u6c42json\u683c\u5f0f\u7684Body\uff0c\u76f8\u5f53\u4e8e requests.request \u4e2d\u7684json\u3002","title":".with_json"},{"location":"user_guide/write_testcase/#extract","text":"","title":"extract"},{"location":"user_guide/write_testcase/#with_hmespath","text":"\u5229\u7528 jmespath \u63d0\u53d6Json Response body\u5185\u5bb9\u3002 with_jmespath(jmes_path: Text, var_name: Text) jmespath: jmespath\u8868\u8fbe\u5f0f\uff0c\u8be6\u89c1 JMESPath Tutorial var_name: \u5b58\u50a8\u63d0\u53d6\u503c\u7684\u53d8\u91cf\u540d\uff0c\u53ef\u4ee5\u88ab\u540e\u9762\u7684\u6d4b\u8bd5\u6b65\u9aa4\u5f15\u7528\u3002","title":".WITH_HMESPATH"},{"location":"user_guide/write_testcase/#validate","text":"","title":"validate"},{"location":"user_guide/write_testcase/#assert_xxx","text":"\u7528 jmespath \u63d0\u53d6response body\uff0c\u5e76\u9a8c\u8bc1\u63d0\u53d6\u503c\u3002 assert_XXX(jmespath: Text, expected_value: ANy, message: Text=\"\") jmespath: jmespath\u8868\u8fbe\u5f0f\uff0c\u8be6\u89c1 JMESPath Tutorial expected_value: \u6307\u5b9a\u671f\u671b\u503c\u6216\u53d8\u91cf\uff0c\u4e5f\u53ef\u4ee5\u8c03\u7528\u65b9\u6cd5 message(optional): \u7528\u4e8e\u63cf\u8ff0\u65ad\u8a00\u5931\u8d25\u539f\u56e0 \u4e0b\u56fe\u5c55\u793aHttpRunner\u5185\u7f6e\u65ad\u8a00\uff1a","title":".assert_XXX"},{"location":"user_guide/write_testcase/#runtestcasename","text":"RunTestCase \u7528\u4e8e\u5728\u6d4b\u8bd5\u6b65\u9aa4\u4e2d\u5f15\u7528\u5176\u4ed6\u6d4b\u8bd5\u7528\u4f8b\u3002 RunTestCase\u7684 name \u7528\u4e8e\u6307\u5b9ateststep name\uff0c\u5c06\u4f1a\u5728\u6267\u884clog\u548c\u6d4b\u8bd5\u62a5\u544a\u4e2d\u5c55\u793a\u3002","title":"RuntestCase(name)"},{"location":"user_guide/write_testcase/#with_variables_1","text":"\u8ddfRunRequest\u7684 .with_variables \u4e00\u6837\u3002","title":".with_variables"},{"location":"user_guide/write_testcase/#call","text":"\u6307\u5b9a\u5f15\u7528\u7684\u6d4b\u8bd5\u7528\u4f8b\u7c7b\u3002","title":".call"},{"location":"user_guide/write_testcase/#export_1","text":"\u6307\u5b9a\u4ece\u5f15\u7528\u7684\u6d4b\u8bd5\u7528\u4f8b\u4e2d\u63d0\u53d6\u7684\u53d8\u91cf\u540d\u3002\u8be5\u53d8\u91cf\u5728\u540e\u9762\u7684test steps\u4e2d\u53ef\u4ee5\u5f15\u7528\u3002 import os import sys sys.path.insert(0, os.getcwd()) from httprunner import HttpRunner, Config, Step, RunRequest, RunTestCase from examples.postman_echo.request_methods.request_with_functions_test import ( TestCaseRequestWithFunctions as RequestWithFunctions, ) class TestCaseRequestWithTestcaseReference(HttpRunner): config = ( Config(\"request methods testcase: reference testcase\") .variables( **{ \"foo1\": \"testsuite_config_bar1\", \"expect_foo1\": \"testsuite_config_bar1\", \"expect_foo2\": \"config_bar2\", } ) .base_url(\"https://postman-echo.com\") .verify(False) ) teststeps = [ Step( RunTestCase(\"request with functions\") .with_variables( **{\"foo1\": \"testcase_ref_bar1\", \"expect_foo1\": \"testcase_ref_bar1\"} ) .call(RequestWithFunctions) .export(*[\"foo3\"]) ), Step( RunRequest(\"post form data\") .with_variables(**{\"foo1\": \"bar1\"}) .post(\"/post\") .with_headers( **{ \"User-Agent\": \"HttpRunner/${get_httprunner_version()}\", \"Content-Type\": \"application/x-www-form-urlencoded\", } ) .with_data(\"foo1=$foo1&foo2=$foo3\") .validate() .assert_equal(\"status_code\", 200) .assert_equal(\"body.form.foo1\", \"bar1\") .assert_equal(\"body.form.foo2\", \"bar21\") ), ] if __name__ == \"__main__\": TestCaseRequestWithTestcaseReference().test_start()","title":".export"}]}